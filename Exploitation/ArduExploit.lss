
../../bin/sample/yun/sample.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn  Flags
  0 .data         00000232  00800100  000041a2  00004236  2**0  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000041a2  00000000  00000000  00000094  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000001d3  00800332  00800332  00004468  2**0  ALLOC
  3 .comment      00000011  00000000  00000000  00004468  2**0  CONTENTS, READONLY
  4 .debug_aranges 00000920  00000000  00000000  00004479  2**0  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0001a8cc  00000000  00000000  00004d99  2**0  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00003959  00000000  00000000  0001f665  2**0  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000038a7  00000000  00000000  00022fbe  2**0  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00002044  00000000  00000000  00026868  2**2  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00003817  00000000  00000000  000288ac  2**0  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000bfc3  00000000  00000000  0002c0c3  2**0  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000b28  00000000  00000000  00038086  2**0  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 a7 01 	jmp	0x34e	; 0x34e <__dtors_end>
       4:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__bad_interrupt>
       8:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__bad_interrupt>
       c:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__bad_interrupt>
      10:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__bad_interrupt>
      14:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__bad_interrupt>
      18:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__bad_interrupt>
      1c:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__bad_interrupt>
      20:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__bad_interrupt>
      24:	0c 94 e1 17 	jmp	0x2fc2	; 0x2fc2 <__vector_9>
      28:	0c 94 47 10 	jmp	0x208e	; 0x208e <__vector_10>
      2c:	0c 94 13 0f 	jmp	0x1e26	; 0x1e26 <__vector_11>
      30:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__bad_interrupt>
      34:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__bad_interrupt>
      38:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__bad_interrupt>
      3c:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__bad_interrupt>
      40:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__bad_interrupt>
      44:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__bad_interrupt>
      48:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__bad_interrupt>
      4c:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__bad_interrupt>
      50:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__bad_interrupt>
      54:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__bad_interrupt>
      58:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__bad_interrupt>
      5c:	0c 94 bc 07 	jmp	0xf78	; 0xf78 <__vector_23>
      60:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__bad_interrupt>
      64:	0c 94 cf 1a 	jmp	0x359e	; 0x359e <__vector_25>
      68:	0c 94 01 1b 	jmp	0x3602	; 0x3602 <__vector_26>
      6c:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__bad_interrupt>
      70:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__bad_interrupt>
      74:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__bad_interrupt>
      78:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__bad_interrupt>
      7c:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__bad_interrupt>
      80:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__bad_interrupt>
      84:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__bad_interrupt>
      88:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__bad_interrupt>
      8c:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__bad_interrupt>
      90:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__bad_interrupt>
      94:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__bad_interrupt>
      98:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__bad_interrupt>
      9c:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__bad_interrupt>
      a0:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__bad_interrupt>
      a4:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__bad_interrupt>
      a8:	0c 94 cf 01 	jmp	0x39e	; 0x39e <__bad_interrupt>
      ac:	cb 08       	sbc	r12, r11
      ae:	ce 08       	sbc	r12, r14
      b0:	bd 08       	sbc	r11, r13
      b2:	c1 08       	sbc	r12, r1
      b4:	c7 08       	sbc	r12, r7
      b6:	ef 08       	sbc	r14, r15
      b8:	ef 08       	sbc	r14, r15
      ba:	ef 08       	sbc	r14, r15
      bc:	d2 08       	sbc	r13, r2
      be:	d6 08       	sbc	r13, r6
      c0:	da 08       	sbc	r13, r10
      c2:	e0 08       	sbc	r14, r0
      c4:	e4 08       	sbc	r14, r4
      c6:	ef 08       	sbc	r14, r15
      c8:	ea 08       	sbc	r14, r10

000000ca <__trampolines_end>:
      ca:	53 65       	ori	r21, 0x53	; 83
      cc:	74 75       	andi	r23, 0x54	; 84
      ce:	70 20       	and	r7, r0
      d0:	4f 4b       	sbci	r20, 0xBF	; 191
      d2:	2e 2e       	mov	r2, r30
      d4:	2e 0a       	sbc	r2, r30
	...

000000d7 <setup::__c>:
      d7:	0a 42 52 49 44 47 45 20 44 4f 4e 45 2e 2e 2e 00     .BRIDGE DONE....

000000e7 <setup::__c>:
      e7:	0a 53 74 61 72 74 69 6e 67 20 42 72 69 64 67 65     .Starting Bridge
      f7:	2e 2e 2e 00                                         ....

000000fb <setup::__c>:
      fb:	53 65 74 75 70 20 6f 6c 64 20 63 6f 6e 66 69 67     Setup old config
     10b:	75 72 61 74 69 6f 6e 20 69 6e 20 42 54 20 64 65     uration in BT de
     11b:	76 69 63 65 20 2d 3e 20 4f 4b 20 00                 vice -> OK .

00000127 <digital_pin_to_timer_PGM>:
     127:	00 00 00 02 00 09 0f 00 00 03 04 01 00 0c 00 00     ................
	...

00000145 <digital_pin_to_bit_mask_PGM>:
     145:	04 08 02 01 10 40 80 40 10 20 40 80 40 80 08 02     .....@.@. @.@...
     155:	04 01 80 40 20 10 02 01 10 80 10 20 40 40           ...@ ...... @@

00000163 <digital_pin_to_port_PGM>:
     163:	04 04 04 04 04 03 04 05 02 02 02 02 04 03 02 02     ................
     173:	02 02 06 06 06 06 06 06 04 04 02 02 02 04           ..............

00000181 <port_to_input_PGM>:
     181:	00 00 00 00 23 00 26 00 29 00 2c 00 2f 00           ....#.&.).,./.

0000018f <port_to_output_PGM>:
     18f:	00 00 00 00 25 00 28 00 2b 00 2e 00 31 00           ....%.(.+...1.

0000019d <port_to_mode_PGM>:
     19d:	00 00 00 00 24 00 27 00 2a 00 2d 00 30 00           ....$.'.*.-.0.

000001ab <_cdcInterface>:
     1ab:	08 0b 00 02 02 02 01 00 09 04 00 00 01 02 02 00     ................
     1bb:	00 05 24 00 10 01 05 24 01 01 01 04 24 02 06 05     ..$....$....$...
     1cb:	24 06 00 01 07 05 81 03 10 00 40 09 04 01 00 02     $.........@.....
     1db:	0a 00 00 00 07 05 02 02 40 00 00 07 05 83 02 40     ........@......@
	...

000001ed <_initEndpoints>:
     1ed:	00 c1 80 81 c1                                      .....

000001f2 <USB_DeviceDescriptorA>:
     1f2:	12 01 00 02 02 00 00 40 41 23 41 80 00 01 01 02     .......@A#A.....
     202:	00 01                                               ..

00000204 <USB_DeviceDescriptor>:
     204:	12 01 00 02 00 00 00 40 41 23 41 80 00 01 01 02     .......@A#A.....
     214:	00 01                                               ..

00000216 <STRING_MANUFACTURER>:
     216:	41 72 64 75 69 6e 6f 20 4c 4c 43 00                 Arduino LLC.

00000222 <STRING_PRODUCT>:
     222:	55 53 42 20 49 4f 20 42 6f 61 72 64 00              USB IO Board.

0000022f <STRING_LANGUAGE>:
     22f:	04 03 09 04                                         ....

00000233 <BridgeClass::begin()::__c>:
     233:	72 75 6e 2d 62 72 69 64 67 65 0a 00                 run-bridge..

0000023f <BridgeClass::begin()::__c>:
     23f:	0a 00                                               ..

00000241 <BridgeClass::begin()::__c>:
     241:	0a 00                                               ..

00000243 <_asciimap>:
	...
     24b:	2a 2b 28 00 00 00 00 00 00 00 00 00 00 00 00 00     *+(.............
	...
     263:	2c 9e b4 a0 a1 a2 a4 34 a6 a7 a5 ae 36 2d 37 38     ,......4....6-78
     273:	27 1e 1f 20 21 22 23 24 25 26 b3 33 b6 2e b7 b8     '.. !"#$%&.3....
     283:	9f 84 85 86 87 88 89 8a 8b 8c 8d 8e 8f 90 91 92     ................
     293:	93 94 95 96 97 98 99 9a 9b 9c 9d 2f 31 30 a3 ad     .........../10..
     2a3:	35 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10 11 12     5...............
     2b3:	13 14 15 16 17 18 19 1a 1b 1c 1d af b1 b0 b5 00     ................

000002c3 <_hidInterface>:
     2c3:	09 04 02 00 01 03 00 00 00 09 21 01 01 00 01 22     ..........!...."
     2d3:	65 00 07 05 84 03 40 00 01                          e.....@..

000002dc <_hidReportDescriptor>:
     2dc:	05 01 09 02 a1 01 09 01 a1 00 85 01 05 09 19 01     ................
     2ec:	29 03 15 00 25 01 95 03 75 01 81 02 95 01 75 05     )...%...u.....u.
     2fc:	81 03 05 01 09 30 09 31 09 38 15 81 25 7f 75 08     .....0.1.8..%.u.
     30c:	95 03 81 06 c0 c0 05 01 09 06 a1 01 85 02 05 07     ................
     31c:	19 e0 29 e7 15 00 25 01 75 01 95 08 81 02 95 01     ..)...%.u.......
     32c:	75 08 81 03 95 06 75 08 15 00 25 65 05 07 19 00     u.....u...%e....
     33c:	29 65 81 00 c0 00                                   )e....

00000342 <__ctors_start>:
     342:	6f 06       	cpc	r6, r31
     344:	22 0a       	sbc	r2, r18
     346:	bd 14       	cp	r11, r13
     348:	c2 1a       	sub	r12, r18
     34a:	31 1b       	sub	r19, r17

0000034c <__ctors_end>:
     34c:	98 06       	cpc	r9, r24

0000034e <__dtors_end>:
     34e:	11 24       	eor	r1, r1
     350:	1f be       	out	0x3f, r1	; 63
     352:	cf ef       	ldi	r28, 0xFF	; 255
     354:	da e0       	ldi	r29, 0x0A	; 10
     356:	de bf       	out	0x3e, r29	; 62
     358:	cd bf       	out	0x3d, r28	; 61

0000035a <__do_copy_data>:
     35a:	13 e0       	ldi	r17, 0x03	; 3
     35c:	a0 e0       	ldi	r26, 0x00	; 0
     35e:	b1 e0       	ldi	r27, 0x01	; 1
     360:	e2 ea       	ldi	r30, 0xA2	; 162
     362:	f1 e4       	ldi	r31, 0x41	; 65
     364:	02 c0       	rjmp	.+4      	; 0x36a <__do_copy_data+0x10>
     366:	05 90       	lpm	r0, Z+
     368:	0d 92       	st	X+, r0
     36a:	a2 33       	cpi	r26, 0x32	; 50
     36c:	b1 07       	cpc	r27, r17
     36e:	d9 f7       	brne	.-10     	; 0x366 <__do_copy_data+0xc>

00000370 <__do_clear_bss>:
     370:	25 e0       	ldi	r18, 0x05	; 5
     372:	a2 e3       	ldi	r26, 0x32	; 50
     374:	b3 e0       	ldi	r27, 0x03	; 3
     376:	01 c0       	rjmp	.+2      	; 0x37a <.do_clear_bss_start>

00000378 <.do_clear_bss_loop>:
     378:	1d 92       	st	X+, r1

0000037a <.do_clear_bss_start>:
     37a:	a5 30       	cpi	r26, 0x05	; 5
     37c:	b2 07       	cpc	r27, r18
     37e:	e1 f7       	brne	.-8      	; 0x378 <.do_clear_bss_loop>

00000380 <__do_global_ctors>:
     380:	13 e0       	ldi	r17, 0x03	; 3
     382:	cc e4       	ldi	r28, 0x4C	; 76
     384:	d3 e0       	ldi	r29, 0x03	; 3
     386:	04 c0       	rjmp	.+8      	; 0x390 <__do_global_ctors+0x10>
     388:	22 97       	sbiw	r28, 0x02	; 2
     38a:	fe 01       	movw	r30, r28
     38c:	0e 94 75 20 	call	0x40ea	; 0x40ea <__tablejump__>
     390:	c2 34       	cpi	r28, 0x42	; 66
     392:	d1 07       	cpc	r29, r17
     394:	c9 f7       	brne	.-14     	; 0x388 <__do_global_ctors+0x8>
     396:	0e 94 a3 11 	call	0x2346	; 0x2346 <main>
     39a:	0c 94 69 1d 	jmp	0x3ad2	; 0x3ad2 <exit>

0000039e <__bad_interrupt>:
     39e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003a2 <setup>:
     3a2:	40 e8       	ldi	r20, 0x80	; 128
     3a4:	55 e2       	ldi	r21, 0x25	; 37
     3a6:	60 e0       	ldi	r22, 0x00	; 0
     3a8:	70 e0       	ldi	r23, 0x00	; 0
     3aa:	8f ea       	ldi	r24, 0xAF	; 175
     3ac:	93 e0       	ldi	r25, 0x03	; 3
     3ae:	0e 94 1c 0a 	call	0x1438	; 0x1438 <Serial_::begin(unsigned long)>
     3b2:	68 ec       	ldi	r22, 0xC8	; 200
     3b4:	70 e0       	ldi	r23, 0x00	; 0
     3b6:	80 e0       	ldi	r24, 0x00	; 0
     3b8:	90 e0       	ldi	r25, 0x00	; 0
     3ba:	0e 94 35 08 	call	0x106a	; 0x106a <delay>
     3be:	61 e0       	ldi	r22, 0x01	; 1
     3c0:	8d e0       	ldi	r24, 0x0D	; 13
     3c2:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <pinMode>
     3c6:	40 e8       	ldi	r20, 0x80	; 128
     3c8:	55 e2       	ldi	r21, 0x25	; 37
     3ca:	60 e0       	ldi	r22, 0x00	; 0
     3cc:	70 e0       	ldi	r23, 0x00	; 0
     3ce:	82 e3       	ldi	r24, 0x32	; 50
     3d0:	93 e0       	ldi	r25, 0x03	; 3
     3d2:	0e 94 e4 18 	call	0x31c8	; 0x31c8 <SoftwareSerial::begin(long)>
     3d6:	68 ee       	ldi	r22, 0xE8	; 232
     3d8:	73 e0       	ldi	r23, 0x03	; 3
     3da:	80 e0       	ldi	r24, 0x00	; 0
     3dc:	90 e0       	ldi	r25, 0x00	; 0
     3de:	0e 94 35 08 	call	0x106a	; 0x106a <delay>
     3e2:	6b ef       	ldi	r22, 0xFB	; 251
     3e4:	70 e0       	ldi	r23, 0x00	; 0
     3e6:	8f ea       	ldi	r24, 0xAF	; 175
     3e8:	93 e0       	ldi	r25, 0x03	; 3
     3ea:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <Print::println(__FlashStringHelper const*)>
     3ee:	67 ee       	ldi	r22, 0xE7	; 231
     3f0:	70 e0       	ldi	r23, 0x00	; 0
     3f2:	8f ea       	ldi	r24, 0xAF	; 175
     3f4:	93 e0       	ldi	r25, 0x03	; 3
     3f6:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <Print::println(__FlashStringHelper const*)>
     3fa:	26 e0       	ldi	r18, 0x06	; 6
     3fc:	40 e9       	ldi	r20, 0x90	; 144
     3fe:	50 ed       	ldi	r21, 0xD0	; 208
     400:	63 e0       	ldi	r22, 0x03	; 3
     402:	70 e0       	ldi	r23, 0x00	; 0
     404:	80 91 11 04 	lds	r24, 0x0411
     408:	90 91 12 04 	lds	r25, 0x0412
     40c:	0e 94 22 0b 	call	0x1644	; 0x1644 <HardwareSerial::begin(unsigned long, unsigned char)>
     410:	88 e0       	ldi	r24, 0x08	; 8
     412:	94 e0       	ldi	r25, 0x04	; 4
     414:	0e 94 b6 13 	call	0x276c	; 0x276c <BridgeClass::begin()>
     418:	67 ed       	ldi	r22, 0xD7	; 215
     41a:	70 e0       	ldi	r23, 0x00	; 0
     41c:	8f ea       	ldi	r24, 0xAF	; 175
     41e:	93 e0       	ldi	r25, 0x03	; 3
     420:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <Print::println(__FlashStringHelper const*)>
     424:	6a ec       	ldi	r22, 0xCA	; 202
     426:	70 e0       	ldi	r23, 0x00	; 0
     428:	8f ea       	ldi	r24, 0xAF	; 175
     42a:	93 e0       	ldi	r25, 0x03	; 3
     42c:	0c 94 f4 0b 	jmp	0x17e8	; 0x17e8 <Print::println(__FlashStringHelper const*)>

00000430 <printEEPROM()>:
     430:	5f 92       	push	r5
     432:	6f 92       	push	r6
     434:	7f 92       	push	r7
     436:	8f 92       	push	r8
     438:	9f 92       	push	r9
     43a:	af 92       	push	r10
     43c:	bf 92       	push	r11
     43e:	cf 92       	push	r12
     440:	df 92       	push	r13
     442:	ef 92       	push	r14
     444:	ff 92       	push	r15
     446:	0f 93       	push	r16
     448:	1f 93       	push	r17
     44a:	cf 93       	push	r28
     44c:	df 93       	push	r29
     44e:	cd b7       	in	r28, 0x3d	; 61
     450:	de b7       	in	r29, 0x3e	; 62
     452:	c0 59       	subi	r28, 0x90	; 144
     454:	d1 09       	sbc	r29, r1
     456:	0f b6       	in	r0, 0x3f	; 63
     458:	f8 94       	cli
     45a:	de bf       	out	0x3e, r29	; 62
     45c:	0f be       	out	0x3f, r0	; 63
     45e:	cd bf       	out	0x3d, r28	; 61
     460:	6d e2       	ldi	r22, 0x2D	; 45
     462:	71 e0       	ldi	r23, 0x01	; 1
     464:	8f ea       	ldi	r24, 0xAF	; 175
     466:	93 e0       	ldi	r25, 0x03	; 3
     468:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     46c:	40 e1       	ldi	r20, 0x10	; 16
     46e:	50 e0       	ldi	r21, 0x00	; 0
     470:	60 e0       	ldi	r22, 0x00	; 0
     472:	70 e0       	ldi	r23, 0x00	; 0
     474:	8f ea       	ldi	r24, 0xAF	; 175
     476:	93 e0       	ldi	r25, 0x03	; 3
     478:	0e 94 d5 0c 	call	0x19aa	; 0x19aa <Print::println(int, int)>
     47c:	1f 92       	push	r1
     47e:	84 e0       	ldi	r24, 0x04	; 4
     480:	8f 93       	push	r24
     482:	81 e4       	ldi	r24, 0x41	; 65
     484:	91 e0       	ldi	r25, 0x01	; 1
     486:	9f 93       	push	r25
     488:	8f 93       	push	r24
     48a:	ce 01       	movw	r24, r28
     48c:	01 96       	adiw	r24, 0x01	; 1
     48e:	7c 01       	movw	r14, r24
     490:	ff 92       	push	r15
     492:	8f 93       	push	r24
     494:	0e 94 7c 1d 	call	0x3af8	; 0x3af8 <sprintf>
     498:	1f 92       	push	r1
     49a:	1f 92       	push	r1
     49c:	ff 92       	push	r15
     49e:	ef 92       	push	r14
     4a0:	6e 01       	movw	r12, r28
     4a2:	91 e8       	ldi	r25, 0x81	; 129
     4a4:	c9 0e       	add	r12, r25
     4a6:	d1 1c       	adc	r13, r1
     4a8:	df 92       	push	r13
     4aa:	cf 92       	push	r12
     4ac:	0e 94 7c 1d 	call	0x3af8	; 0x3af8 <sprintf>
     4b0:	b6 01       	movw	r22, r12
     4b2:	8f ea       	ldi	r24, 0xAF	; 175
     4b4:	93 e0       	ldi	r25, 0x03	; 3
     4b6:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     4ba:	6a e4       	ldi	r22, 0x4A	; 74
     4bc:	71 e0       	ldi	r23, 0x01	; 1
     4be:	8f ea       	ldi	r24, 0xAF	; 175
     4c0:	93 e0       	ldi	r25, 0x03	; 3
     4c2:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     4c6:	0f b6       	in	r0, 0x3f	; 63
     4c8:	f8 94       	cli
     4ca:	de bf       	out	0x3e, r29	; 62
     4cc:	0f be       	out	0x3f, r0	; 63
     4ce:	cd bf       	out	0x3d, r28	; 61
     4d0:	00 e0       	ldi	r16, 0x00	; 0
     4d2:	10 e0       	ldi	r17, 0x00	; 0
     4d4:	84 e0       	ldi	r24, 0x04	; 4
     4d6:	58 2e       	mov	r5, r24
     4d8:	91 e4       	ldi	r25, 0x41	; 65
     4da:	89 2e       	mov	r8, r25
     4dc:	91 e0       	ldi	r25, 0x01	; 1
     4de:	99 2e       	mov	r9, r25
     4e0:	23 e4       	ldi	r18, 0x43	; 67
     4e2:	62 2e       	mov	r6, r18
     4e4:	21 e0       	ldi	r18, 0x01	; 1
     4e6:	72 2e       	mov	r7, r18
     4e8:	c8 01       	movw	r24, r16
     4ea:	8f 70       	andi	r24, 0x0F	; 15
     4ec:	99 27       	eor	r25, r25
     4ee:	89 2b       	or	r24, r25
     4f0:	09 f0       	breq	.+2      	; 0x4f4 <printEEPROM()+0xc4>
     4f2:	4d c0       	rjmp	.+154    	; 0x58e <printEEPROM()+0x15e>
     4f4:	01 15       	cp	r16, r1
     4f6:	11 05       	cpc	r17, r1
     4f8:	09 f4       	brne	.+2      	; 0x4fc <printEEPROM()+0xcc>
     4fa:	49 c0       	rjmp	.+146    	; 0x58e <printEEPROM()+0x15e>
     4fc:	6a e4       	ldi	r22, 0x4A	; 74
     4fe:	71 e0       	ldi	r23, 0x01	; 1
     500:	8f ea       	ldi	r24, 0xAF	; 175
     502:	93 e0       	ldi	r25, 0x03	; 3
     504:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     508:	58 01       	movw	r10, r16
     50a:	f0 e1       	ldi	r31, 0x10	; 16
     50c:	af 1a       	sub	r10, r31
     50e:	b1 08       	sbc	r11, r1
     510:	a0 16       	cp	r10, r16
     512:	b1 06       	cpc	r11, r17
     514:	b8 f4       	brcc	.+46     	; 0x544 <printEEPROM()+0x114>
     516:	c5 01       	movw	r24, r10
     518:	0e 94 70 1f 	call	0x3ee0	; 0x3ee0 <__eerd_byte_m32u4>
     51c:	90 ee       	ldi	r25, 0xE0	; 224
     51e:	98 0f       	add	r25, r24
     520:	9f 35       	cpi	r25, 0x5F	; 95
     522:	38 f0       	brcs	.+14     	; 0x532 <printEEPROM()+0x102>
     524:	61 ee       	ldi	r22, 0xE1	; 225
     526:	71 e0       	ldi	r23, 0x01	; 1
     528:	8f ea       	ldi	r24, 0xAF	; 175
     52a:	93 e0       	ldi	r25, 0x03	; 3
     52c:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     530:	05 c0       	rjmp	.+10     	; 0x53c <printEEPROM()+0x10c>
     532:	68 2f       	mov	r22, r24
     534:	8f ea       	ldi	r24, 0xAF	; 175
     536:	93 e0       	ldi	r25, 0x03	; 3
     538:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <Print::print(char)>
     53c:	8f ef       	ldi	r24, 0xFF	; 255
     53e:	a8 1a       	sub	r10, r24
     540:	b8 0a       	sbc	r11, r24
     542:	e6 cf       	rjmp	.-52     	; 0x510 <printEEPROM()+0xe0>
     544:	8f ea       	ldi	r24, 0xAF	; 175
     546:	93 e0       	ldi	r25, 0x03	; 3
     548:	0e 94 f0 0b 	call	0x17e0	; 0x17e0 <Print::println()>
     54c:	1f 92       	push	r1
     54e:	5f 92       	push	r5
     550:	9f 92       	push	r9
     552:	8f 92       	push	r8
     554:	ff 92       	push	r15
     556:	ef 92       	push	r14
     558:	0e 94 7c 1d 	call	0x3af8	; 0x3af8 <sprintf>
     55c:	1f 93       	push	r17
     55e:	0f 93       	push	r16
     560:	ff 92       	push	r15
     562:	ef 92       	push	r14
     564:	df 92       	push	r13
     566:	cf 92       	push	r12
     568:	0e 94 7c 1d 	call	0x3af8	; 0x3af8 <sprintf>
     56c:	b6 01       	movw	r22, r12
     56e:	8f ea       	ldi	r24, 0xAF	; 175
     570:	93 e0       	ldi	r25, 0x03	; 3
     572:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     576:	6a e4       	ldi	r22, 0x4A	; 74
     578:	71 e0       	ldi	r23, 0x01	; 1
     57a:	8f ea       	ldi	r24, 0xAF	; 175
     57c:	93 e0       	ldi	r25, 0x03	; 3
     57e:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     582:	0f b6       	in	r0, 0x3f	; 63
     584:	f8 94       	cli
     586:	de bf       	out	0x3e, r29	; 62
     588:	0f be       	out	0x3f, r0	; 63
     58a:	cd bf       	out	0x3d, r28	; 61
     58c:	0e c0       	rjmp	.+28     	; 0x5aa <printEEPROM()+0x17a>
     58e:	c8 01       	movw	r24, r16
     590:	87 70       	andi	r24, 0x07	; 7
     592:	99 27       	eor	r25, r25
     594:	89 2b       	or	r24, r25
     596:	49 f4       	brne	.+18     	; 0x5aa <printEEPROM()+0x17a>
     598:	01 15       	cp	r16, r1
     59a:	11 05       	cpc	r17, r1
     59c:	31 f0       	breq	.+12     	; 0x5aa <printEEPROM()+0x17a>
     59e:	6d e4       	ldi	r22, 0x4D	; 77
     5a0:	71 e0       	ldi	r23, 0x01	; 1
     5a2:	8f ea       	ldi	r24, 0xAF	; 175
     5a4:	93 e0       	ldi	r25, 0x03	; 3
     5a6:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     5aa:	c8 01       	movw	r24, r16
     5ac:	0e 94 70 1f 	call	0x3ee0	; 0x3ee0 <__eerd_byte_m32u4>
     5b0:	b8 2e       	mov	r11, r24
     5b2:	1f 92       	push	r1
     5b4:	5f 92       	push	r5
     5b6:	7f 92       	push	r7
     5b8:	6f 92       	push	r6
     5ba:	ff 92       	push	r15
     5bc:	ef 92       	push	r14
     5be:	0e 94 7c 1d 	call	0x3af8	; 0x3af8 <sprintf>
     5c2:	2b 2d       	mov	r18, r11
     5c4:	33 27       	eor	r19, r19
     5c6:	27 fd       	sbrc	r18, 7
     5c8:	30 95       	com	r19
     5ca:	3f 93       	push	r19
     5cc:	bf 92       	push	r11
     5ce:	ff 92       	push	r15
     5d0:	ef 92       	push	r14
     5d2:	df 92       	push	r13
     5d4:	cf 92       	push	r12
     5d6:	0e 94 7c 1d 	call	0x3af8	; 0x3af8 <sprintf>
     5da:	f6 01       	movw	r30, r12
     5dc:	62 81       	ldd	r22, Z+2	; 0x02
     5de:	8f ea       	ldi	r24, 0xAF	; 175
     5e0:	93 e0       	ldi	r25, 0x03	; 3
     5e2:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <Print::print(char)>
     5e6:	f6 01       	movw	r30, r12
     5e8:	63 81       	ldd	r22, Z+3	; 0x03
     5ea:	8f ea       	ldi	r24, 0xAF	; 175
     5ec:	93 e0       	ldi	r25, 0x03	; 3
     5ee:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <Print::print(char)>
     5f2:	6e e4       	ldi	r22, 0x4E	; 78
     5f4:	71 e0       	ldi	r23, 0x01	; 1
     5f6:	8f ea       	ldi	r24, 0xAF	; 175
     5f8:	93 e0       	ldi	r25, 0x03	; 3
     5fa:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     5fe:	0f 5f       	subi	r16, 0xFF	; 255
     600:	1f 4f       	sbci	r17, 0xFF	; 255
     602:	0f b6       	in	r0, 0x3f	; 63
     604:	f8 94       	cli
     606:	de bf       	out	0x3e, r29	; 62
     608:	0f be       	out	0x3f, r0	; 63
     60a:	cd bf       	out	0x3d, r28	; 61
     60c:	01 30       	cpi	r16, 0x01	; 1
     60e:	94 e0       	ldi	r25, 0x04	; 4
     610:	19 07       	cpc	r17, r25
     612:	09 f0       	breq	.+2      	; 0x616 <printEEPROM()+0x1e6>
     614:	69 cf       	rjmp	.-302    	; 0x4e8 <printEEPROM()+0xb8>
     616:	00 e0       	ldi	r16, 0x00	; 0
     618:	10 e0       	ldi	r17, 0x00	; 0
     61a:	78 01       	movw	r14, r16
     61c:	ff ef       	ldi	r31, 0xFF	; 255
     61e:	ef 1a       	sub	r14, r31
     620:	fb ef       	ldi	r31, 0xFB	; 251
     622:	ff 0a       	sbc	r15, r31
     624:	0f 30       	cpi	r16, 0x0F	; 15
     626:	11 05       	cpc	r17, r1
     628:	a1 f0       	breq	.+40     	; 0x652 <printEEPROM()+0x222>
     62a:	6c e4       	ldi	r22, 0x4C	; 76
     62c:	71 e0       	ldi	r23, 0x01	; 1
     62e:	8f ea       	ldi	r24, 0xAF	; 175
     630:	93 e0       	ldi	r25, 0x03	; 3
     632:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     636:	e7 e0       	ldi	r30, 0x07	; 7
     638:	ee 22       	and	r14, r30
     63a:	ff 24       	eor	r15, r15
     63c:	ef 28       	or	r14, r15
     63e:	31 f4       	brne	.+12     	; 0x64c <printEEPROM()+0x21c>
     640:	6d e4       	ldi	r22, 0x4D	; 77
     642:	71 e0       	ldi	r23, 0x01	; 1
     644:	8f ea       	ldi	r24, 0xAF	; 175
     646:	93 e0       	ldi	r25, 0x03	; 3
     648:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     64c:	0f 5f       	subi	r16, 0xFF	; 255
     64e:	1f 4f       	sbci	r17, 0xFF	; 255
     650:	e4 cf       	rjmp	.-56     	; 0x61a <printEEPROM()+0x1ea>
     652:	6a e4       	ldi	r22, 0x4A	; 74
     654:	71 e0       	ldi	r23, 0x01	; 1
     656:	8f ea       	ldi	r24, 0xAF	; 175
     658:	93 e0       	ldi	r25, 0x03	; 3
     65a:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     65e:	8f ef       	ldi	r24, 0xFF	; 255
     660:	93 e0       	ldi	r25, 0x03	; 3
     662:	0e 94 70 1f 	call	0x3ee0	; 0x3ee0 <__eerd_byte_m32u4>
     666:	90 ee       	ldi	r25, 0xE0	; 224
     668:	98 0f       	add	r25, r24
     66a:	9f 35       	cpi	r25, 0x5F	; 95
     66c:	38 f0       	brcs	.+14     	; 0x67c <printEEPROM()+0x24c>
     66e:	61 ee       	ldi	r22, 0xE1	; 225
     670:	71 e0       	ldi	r23, 0x01	; 1
     672:	8f ea       	ldi	r24, 0xAF	; 175
     674:	93 e0       	ldi	r25, 0x03	; 3
     676:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     67a:	05 c0       	rjmp	.+10     	; 0x686 <printEEPROM()+0x256>
     67c:	68 2f       	mov	r22, r24
     67e:	8f ea       	ldi	r24, 0xAF	; 175
     680:	93 e0       	ldi	r25, 0x03	; 3
     682:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <Print::print(char)>
     686:	8f ea       	ldi	r24, 0xAF	; 175
     688:	93 e0       	ldi	r25, 0x03	; 3
     68a:	0e 94 f0 0b 	call	0x17e0	; 0x17e0 <Print::println()>
     68e:	c0 57       	subi	r28, 0x70	; 112
     690:	df 4f       	sbci	r29, 0xFF	; 255
     692:	0f b6       	in	r0, 0x3f	; 63
     694:	f8 94       	cli
     696:	de bf       	out	0x3e, r29	; 62
     698:	0f be       	out	0x3f, r0	; 63
     69a:	cd bf       	out	0x3d, r28	; 61
     69c:	df 91       	pop	r29
     69e:	cf 91       	pop	r28
     6a0:	1f 91       	pop	r17
     6a2:	0f 91       	pop	r16
     6a4:	ff 90       	pop	r15
     6a6:	ef 90       	pop	r14
     6a8:	df 90       	pop	r13
     6aa:	cf 90       	pop	r12
     6ac:	bf 90       	pop	r11
     6ae:	af 90       	pop	r10
     6b0:	9f 90       	pop	r9
     6b2:	8f 90       	pop	r8
     6b4:	7f 90       	pop	r7
     6b6:	6f 90       	pop	r6
     6b8:	5f 90       	pop	r5
     6ba:	08 95       	ret

000006bc <printFlashMemory(unsigned char*, unsigned char*)>:
     6bc:	2f 92       	push	r2
     6be:	3f 92       	push	r3
     6c0:	4f 92       	push	r4
     6c2:	5f 92       	push	r5
     6c4:	6f 92       	push	r6
     6c6:	7f 92       	push	r7
     6c8:	8f 92       	push	r8
     6ca:	9f 92       	push	r9
     6cc:	af 92       	push	r10
     6ce:	bf 92       	push	r11
     6d0:	cf 92       	push	r12
     6d2:	df 92       	push	r13
     6d4:	ef 92       	push	r14
     6d6:	ff 92       	push	r15
     6d8:	0f 93       	push	r16
     6da:	1f 93       	push	r17
     6dc:	cf 93       	push	r28
     6de:	df 93       	push	r29
     6e0:	cd b7       	in	r28, 0x3d	; 61
     6e2:	de b7       	in	r29, 0x3e	; 62
     6e4:	c0 59       	subi	r28, 0x90	; 144
     6e6:	d1 09       	sbc	r29, r1
     6e8:	0f b6       	in	r0, 0x3f	; 63
     6ea:	f8 94       	cli
     6ec:	de bf       	out	0x3e, r29	; 62
     6ee:	0f be       	out	0x3f, r0	; 63
     6f0:	cd bf       	out	0x3d, r28	; 61
     6f2:	5c 01       	movw	r10, r24
     6f4:	4b 01       	movw	r8, r22
     6f6:	61 15       	cp	r22, r1
     6f8:	71 05       	cpc	r23, r1
     6fa:	21 f4       	brne	.+8      	; 0x704 <printFlashMemory(unsigned char*, unsigned char*)+0x48>
     6fc:	4e ef       	ldi	r20, 0xFE	; 254
     6fe:	84 2e       	mov	r8, r20
     700:	4f e7       	ldi	r20, 0x7F	; 127
     702:	94 2e       	mov	r9, r20
     704:	60 e5       	ldi	r22, 0x50	; 80
     706:	71 e0       	ldi	r23, 0x01	; 1
     708:	8f ea       	ldi	r24, 0xAF	; 175
     70a:	93 e0       	ldi	r25, 0x03	; 3
     70c:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     710:	35 01       	movw	r6, r10
     712:	40 e1       	ldi	r20, 0x10	; 16
     714:	50 e0       	ldi	r21, 0x00	; 0
     716:	b5 01       	movw	r22, r10
     718:	8f ea       	ldi	r24, 0xAF	; 175
     71a:	93 e0       	ldi	r25, 0x03	; 3
     71c:	0e 94 d5 0c 	call	0x19aa	; 0x19aa <Print::println(int, int)>
     720:	1f 92       	push	r1
     722:	84 e0       	ldi	r24, 0x04	; 4
     724:	8f 93       	push	r24
     726:	81 e4       	ldi	r24, 0x41	; 65
     728:	91 e0       	ldi	r25, 0x01	; 1
     72a:	9f 93       	push	r25
     72c:	8f 93       	push	r24
     72e:	8e 01       	movw	r16, r28
     730:	0f 5f       	subi	r16, 0xFF	; 255
     732:	1f 4f       	sbci	r17, 0xFF	; 255
     734:	1f 93       	push	r17
     736:	0f 93       	push	r16
     738:	0e 94 7c 1d 	call	0x3af8	; 0x3af8 <sprintf>
     73c:	bf 92       	push	r11
     73e:	af 92       	push	r10
     740:	1f 93       	push	r17
     742:	0f 93       	push	r16
     744:	7e 01       	movw	r14, r28
     746:	81 e8       	ldi	r24, 0x81	; 129
     748:	e8 0e       	add	r14, r24
     74a:	f1 1c       	adc	r15, r1
     74c:	ff 92       	push	r15
     74e:	ef 92       	push	r14
     750:	0e 94 7c 1d 	call	0x3af8	; 0x3af8 <sprintf>
     754:	b7 01       	movw	r22, r14
     756:	8f ea       	ldi	r24, 0xAF	; 175
     758:	93 e0       	ldi	r25, 0x03	; 3
     75a:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     75e:	6a e4       	ldi	r22, 0x4A	; 74
     760:	71 e0       	ldi	r23, 0x01	; 1
     762:	8f ea       	ldi	r24, 0xAF	; 175
     764:	93 e0       	ldi	r25, 0x03	; 3
     766:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     76a:	0f b6       	in	r0, 0x3f	; 63
     76c:	f8 94       	cli
     76e:	de bf       	out	0x3e, r29	; 62
     770:	0f be       	out	0x3f, r0	; 63
     772:	cd bf       	out	0x3d, r28	; 61
     774:	c1 2c       	mov	r12, r1
     776:	d1 2c       	mov	r13, r1
     778:	86 14       	cp	r8, r6
     77a:	97 04       	cpc	r9, r7
     77c:	0c f4       	brge	.+2      	; 0x780 <printFlashMemory(unsigned char*, unsigned char*)+0xc4>
     77e:	9c c0       	rjmp	.+312    	; 0x8b8 <printFlashMemory(unsigned char*, unsigned char*)+0x1fc>
     780:	15 01       	movw	r2, r10
     782:	26 0c       	add	r2, r6
     784:	37 1c       	adc	r3, r7
     786:	c6 01       	movw	r24, r12
     788:	8f 70       	andi	r24, 0x0F	; 15
     78a:	99 27       	eor	r25, r25
     78c:	89 2b       	or	r24, r25
     78e:	09 f0       	breq	.+2      	; 0x792 <printFlashMemory(unsigned char*, unsigned char*)+0xd6>
     790:	4d c0       	rjmp	.+154    	; 0x82c <printFlashMemory(unsigned char*, unsigned char*)+0x170>
     792:	c1 14       	cp	r12, r1
     794:	d1 04       	cpc	r13, r1
     796:	09 f4       	brne	.+2      	; 0x79a <printFlashMemory(unsigned char*, unsigned char*)+0xde>
     798:	49 c0       	rjmp	.+146    	; 0x82c <printFlashMemory(unsigned char*, unsigned char*)+0x170>
     79a:	6a e4       	ldi	r22, 0x4A	; 74
     79c:	71 e0       	ldi	r23, 0x01	; 1
     79e:	8f ea       	ldi	r24, 0xAF	; 175
     7a0:	93 e0       	ldi	r25, 0x03	; 3
     7a2:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     7a6:	31 e1       	ldi	r19, 0x11	; 17
     7a8:	43 2e       	mov	r4, r19
     7aa:	51 2c       	mov	r5, r1
     7ac:	b1 e0       	ldi	r27, 0x01	; 1
     7ae:	4b 1a       	sub	r4, r27
     7b0:	51 08       	sbc	r5, r1
     7b2:	a1 f0       	breq	.+40     	; 0x7dc <printFlashMemory(unsigned char*, unsigned char*)+0x120>
     7b4:	f1 01       	movw	r30, r2
     7b6:	e4 19       	sub	r30, r4
     7b8:	f5 09       	sbc	r31, r5
     7ba:	64 91       	lpm	r22, Z
     7bc:	80 ee       	ldi	r24, 0xE0	; 224
     7be:	86 0f       	add	r24, r22
     7c0:	8f 35       	cpi	r24, 0x5F	; 95
     7c2:	38 f0       	brcs	.+14     	; 0x7d2 <printFlashMemory(unsigned char*, unsigned char*)+0x116>
     7c4:	61 ee       	ldi	r22, 0xE1	; 225
     7c6:	71 e0       	ldi	r23, 0x01	; 1
     7c8:	8f ea       	ldi	r24, 0xAF	; 175
     7ca:	93 e0       	ldi	r25, 0x03	; 3
     7cc:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     7d0:	ed cf       	rjmp	.-38     	; 0x7ac <printFlashMemory(unsigned char*, unsigned char*)+0xf0>
     7d2:	8f ea       	ldi	r24, 0xAF	; 175
     7d4:	93 e0       	ldi	r25, 0x03	; 3
     7d6:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <Print::print(char)>
     7da:	e8 cf       	rjmp	.-48     	; 0x7ac <printFlashMemory(unsigned char*, unsigned char*)+0xf0>
     7dc:	8f ea       	ldi	r24, 0xAF	; 175
     7de:	93 e0       	ldi	r25, 0x03	; 3
     7e0:	0e 94 f0 0b 	call	0x17e0	; 0x17e0 <Print::println()>
     7e4:	1f 92       	push	r1
     7e6:	e4 e0       	ldi	r30, 0x04	; 4
     7e8:	ef 93       	push	r30
     7ea:	a1 e4       	ldi	r26, 0x41	; 65
     7ec:	b1 e0       	ldi	r27, 0x01	; 1
     7ee:	bf 93       	push	r27
     7f0:	af 93       	push	r26
     7f2:	1f 93       	push	r17
     7f4:	0f 93       	push	r16
     7f6:	0e 94 7c 1d 	call	0x3af8	; 0x3af8 <sprintf>
     7fa:	7f 92       	push	r7
     7fc:	6f 92       	push	r6
     7fe:	1f 93       	push	r17
     800:	0f 93       	push	r16
     802:	ff 92       	push	r15
     804:	ef 92       	push	r14
     806:	0e 94 7c 1d 	call	0x3af8	; 0x3af8 <sprintf>
     80a:	b7 01       	movw	r22, r14
     80c:	8f ea       	ldi	r24, 0xAF	; 175
     80e:	93 e0       	ldi	r25, 0x03	; 3
     810:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     814:	6a e4       	ldi	r22, 0x4A	; 74
     816:	71 e0       	ldi	r23, 0x01	; 1
     818:	8f ea       	ldi	r24, 0xAF	; 175
     81a:	93 e0       	ldi	r25, 0x03	; 3
     81c:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     820:	0f b6       	in	r0, 0x3f	; 63
     822:	f8 94       	cli
     824:	de bf       	out	0x3e, r29	; 62
     826:	0f be       	out	0x3f, r0	; 63
     828:	cd bf       	out	0x3d, r28	; 61
     82a:	0e c0       	rjmp	.+28     	; 0x848 <printFlashMemory(unsigned char*, unsigned char*)+0x18c>
     82c:	c6 01       	movw	r24, r12
     82e:	87 70       	andi	r24, 0x07	; 7
     830:	99 27       	eor	r25, r25
     832:	89 2b       	or	r24, r25
     834:	49 f4       	brne	.+18     	; 0x848 <printFlashMemory(unsigned char*, unsigned char*)+0x18c>
     836:	c1 14       	cp	r12, r1
     838:	d1 04       	cpc	r13, r1
     83a:	31 f0       	breq	.+12     	; 0x848 <printFlashMemory(unsigned char*, unsigned char*)+0x18c>
     83c:	6d e4       	ldi	r22, 0x4D	; 77
     83e:	71 e0       	ldi	r23, 0x01	; 1
     840:	8f ea       	ldi	r24, 0xAF	; 175
     842:	93 e0       	ldi	r25, 0x03	; 3
     844:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     848:	f1 01       	movw	r30, r2
     84a:	24 90       	lpm	r2, Z
     84c:	1f 92       	push	r1
     84e:	f4 e0       	ldi	r31, 0x04	; 4
     850:	ff 93       	push	r31
     852:	a3 e4       	ldi	r26, 0x43	; 67
     854:	b1 e0       	ldi	r27, 0x01	; 1
     856:	bf 93       	push	r27
     858:	af 93       	push	r26
     85a:	1f 93       	push	r17
     85c:	0f 93       	push	r16
     85e:	0e 94 7c 1d 	call	0x3af8	; 0x3af8 <sprintf>
     862:	82 2d       	mov	r24, r2
     864:	99 27       	eor	r25, r25
     866:	87 fd       	sbrc	r24, 7
     868:	90 95       	com	r25
     86a:	9f 93       	push	r25
     86c:	2f 92       	push	r2
     86e:	1f 93       	push	r17
     870:	0f 93       	push	r16
     872:	ff 92       	push	r15
     874:	ef 92       	push	r14
     876:	0e 94 7c 1d 	call	0x3af8	; 0x3af8 <sprintf>
     87a:	d7 01       	movw	r26, r14
     87c:	12 96       	adiw	r26, 0x02	; 2
     87e:	6c 91       	ld	r22, X
     880:	8f ea       	ldi	r24, 0xAF	; 175
     882:	93 e0       	ldi	r25, 0x03	; 3
     884:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <Print::print(char)>
     888:	f7 01       	movw	r30, r14
     88a:	63 81       	ldd	r22, Z+3	; 0x03
     88c:	8f ea       	ldi	r24, 0xAF	; 175
     88e:	93 e0       	ldi	r25, 0x03	; 3
     890:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <Print::print(char)>
     894:	6e e4       	ldi	r22, 0x4E	; 78
     896:	71 e0       	ldi	r23, 0x01	; 1
     898:	8f ea       	ldi	r24, 0xAF	; 175
     89a:	93 e0       	ldi	r25, 0x03	; 3
     89c:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     8a0:	ff ef       	ldi	r31, 0xFF	; 255
     8a2:	6f 1a       	sub	r6, r31
     8a4:	7f 0a       	sbc	r7, r31
     8a6:	8f ef       	ldi	r24, 0xFF	; 255
     8a8:	c8 1a       	sub	r12, r24
     8aa:	d8 0a       	sbc	r13, r24
     8ac:	0f b6       	in	r0, 0x3f	; 63
     8ae:	f8 94       	cli
     8b0:	de bf       	out	0x3e, r29	; 62
     8b2:	0f be       	out	0x3f, r0	; 63
     8b4:	cd bf       	out	0x3d, r28	; 61
     8b6:	60 cf       	rjmp	.-320    	; 0x778 <printFlashMemory(unsigned char*, unsigned char*)+0xbc>
     8b8:	e1 2c       	mov	r14, r1
     8ba:	f1 2c       	mov	r15, r1
     8bc:	87 01       	movw	r16, r14
     8be:	0c 0d       	add	r16, r12
     8c0:	1d 1d       	adc	r17, r13
     8c2:	c8 01       	movw	r24, r16
     8c4:	8f 70       	andi	r24, 0x0F	; 15
     8c6:	99 27       	eor	r25, r25
     8c8:	89 2b       	or	r24, r25
     8ca:	a1 f0       	breq	.+40     	; 0x8f4 <printFlashMemory(unsigned char*, unsigned char*)+0x238>
     8cc:	6c e4       	ldi	r22, 0x4C	; 76
     8ce:	71 e0       	ldi	r23, 0x01	; 1
     8d0:	8f ea       	ldi	r24, 0xAF	; 175
     8d2:	93 e0       	ldi	r25, 0x03	; 3
     8d4:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     8d8:	07 70       	andi	r16, 0x07	; 7
     8da:	11 27       	eor	r17, r17
     8dc:	01 2b       	or	r16, r17
     8de:	31 f4       	brne	.+12     	; 0x8ec <printFlashMemory(unsigned char*, unsigned char*)+0x230>
     8e0:	6d e4       	ldi	r22, 0x4D	; 77
     8e2:	71 e0       	ldi	r23, 0x01	; 1
     8e4:	8f ea       	ldi	r24, 0xAF	; 175
     8e6:	93 e0       	ldi	r25, 0x03	; 3
     8e8:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     8ec:	bf ef       	ldi	r27, 0xFF	; 255
     8ee:	eb 1a       	sub	r14, r27
     8f0:	fb 0a       	sbc	r15, r27
     8f2:	e4 cf       	rjmp	.-56     	; 0x8bc <printFlashMemory(unsigned char*, unsigned char*)+0x200>
     8f4:	6a e4       	ldi	r22, 0x4A	; 74
     8f6:	71 e0       	ldi	r23, 0x01	; 1
     8f8:	8f ea       	ldi	r24, 0xAF	; 175
     8fa:	93 e0       	ldi	r25, 0x03	; 3
     8fc:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     900:	84 01       	movw	r16, r8
     902:	00 51       	subi	r16, 0x10	; 16
     904:	11 09       	sbc	r17, r1
     906:	0e 0d       	add	r16, r14
     908:	1f 1d       	adc	r17, r15
     90a:	08 15       	cp	r16, r8
     90c:	19 05       	cpc	r17, r9
     90e:	b4 f4       	brge	.+44     	; 0x93c <printFlashMemory(unsigned char*, unsigned char*)+0x280>
     910:	f5 01       	movw	r30, r10
     912:	e0 0f       	add	r30, r16
     914:	f1 1f       	adc	r31, r17
     916:	64 91       	lpm	r22, Z
     918:	80 ee       	ldi	r24, 0xE0	; 224
     91a:	86 0f       	add	r24, r22
     91c:	8f 35       	cpi	r24, 0x5F	; 95
     91e:	38 f0       	brcs	.+14     	; 0x92e <printFlashMemory(unsigned char*, unsigned char*)+0x272>
     920:	61 ee       	ldi	r22, 0xE1	; 225
     922:	71 e0       	ldi	r23, 0x01	; 1
     924:	8f ea       	ldi	r24, 0xAF	; 175
     926:	93 e0       	ldi	r25, 0x03	; 3
     928:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     92c:	04 c0       	rjmp	.+8      	; 0x936 <printFlashMemory(unsigned char*, unsigned char*)+0x27a>
     92e:	8f ea       	ldi	r24, 0xAF	; 175
     930:	93 e0       	ldi	r25, 0x03	; 3
     932:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <Print::print(char)>
     936:	0f 5f       	subi	r16, 0xFF	; 255
     938:	1f 4f       	sbci	r17, 0xFF	; 255
     93a:	e7 cf       	rjmp	.-50     	; 0x90a <printFlashMemory(unsigned char*, unsigned char*)+0x24e>
     93c:	8f ea       	ldi	r24, 0xAF	; 175
     93e:	93 e0       	ldi	r25, 0x03	; 3
     940:	0e 94 f0 0b 	call	0x17e0	; 0x17e0 <Print::println()>
     944:	c0 57       	subi	r28, 0x70	; 112
     946:	df 4f       	sbci	r29, 0xFF	; 255
     948:	0f b6       	in	r0, 0x3f	; 63
     94a:	f8 94       	cli
     94c:	de bf       	out	0x3e, r29	; 62
     94e:	0f be       	out	0x3f, r0	; 63
     950:	cd bf       	out	0x3d, r28	; 61
     952:	df 91       	pop	r29
     954:	cf 91       	pop	r28
     956:	1f 91       	pop	r17
     958:	0f 91       	pop	r16
     95a:	ff 90       	pop	r15
     95c:	ef 90       	pop	r14
     95e:	df 90       	pop	r13
     960:	cf 90       	pop	r12
     962:	bf 90       	pop	r11
     964:	af 90       	pop	r10
     966:	9f 90       	pop	r9
     968:	8f 90       	pop	r8
     96a:	7f 90       	pop	r7
     96c:	6f 90       	pop	r6
     96e:	5f 90       	pop	r5
     970:	4f 90       	pop	r4
     972:	3f 90       	pop	r3
     974:	2f 90       	pop	r2
     976:	08 95       	ret

00000978 <printSRAM(unsigned char*, unsigned char*)>:
     978:	cf 92       	push	r12
     97a:	df 92       	push	r13
     97c:	ef 92       	push	r14
     97e:	ff 92       	push	r15
     980:	0f 93       	push	r16
     982:	1f 93       	push	r17
     984:	cf 93       	push	r28
     986:	df 93       	push	r29
     988:	8c 01       	movw	r16, r24
     98a:	7b 01       	movw	r14, r22
     98c:	61 15       	cp	r22, r1
     98e:	71 05       	cpc	r23, r1
     990:	21 f4       	brne	.+8      	; 0x99a <printSRAM(unsigned char*, unsigned char*)+0x22>
     992:	ee 24       	eor	r14, r14
     994:	ea 94       	dec	r14
     996:	5a e0       	ldi	r21, 0x0A	; 10
     998:	f5 2e       	mov	r15, r21
     99a:	63 e6       	ldi	r22, 0x63	; 99
     99c:	71 e0       	ldi	r23, 0x01	; 1
     99e:	8f ea       	ldi	r24, 0xAF	; 175
     9a0:	93 e0       	ldi	r25, 0x03	; 3
     9a2:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     9a6:	6d b7       	in	r22, 0x3d	; 61
     9a8:	7e b7       	in	r23, 0x3e	; 62
     9aa:	40 e1       	ldi	r20, 0x10	; 16
     9ac:	50 e0       	ldi	r21, 0x00	; 0
     9ae:	8f ea       	ldi	r24, 0xAF	; 175
     9b0:	93 e0       	ldi	r25, 0x03	; 3
     9b2:	0e 94 01 0d 	call	0x1a02	; 0x1a02 <Print::println(unsigned int, int)>
     9b6:	62 e7       	ldi	r22, 0x72	; 114
     9b8:	71 e0       	ldi	r23, 0x01	; 1
     9ba:	8f ea       	ldi	r24, 0xAF	; 175
     9bc:	93 e0       	ldi	r25, 0x03	; 3
     9be:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     9c2:	e8 01       	movw	r28, r16
     9c4:	40 e1       	ldi	r20, 0x10	; 16
     9c6:	50 e0       	ldi	r21, 0x00	; 0
     9c8:	b8 01       	movw	r22, r16
     9ca:	8f ea       	ldi	r24, 0xAF	; 175
     9cc:	93 e0       	ldi	r25, 0x03	; 3
     9ce:	0e 94 d5 0c 	call	0x19aa	; 0x19aa <Print::println(int, int)>
     9d2:	40 e1       	ldi	r20, 0x10	; 16
     9d4:	50 e0       	ldi	r21, 0x00	; 0
     9d6:	b8 01       	movw	r22, r16
     9d8:	8f ea       	ldi	r24, 0xAF	; 175
     9da:	93 e0       	ldi	r25, 0x03	; 3
     9dc:	0e 94 cd 0c 	call	0x199a	; 0x199a <Print::print(int, int)>
     9e0:	6a e4       	ldi	r22, 0x4A	; 74
     9e2:	71 e0       	ldi	r23, 0x01	; 1
     9e4:	8f ea       	ldi	r24, 0xAF	; 175
     9e6:	93 e0       	ldi	r25, 0x03	; 3
     9e8:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     9ec:	00 e0       	ldi	r16, 0x00	; 0
     9ee:	10 e0       	ldi	r17, 0x00	; 0
     9f0:	ec 16       	cp	r14, r28
     9f2:	fd 06       	cpc	r15, r29
     9f4:	0c f4       	brge	.+2      	; 0x9f8 <printSRAM(unsigned char*, unsigned char*)+0x80>
     9f6:	5d c0       	rjmp	.+186    	; 0xab2 <printSRAM(unsigned char*, unsigned char*)+0x13a>
     9f8:	c8 01       	movw	r24, r16
     9fa:	8f 70       	andi	r24, 0x0F	; 15
     9fc:	99 27       	eor	r25, r25
     9fe:	89 2b       	or	r24, r25
     a00:	89 f5       	brne	.+98     	; 0xa64 <printSRAM(unsigned char*, unsigned char*)+0xec>
     a02:	01 15       	cp	r16, r1
     a04:	11 05       	cpc	r17, r1
     a06:	71 f1       	breq	.+92     	; 0xa64 <printSRAM(unsigned char*, unsigned char*)+0xec>
     a08:	6a e4       	ldi	r22, 0x4A	; 74
     a0a:	71 e0       	ldi	r23, 0x01	; 1
     a0c:	8f ea       	ldi	r24, 0xAF	; 175
     a0e:	93 e0       	ldi	r25, 0x03	; 3
     a10:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     a14:	6e 01       	movw	r12, r28
     a16:	80 e1       	ldi	r24, 0x10	; 16
     a18:	c8 1a       	sub	r12, r24
     a1a:	d1 08       	sbc	r13, r1
     a1c:	cc 16       	cp	r12, r28
     a1e:	dd 06       	cpc	r13, r29
     a20:	99 f0       	breq	.+38     	; 0xa48 <printSRAM(unsigned char*, unsigned char*)+0xd0>
     a22:	f6 01       	movw	r30, r12
     a24:	61 91       	ld	r22, Z+
     a26:	6f 01       	movw	r12, r30
     a28:	80 ee       	ldi	r24, 0xE0	; 224
     a2a:	86 0f       	add	r24, r22
     a2c:	8f 35       	cpi	r24, 0x5F	; 95
     a2e:	38 f0       	brcs	.+14     	; 0xa3e <printSRAM(unsigned char*, unsigned char*)+0xc6>
     a30:	61 ee       	ldi	r22, 0xE1	; 225
     a32:	71 e0       	ldi	r23, 0x01	; 1
     a34:	8f ea       	ldi	r24, 0xAF	; 175
     a36:	93 e0       	ldi	r25, 0x03	; 3
     a38:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     a3c:	ef cf       	rjmp	.-34     	; 0xa1c <printSRAM(unsigned char*, unsigned char*)+0xa4>
     a3e:	8f ea       	ldi	r24, 0xAF	; 175
     a40:	93 e0       	ldi	r25, 0x03	; 3
     a42:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <Print::print(char)>
     a46:	ea cf       	rjmp	.-44     	; 0xa1c <printSRAM(unsigned char*, unsigned char*)+0xa4>
     a48:	8f ea       	ldi	r24, 0xAF	; 175
     a4a:	93 e0       	ldi	r25, 0x03	; 3
     a4c:	0e 94 f0 0b 	call	0x17e0	; 0x17e0 <Print::println()>
     a50:	40 e1       	ldi	r20, 0x10	; 16
     a52:	50 e0       	ldi	r21, 0x00	; 0
     a54:	be 01       	movw	r22, r28
     a56:	8f ea       	ldi	r24, 0xAF	; 175
     a58:	93 e0       	ldi	r25, 0x03	; 3
     a5a:	0e 94 cd 0c 	call	0x199a	; 0x199a <Print::print(int, int)>
     a5e:	6a e4       	ldi	r22, 0x4A	; 74
     a60:	71 e0       	ldi	r23, 0x01	; 1
     a62:	0a c0       	rjmp	.+20     	; 0xa78 <printSRAM(unsigned char*, unsigned char*)+0x100>
     a64:	c8 01       	movw	r24, r16
     a66:	87 70       	andi	r24, 0x07	; 7
     a68:	99 27       	eor	r25, r25
     a6a:	89 2b       	or	r24, r25
     a6c:	49 f4       	brne	.+18     	; 0xa80 <printSRAM(unsigned char*, unsigned char*)+0x108>
     a6e:	01 15       	cp	r16, r1
     a70:	11 05       	cpc	r17, r1
     a72:	31 f0       	breq	.+12     	; 0xa80 <printSRAM(unsigned char*, unsigned char*)+0x108>
     a74:	6d e4       	ldi	r22, 0x4D	; 77
     a76:	71 e0       	ldi	r23, 0x01	; 1
     a78:	8f ea       	ldi	r24, 0xAF	; 175
     a7a:	93 e0       	ldi	r25, 0x03	; 3
     a7c:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     a80:	88 81       	ld	r24, Y
     a82:	80 31       	cpi	r24, 0x10	; 16
     a84:	30 f4       	brcc	.+12     	; 0xa92 <printSRAM(unsigned char*, unsigned char*)+0x11a>
     a86:	6d e7       	ldi	r22, 0x7D	; 125
     a88:	71 e0       	ldi	r23, 0x01	; 1
     a8a:	8f ea       	ldi	r24, 0xAF	; 175
     a8c:	93 e0       	ldi	r25, 0x03	; 3
     a8e:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     a92:	40 e1       	ldi	r20, 0x10	; 16
     a94:	50 e0       	ldi	r21, 0x00	; 0
     a96:	69 91       	ld	r22, Y+
     a98:	8f ea       	ldi	r24, 0xAF	; 175
     a9a:	93 e0       	ldi	r25, 0x03	; 3
     a9c:	0e 94 fa 0c 	call	0x19f4	; 0x19f4 <Print::print(unsigned char, int)>
     aa0:	6e e4       	ldi	r22, 0x4E	; 78
     aa2:	71 e0       	ldi	r23, 0x01	; 1
     aa4:	8f ea       	ldi	r24, 0xAF	; 175
     aa6:	93 e0       	ldi	r25, 0x03	; 3
     aa8:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     aac:	0f 5f       	subi	r16, 0xFF	; 255
     aae:	1f 4f       	sbci	r17, 0xFF	; 255
     ab0:	9f cf       	rjmp	.-194    	; 0x9f0 <printSRAM(unsigned char*, unsigned char*)+0x78>
     ab2:	c1 2c       	mov	r12, r1
     ab4:	d1 2c       	mov	r13, r1
     ab6:	e6 01       	movw	r28, r12
     ab8:	c0 0f       	add	r28, r16
     aba:	d1 1f       	adc	r29, r17
     abc:	ce 01       	movw	r24, r28
     abe:	8f 70       	andi	r24, 0x0F	; 15
     ac0:	99 27       	eor	r25, r25
     ac2:	89 2b       	or	r24, r25
     ac4:	a1 f0       	breq	.+40     	; 0xaee <printSRAM(unsigned char*, unsigned char*)+0x176>
     ac6:	6c e4       	ldi	r22, 0x4C	; 76
     ac8:	71 e0       	ldi	r23, 0x01	; 1
     aca:	8f ea       	ldi	r24, 0xAF	; 175
     acc:	93 e0       	ldi	r25, 0x03	; 3
     ace:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     ad2:	c7 70       	andi	r28, 0x07	; 7
     ad4:	dd 27       	eor	r29, r29
     ad6:	cd 2b       	or	r28, r29
     ad8:	31 f4       	brne	.+12     	; 0xae6 <printSRAM(unsigned char*, unsigned char*)+0x16e>
     ada:	6d e4       	ldi	r22, 0x4D	; 77
     adc:	71 e0       	ldi	r23, 0x01	; 1
     ade:	8f ea       	ldi	r24, 0xAF	; 175
     ae0:	93 e0       	ldi	r25, 0x03	; 3
     ae2:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     ae6:	ff ef       	ldi	r31, 0xFF	; 255
     ae8:	cf 1a       	sub	r12, r31
     aea:	df 0a       	sbc	r13, r31
     aec:	e4 cf       	rjmp	.-56     	; 0xab6 <printSRAM(unsigned char*, unsigned char*)+0x13e>
     aee:	6a e4       	ldi	r22, 0x4A	; 74
     af0:	71 e0       	ldi	r23, 0x01	; 1
     af2:	8f ea       	ldi	r24, 0xAF	; 175
     af4:	93 e0       	ldi	r25, 0x03	; 3
     af6:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     afa:	e7 01       	movw	r28, r14
     afc:	60 97       	sbiw	r28, 0x10	; 16
     afe:	cc 0d       	add	r28, r12
     b00:	dd 1d       	adc	r29, r13
     b02:	ce 15       	cp	r28, r14
     b04:	df 05       	cpc	r29, r15
     b06:	8c f4       	brge	.+34     	; 0xb2a <__stack+0x2b>
     b08:	69 91       	ld	r22, Y+
     b0a:	80 ee       	ldi	r24, 0xE0	; 224
     b0c:	86 0f       	add	r24, r22
     b0e:	8f 35       	cpi	r24, 0x5F	; 95
     b10:	38 f0       	brcs	.+14     	; 0xb20 <__stack+0x21>
     b12:	61 ee       	ldi	r22, 0xE1	; 225
     b14:	71 e0       	ldi	r23, 0x01	; 1
     b16:	8f ea       	ldi	r24, 0xAF	; 175
     b18:	93 e0       	ldi	r25, 0x03	; 3
     b1a:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     b1e:	f1 cf       	rjmp	.-30     	; 0xb02 <__stack+0x3>
     b20:	8f ea       	ldi	r24, 0xAF	; 175
     b22:	93 e0       	ldi	r25, 0x03	; 3
     b24:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <Print::print(char)>
     b28:	ec cf       	rjmp	.-40     	; 0xb02 <__stack+0x3>
     b2a:	8f ea       	ldi	r24, 0xAF	; 175
     b2c:	93 e0       	ldi	r25, 0x03	; 3
     b2e:	df 91       	pop	r29
     b30:	cf 91       	pop	r28
     b32:	1f 91       	pop	r17
     b34:	0f 91       	pop	r16
     b36:	ff 90       	pop	r15
     b38:	ef 90       	pop	r14
     b3a:	df 90       	pop	r13
     b3c:	cf 90       	pop	r12
     b3e:	0c 94 f0 0b 	jmp	0x17e0	; 0x17e0 <Print::println()>

00000b42 <printStack(int)>:
     b42:	ef 92       	push	r14
     b44:	ff 92       	push	r15
     b46:	0f 93       	push	r16
     b48:	1f 93       	push	r17
     b4a:	cf 93       	push	r28
     b4c:	df 93       	push	r29
     b4e:	ec 01       	movw	r28, r24
     b50:	6f e7       	ldi	r22, 0x7F	; 127
     b52:	71 e0       	ldi	r23, 0x01	; 1
     b54:	8f ea       	ldi	r24, 0xAF	; 175
     b56:	93 e0       	ldi	r25, 0x03	; 3
     b58:	0e 94 06 0c 	call	0x180c	; 0x180c <Print::println(char const*)>
     b5c:	66 e8       	ldi	r22, 0x86	; 134
     b5e:	71 e0       	ldi	r23, 0x01	; 1
     b60:	8f ea       	ldi	r24, 0xAF	; 175
     b62:	93 e0       	ldi	r25, 0x03	; 3
     b64:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     b68:	40 e1       	ldi	r20, 0x10	; 16
     b6a:	50 e0       	ldi	r21, 0x00	; 0
     b6c:	be 01       	movw	r22, r28
     b6e:	8f ea       	ldi	r24, 0xAF	; 175
     b70:	93 e0       	ldi	r25, 0x03	; 3
     b72:	0e 94 cd 0c 	call	0x199a	; 0x199a <Print::print(int, int)>
     b76:	6a e4       	ldi	r22, 0x4A	; 74
     b78:	71 e0       	ldi	r23, 0x01	; 1
     b7a:	8f ea       	ldi	r24, 0xAF	; 175
     b7c:	93 e0       	ldi	r25, 0x03	; 3
     b7e:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     b82:	00 e0       	ldi	r16, 0x00	; 0
     b84:	10 e0       	ldi	r17, 0x00	; 0
     b86:	c1 15       	cp	r28, r1
     b88:	fb e0       	ldi	r31, 0x0B	; 11
     b8a:	df 07       	cpc	r29, r31
     b8c:	0c f0       	brlt	.+2      	; 0xb90 <printStack(int)+0x4e>
     b8e:	63 c0       	rjmp	.+198    	; 0xc56 <printStack(int)+0x114>
     b90:	c8 01       	movw	r24, r16
     b92:	8f 70       	andi	r24, 0x0F	; 15
     b94:	99 27       	eor	r25, r25
     b96:	89 2b       	or	r24, r25
     b98:	b9 f5       	brne	.+110    	; 0xc08 <printStack(int)+0xc6>
     b9a:	01 15       	cp	r16, r1
     b9c:	11 05       	cpc	r17, r1
     b9e:	a1 f1       	breq	.+104    	; 0xc08 <printStack(int)+0xc6>
     ba0:	6a e4       	ldi	r22, 0x4A	; 74
     ba2:	71 e0       	ldi	r23, 0x01	; 1
     ba4:	8f ea       	ldi	r24, 0xAF	; 175
     ba6:	93 e0       	ldi	r25, 0x03	; 3
     ba8:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     bac:	7e 01       	movw	r14, r28
     bae:	80 e1       	ldi	r24, 0x10	; 16
     bb0:	e8 1a       	sub	r14, r24
     bb2:	f1 08       	sbc	r15, r1
     bb4:	ec 16       	cp	r14, r28
     bb6:	fd 06       	cpc	r15, r29
     bb8:	99 f0       	breq	.+38     	; 0xbe0 <printStack(int)+0x9e>
     bba:	f7 01       	movw	r30, r14
     bbc:	61 91       	ld	r22, Z+
     bbe:	7f 01       	movw	r14, r30
     bc0:	80 ee       	ldi	r24, 0xE0	; 224
     bc2:	86 0f       	add	r24, r22
     bc4:	8f 35       	cpi	r24, 0x5F	; 95
     bc6:	38 f0       	brcs	.+14     	; 0xbd6 <printStack(int)+0x94>
     bc8:	61 ee       	ldi	r22, 0xE1	; 225
     bca:	71 e0       	ldi	r23, 0x01	; 1
     bcc:	8f ea       	ldi	r24, 0xAF	; 175
     bce:	93 e0       	ldi	r25, 0x03	; 3
     bd0:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     bd4:	ef cf       	rjmp	.-34     	; 0xbb4 <printStack(int)+0x72>
     bd6:	8f ea       	ldi	r24, 0xAF	; 175
     bd8:	93 e0       	ldi	r25, 0x03	; 3
     bda:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <Print::print(char)>
     bde:	ea cf       	rjmp	.-44     	; 0xbb4 <printStack(int)+0x72>
     be0:	8f ea       	ldi	r24, 0xAF	; 175
     be2:	93 e0       	ldi	r25, 0x03	; 3
     be4:	0e 94 f0 0b 	call	0x17e0	; 0x17e0 <Print::println()>
     be8:	66 e8       	ldi	r22, 0x86	; 134
     bea:	71 e0       	ldi	r23, 0x01	; 1
     bec:	8f ea       	ldi	r24, 0xAF	; 175
     bee:	93 e0       	ldi	r25, 0x03	; 3
     bf0:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     bf4:	40 e1       	ldi	r20, 0x10	; 16
     bf6:	50 e0       	ldi	r21, 0x00	; 0
     bf8:	be 01       	movw	r22, r28
     bfa:	8f ea       	ldi	r24, 0xAF	; 175
     bfc:	93 e0       	ldi	r25, 0x03	; 3
     bfe:	0e 94 cd 0c 	call	0x199a	; 0x199a <Print::print(int, int)>
     c02:	6a e4       	ldi	r22, 0x4A	; 74
     c04:	71 e0       	ldi	r23, 0x01	; 1
     c06:	0a c0       	rjmp	.+20     	; 0xc1c <printStack(int)+0xda>
     c08:	c8 01       	movw	r24, r16
     c0a:	87 70       	andi	r24, 0x07	; 7
     c0c:	99 27       	eor	r25, r25
     c0e:	89 2b       	or	r24, r25
     c10:	49 f4       	brne	.+18     	; 0xc24 <printStack(int)+0xe2>
     c12:	01 15       	cp	r16, r1
     c14:	11 05       	cpc	r17, r1
     c16:	31 f0       	breq	.+12     	; 0xc24 <printStack(int)+0xe2>
     c18:	6d e4       	ldi	r22, 0x4D	; 77
     c1a:	71 e0       	ldi	r23, 0x01	; 1
     c1c:	8f ea       	ldi	r24, 0xAF	; 175
     c1e:	93 e0       	ldi	r25, 0x03	; 3
     c20:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     c24:	88 81       	ld	r24, Y
     c26:	80 31       	cpi	r24, 0x10	; 16
     c28:	30 f4       	brcc	.+12     	; 0xc36 <printStack(int)+0xf4>
     c2a:	6d e7       	ldi	r22, 0x7D	; 125
     c2c:	71 e0       	ldi	r23, 0x01	; 1
     c2e:	8f ea       	ldi	r24, 0xAF	; 175
     c30:	93 e0       	ldi	r25, 0x03	; 3
     c32:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     c36:	40 e1       	ldi	r20, 0x10	; 16
     c38:	50 e0       	ldi	r21, 0x00	; 0
     c3a:	69 91       	ld	r22, Y+
     c3c:	8f ea       	ldi	r24, 0xAF	; 175
     c3e:	93 e0       	ldi	r25, 0x03	; 3
     c40:	0e 94 fa 0c 	call	0x19f4	; 0x19f4 <Print::print(unsigned char, int)>
     c44:	6e e4       	ldi	r22, 0x4E	; 78
     c46:	71 e0       	ldi	r23, 0x01	; 1
     c48:	8f ea       	ldi	r24, 0xAF	; 175
     c4a:	93 e0       	ldi	r25, 0x03	; 3
     c4c:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     c50:	0f 5f       	subi	r16, 0xFF	; 255
     c52:	1f 4f       	sbci	r17, 0xFF	; 255
     c54:	98 cf       	rjmp	.-208    	; 0xb86 <printStack(int)+0x44>
     c56:	c0 e0       	ldi	r28, 0x00	; 0
     c58:	d0 e0       	ldi	r29, 0x00	; 0
     c5a:	7e 01       	movw	r14, r28
     c5c:	e0 0e       	add	r14, r16
     c5e:	f1 1e       	adc	r15, r17
     c60:	c7 01       	movw	r24, r14
     c62:	8f 70       	andi	r24, 0x0F	; 15
     c64:	99 27       	eor	r25, r25
     c66:	89 2b       	or	r24, r25
     c68:	99 f0       	breq	.+38     	; 0xc90 <printStack(int)+0x14e>
     c6a:	6c e4       	ldi	r22, 0x4C	; 76
     c6c:	71 e0       	ldi	r23, 0x01	; 1
     c6e:	8f ea       	ldi	r24, 0xAF	; 175
     c70:	93 e0       	ldi	r25, 0x03	; 3
     c72:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     c76:	87 e0       	ldi	r24, 0x07	; 7
     c78:	e8 22       	and	r14, r24
     c7a:	ff 24       	eor	r15, r15
     c7c:	ef 28       	or	r14, r15
     c7e:	31 f4       	brne	.+12     	; 0xc8c <printStack(int)+0x14a>
     c80:	6d e4       	ldi	r22, 0x4D	; 77
     c82:	71 e0       	ldi	r23, 0x01	; 1
     c84:	8f ea       	ldi	r24, 0xAF	; 175
     c86:	93 e0       	ldi	r25, 0x03	; 3
     c88:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     c8c:	21 96       	adiw	r28, 0x01	; 1
     c8e:	e5 cf       	rjmp	.-54     	; 0xc5a <printStack(int)+0x118>
     c90:	6a e4       	ldi	r22, 0x4A	; 74
     c92:	71 e0       	ldi	r23, 0x01	; 1
     c94:	8f ea       	ldi	r24, 0xAF	; 175
     c96:	93 e0       	ldi	r25, 0x03	; 3
     c98:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     c9c:	c1 51       	subi	r28, 0x11	; 17
     c9e:	d5 4f       	sbci	r29, 0xF5	; 245
     ca0:	cf 3f       	cpi	r28, 0xFF	; 255
     ca2:	ea e0       	ldi	r30, 0x0A	; 10
     ca4:	de 07       	cpc	r29, r30
     ca6:	8c f4       	brge	.+34     	; 0xcca <printStack(int)+0x188>
     ca8:	69 91       	ld	r22, Y+
     caa:	80 ee       	ldi	r24, 0xE0	; 224
     cac:	86 0f       	add	r24, r22
     cae:	8f 35       	cpi	r24, 0x5F	; 95
     cb0:	38 f0       	brcs	.+14     	; 0xcc0 <printStack(int)+0x17e>
     cb2:	61 ee       	ldi	r22, 0xE1	; 225
     cb4:	71 e0       	ldi	r23, 0x01	; 1
     cb6:	8f ea       	ldi	r24, 0xAF	; 175
     cb8:	93 e0       	ldi	r25, 0x03	; 3
     cba:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     cbe:	f0 cf       	rjmp	.-32     	; 0xca0 <printStack(int)+0x15e>
     cc0:	8f ea       	ldi	r24, 0xAF	; 175
     cc2:	93 e0       	ldi	r25, 0x03	; 3
     cc4:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <Print::print(char)>
     cc8:	eb cf       	rjmp	.-42     	; 0xca0 <printStack(int)+0x15e>
     cca:	8f ea       	ldi	r24, 0xAF	; 175
     ccc:	93 e0       	ldi	r25, 0x03	; 3
     cce:	df 91       	pop	r29
     cd0:	cf 91       	pop	r28
     cd2:	1f 91       	pop	r17
     cd4:	0f 91       	pop	r16
     cd6:	ff 90       	pop	r15
     cd8:	ef 90       	pop	r14
     cda:	0c 94 f0 0b 	jmp	0x17e0	; 0x17e0 <Print::println()>

00000cde <_GLOBAL__sub_I_processobject>:
     cde:	10 92 54 03 	sts	0x0354, r1
     ce2:	10 92 53 03 	sts	0x0353, r1
     ce6:	88 ee       	ldi	r24, 0xE8	; 232
     ce8:	93 e0       	ldi	r25, 0x03	; 3
     cea:	a0 e0       	ldi	r26, 0x00	; 0
     cec:	b0 e0       	ldi	r27, 0x00	; 0
     cee:	80 93 55 03 	sts	0x0355, r24
     cf2:	90 93 56 03 	sts	0x0356, r25
     cf6:	a0 93 57 03 	sts	0x0357, r26
     cfa:	b0 93 58 03 	sts	0x0358, r27
     cfe:	88 e0       	ldi	r24, 0x08	; 8
     d00:	93 e0       	ldi	r25, 0x03	; 3
     d02:	90 93 52 03 	sts	0x0352, r25
     d06:	80 93 51 03 	sts	0x0351, r24
     d0a:	88 e0       	ldi	r24, 0x08	; 8
     d0c:	94 e0       	ldi	r25, 0x04	; 4
     d0e:	90 93 5e 03 	sts	0x035E, r25
     d12:	80 93 5d 03 	sts	0x035D, r24
     d16:	10 92 63 03 	sts	0x0363, r1
     d1a:	10 92 64 03 	sts	0x0364, r1
     d1e:	10 92 65 03 	sts	0x0365, r1
     d22:	20 e0       	ldi	r18, 0x00	; 0
     d24:	4b e0       	ldi	r20, 0x0B	; 11
     d26:	6a e0       	ldi	r22, 0x0A	; 10
     d28:	82 e3       	ldi	r24, 0x32	; 50
     d2a:	93 e0       	ldi	r25, 0x03	; 3
     d2c:	0c 94 b4 18 	jmp	0x3168	; 0x3168 <SoftwareSerial::SoftwareSerial(unsigned char, unsigned char, bool)>

00000d30 <_GLOBAL__sub_D_processobject>:
     d30:	82 e3       	ldi	r24, 0x32	; 50
     d32:	93 e0       	ldi	r25, 0x03	; 3
     d34:	0e 94 5b 18 	call	0x30b6	; 0x30b6 <SoftwareSerial::~SoftwareSerial()>
     d38:	81 e5       	ldi	r24, 0x51	; 81
     d3a:	93 e0       	ldi	r25, 0x03	; 3
     d3c:	0c 94 6d 16 	jmp	0x2cda	; 0x2cda <Process::~Process()>

00000d40 <vulnerable_func()>:
     d40:	0f 93       	push	r16
     d42:	1f 93       	push	r17
     d44:	cf 93       	push	r28
     d46:	df 93       	push	r29
     d48:	cd b7       	in	r28, 0x3d	; 61
     d4a:	de b7       	in	r29, 0x3e	; 62
     d4c:	64 97       	sbiw	r28, 0x14	; 20
     d4e:	0f b6       	in	r0, 0x3f	; 63
     d50:	f8 94       	cli
     d52:	de bf       	out	0x3e, r29	; 62
     d54:	0f be       	out	0x3f, r0	; 63
     d56:	cd bf       	out	0x3d, r28	; 61
     d58:	8d b7       	in	r24, 0x3d	; 61
     d5a:	9e b7       	in	r25, 0x3e	; 62
     d5c:	0e 94 a1 05 	call	0xb42	; 0xb42 <printStack(int)>
     d60:	82 e3       	ldi	r24, 0x32	; 50
     d62:	93 e0       	ldi	r25, 0x03	; 3
     d64:	0e 94 7b 17 	call	0x2ef6	; 0x2ef6 <SoftwareSerial::available()>
     d68:	89 2b       	or	r24, r25
     d6a:	d1 f3       	breq	.-12     	; 0xd60 <vulnerable_func()+0x20>
     d6c:	00 e0       	ldi	r16, 0x00	; 0
     d6e:	10 e0       	ldi	r17, 0x00	; 0
     d70:	82 e3       	ldi	r24, 0x32	; 50
     d72:	93 e0       	ldi	r25, 0x03	; 3
     d74:	0e 94 7b 17 	call	0x2ef6	; 0x2ef6 <SoftwareSerial::available()>
     d78:	18 16       	cp	r1, r24
     d7a:	19 06       	cpc	r1, r25
     d7c:	a4 f4       	brge	.+40     	; 0xda6 <vulnerable_func()+0x66>
     d7e:	82 e3       	ldi	r24, 0x32	; 50
     d80:	93 e0       	ldi	r25, 0x03	; 3
     d82:	0e 94 ee 16 	call	0x2ddc	; 0x2ddc <SoftwareSerial::read()>
     d86:	e1 e0       	ldi	r30, 0x01	; 1
     d88:	f0 e0       	ldi	r31, 0x00	; 0
     d8a:	ec 0f       	add	r30, r28
     d8c:	fd 1f       	adc	r31, r29
     d8e:	e0 0f       	add	r30, r16
     d90:	f1 1f       	adc	r31, r17
     d92:	80 83       	st	Z, r24
     d94:	0f 5f       	subi	r16, 0xFF	; 255
     d96:	1f 4f       	sbci	r17, 0xFF	; 255
     d98:	69 e1       	ldi	r22, 0x19	; 25
     d9a:	70 e0       	ldi	r23, 0x00	; 0
     d9c:	80 e0       	ldi	r24, 0x00	; 0
     d9e:	90 e0       	ldi	r25, 0x00	; 0
     da0:	0e 94 35 08 	call	0x106a	; 0x106a <delay>
     da4:	e5 cf       	rjmp	.-54     	; 0xd70 <vulnerable_func()+0x30>
     da6:	8d b7       	in	r24, 0x3d	; 61
     da8:	9e b7       	in	r25, 0x3e	; 62
     daa:	0e 94 a1 05 	call	0xb42	; 0xb42 <printStack(int)>
     dae:	80 e0       	ldi	r24, 0x00	; 0
     db0:	90 e0       	ldi	r25, 0x00	; 0
     db2:	64 96       	adiw	r28, 0x14	; 20
     db4:	0f b6       	in	r0, 0x3f	; 63
     db6:	f8 94       	cli
     db8:	de bf       	out	0x3e, r29	; 62
     dba:	0f be       	out	0x3f, r0	; 63
     dbc:	cd bf       	out	0x3d, r28	; 61
     dbe:	df 91       	pop	r29
     dc0:	cf 91       	pop	r28
     dc2:	1f 91       	pop	r17
     dc4:	0f 91       	pop	r16
     dc6:	08 95       	ret

00000dc8 <showOutputProcess()>:
     dc8:	81 e5       	ldi	r24, 0x51	; 81
     dca:	93 e0       	ldi	r25, 0x03	; 3
     dcc:	0e 94 f0 15 	call	0x2be0	; 0x2be0 <Process::running()>
     dd0:	81 11       	cpse	r24, r1
     dd2:	fa cf       	rjmp	.-12     	; 0xdc8 <showOutputProcess()>
     dd4:	8f ea       	ldi	r24, 0xAF	; 175
     dd6:	93 e0       	ldi	r25, 0x03	; 3
     dd8:	0e 94 f0 0b 	call	0x17e0	; 0x17e0 <Print::println()>
     ddc:	81 e5       	ldi	r24, 0x51	; 81
     dde:	93 e0       	ldi	r25, 0x03	; 3
     de0:	0e 94 45 15 	call	0x2a8a	; 0x2a8a <Process::available()>
     de4:	18 16       	cp	r1, r24
     de6:	19 06       	cpc	r1, r25
     de8:	54 f4       	brge	.+20     	; 0xdfe <showOutputProcess()+0x36>
     dea:	81 e5       	ldi	r24, 0x51	; 81
     dec:	93 e0       	ldi	r25, 0x03	; 3
     dee:	0e 94 4f 15 	call	0x2a9e	; 0x2a9e <Process::read()>
     df2:	68 2f       	mov	r22, r24
     df4:	8f ea       	ldi	r24, 0xAF	; 175
     df6:	93 e0       	ldi	r25, 0x03	; 3
     df8:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <Print::print(char)>
     dfc:	ef cf       	rjmp	.-34     	; 0xddc <showOutputProcess()+0x14>
     dfe:	8f ea       	ldi	r24, 0xAF	; 175
     e00:	93 e0       	ldi	r25, 0x03	; 3
     e02:	0c 94 86 09 	jmp	0x130c	; 0x130c <Serial_::flush()>

00000e06 <processCommand()>:
     e06:	cf 93       	push	r28
     e08:	df 93       	push	r29
     e0a:	00 d0       	rcall	.+0      	; 0xe0c <processCommand()+0x6>
     e0c:	00 d0       	rcall	.+0      	; 0xe0e <processCommand()+0x8>
     e0e:	00 d0       	rcall	.+0      	; 0xe10 <processCommand()+0xa>
     e10:	cd b7       	in	r28, 0x3d	; 61
     e12:	de b7       	in	r29, 0x3e	; 62
     e14:	63 ee       	ldi	r22, 0xE3	; 227
     e16:	71 e0       	ldi	r23, 0x01	; 1
     e18:	ce 01       	movw	r24, r28
     e1a:	01 96       	adiw	r24, 0x01	; 1
     e1c:	0e 94 29 11 	call	0x2252	; 0x2252 <String::String(char const*)>
     e20:	be 01       	movw	r22, r28
     e22:	6f 5f       	subi	r22, 0xFF	; 255
     e24:	7f 4f       	sbci	r23, 0xFF	; 255
     e26:	81 e5       	ldi	r24, 0x51	; 81
     e28:	93 e0       	ldi	r25, 0x03	; 3
     e2a:	0e 94 d8 16 	call	0x2db0	; 0x2db0 <Process::runShellCommand(String const&)>
     e2e:	ce 01       	movw	r24, r28
     e30:	01 96       	adiw	r24, 0x01	; 1
     e32:	0e 94 bb 10 	call	0x2176	; 0x2176 <String::~String()>
     e36:	0e 94 e4 06 	call	0xdc8	; 0xdc8 <showOutputProcess()>
     e3a:	26 96       	adiw	r28, 0x06	; 6
     e3c:	0f b6       	in	r0, 0x3f	; 63
     e3e:	f8 94       	cli
     e40:	de bf       	out	0x3e, r29	; 62
     e42:	0f be       	out	0x3f, r0	; 63
     e44:	cd bf       	out	0x3d, r28	; 61
     e46:	df 91       	pop	r29
     e48:	cf 91       	pop	r28
     e4a:	08 95       	ret

00000e4c <loop>:
     e4c:	cf 93       	push	r28
     e4e:	df 93       	push	r29
     e50:	6c ee       	ldi	r22, 0xEC	; 236
     e52:	71 e0       	ldi	r23, 0x01	; 1
     e54:	8f ea       	ldi	r24, 0xAF	; 175
     e56:	93 e0       	ldi	r25, 0x03	; 3
     e58:	0e 94 06 0c 	call	0x180c	; 0x180c <Print::println(char const*)>
     e5c:	6e ef       	ldi	r22, 0xFE	; 254
     e5e:	71 e0       	ldi	r23, 0x01	; 1
     e60:	8f ea       	ldi	r24, 0xAF	; 175
     e62:	93 e0       	ldi	r25, 0x03	; 3
     e64:	0e 94 06 0c 	call	0x180c	; 0x180c <Print::println(char const*)>
     e68:	6b e0       	ldi	r22, 0x0B	; 11
     e6a:	72 e0       	ldi	r23, 0x02	; 2
     e6c:	8f ea       	ldi	r24, 0xAF	; 175
     e6e:	93 e0       	ldi	r25, 0x03	; 3
     e70:	0e 94 06 0c 	call	0x180c	; 0x180c <Print::println(char const*)>
     e74:	69 e1       	ldi	r22, 0x19	; 25
     e76:	72 e0       	ldi	r23, 0x02	; 2
     e78:	8f ea       	ldi	r24, 0xAF	; 175
     e7a:	93 e0       	ldi	r25, 0x03	; 3
     e7c:	0e 94 06 0c 	call	0x180c	; 0x180c <Print::println(char const*)>
     e80:	68 e2       	ldi	r22, 0x28	; 40
     e82:	72 e0       	ldi	r23, 0x02	; 2
     e84:	8f ea       	ldi	r24, 0xAF	; 175
     e86:	93 e0       	ldi	r25, 0x03	; 3
     e88:	0e 94 06 0c 	call	0x180c	; 0x180c <Print::println(char const*)>
     e8c:	63 e4       	ldi	r22, 0x43	; 67
     e8e:	72 e0       	ldi	r23, 0x02	; 2
     e90:	8f ea       	ldi	r24, 0xAF	; 175
     e92:	93 e0       	ldi	r25, 0x03	; 3
     e94:	0e 94 06 0c 	call	0x180c	; 0x180c <Print::println(char const*)>
     e98:	65 e5       	ldi	r22, 0x55	; 85
     e9a:	72 e0       	ldi	r23, 0x02	; 2
     e9c:	8f ea       	ldi	r24, 0xAF	; 175
     e9e:	93 e0       	ldi	r25, 0x03	; 3
     ea0:	0e 94 06 0c 	call	0x180c	; 0x180c <Print::println(char const*)>
     ea4:	82 e3       	ldi	r24, 0x32	; 50
     ea6:	93 e0       	ldi	r25, 0x03	; 3
     ea8:	0e 94 7b 17 	call	0x2ef6	; 0x2ef6 <SoftwareSerial::available()>
     eac:	89 2b       	or	r24, r25
     eae:	d1 f3       	breq	.-12     	; 0xea4 <loop+0x58>
     eb0:	82 e3       	ldi	r24, 0x32	; 50
     eb2:	93 e0       	ldi	r25, 0x03	; 3
     eb4:	0e 94 ee 16 	call	0x2ddc	; 0x2ddc <SoftwareSerial::read()>
     eb8:	c8 2f       	mov	r28, r24
     eba:	81 33       	cpi	r24, 0x31	; 49
     ebc:	41 f4       	brne	.+16     	; 0xece <loop+0x82>
     ebe:	60 e0       	ldi	r22, 0x00	; 0
     ec0:	70 e0       	ldi	r23, 0x00	; 0
     ec2:	80 e0       	ldi	r24, 0x00	; 0
     ec4:	90 e0       	ldi	r25, 0x00	; 0
     ec6:	df 91       	pop	r29
     ec8:	cf 91       	pop	r28
     eca:	0c 94 bc 04 	jmp	0x978	; 0x978 <printSRAM(unsigned char*, unsigned char*)>
     ece:	82 33       	cpi	r24, 0x32	; 50
     ed0:	41 f4       	brne	.+16     	; 0xee2 <loop+0x96>
     ed2:	60 e0       	ldi	r22, 0x00	; 0
     ed4:	70 e0       	ldi	r23, 0x00	; 0
     ed6:	80 e0       	ldi	r24, 0x00	; 0
     ed8:	90 e0       	ldi	r25, 0x00	; 0
     eda:	df 91       	pop	r29
     edc:	cf 91       	pop	r28
     ede:	0c 94 5e 03 	jmp	0x6bc	; 0x6bc <printFlashMemory(unsigned char*, unsigned char*)>
     ee2:	83 33       	cpi	r24, 0x33	; 51
     ee4:	21 f4       	brne	.+8      	; 0xeee <loop+0xa2>
     ee6:	df 91       	pop	r29
     ee8:	cf 91       	pop	r28
     eea:	0c 94 18 02 	jmp	0x430	; 0x430 <printEEPROM()>
     eee:	85 33       	cpi	r24, 0x35	; 53
     ef0:	91 f4       	brne	.+36     	; 0xf16 <loop+0xca>
     ef2:	69 e6       	ldi	r22, 0x69	; 105
     ef4:	72 e0       	ldi	r23, 0x02	; 2
     ef6:	8f ea       	ldi	r24, 0xAF	; 175
     ef8:	93 e0       	ldi	r25, 0x03	; 3
     efa:	0e 94 06 0c 	call	0x180c	; 0x180c <Print::println(char const*)>
     efe:	28 e0       	ldi	r18, 0x08	; 8
     f00:	88 e1       	ldi	r24, 0x18	; 24
     f02:	90 e0       	ldi	r25, 0x00	; 0
     f04:	0f b6       	in	r0, 0x3f	; 63
     f06:	f8 94       	cli
     f08:	a8 95       	wdr
     f0a:	80 93 60 00 	sts	0x0060, r24
     f0e:	0f be       	out	0x3f, r0	; 63
     f10:	20 93 60 00 	sts	0x0060, r18
     f14:	ff cf       	rjmp	.-2      	; 0xf14 <loop+0xc8>
     f16:	84 33       	cpi	r24, 0x34	; 52
     f18:	e1 f4       	brne	.+56     	; 0xf52 <loop+0x106>
     f1a:	6e e7       	ldi	r22, 0x7E	; 126
     f1c:	72 e0       	ldi	r23, 0x02	; 2
     f1e:	8f ea       	ldi	r24, 0xAF	; 175
     f20:	93 e0       	ldi	r25, 0x03	; 3
     f22:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     f26:	0e 94 a0 06 	call	0xd40	; 0xd40 <vulnerable_func()>
     f2a:	ec 01       	movw	r28, r24
     f2c:	6d e9       	ldi	r22, 0x9D	; 157
     f2e:	72 e0       	ldi	r23, 0x02	; 2
     f30:	8f ea       	ldi	r24, 0xAF	; 175
     f32:	93 e0       	ldi	r25, 0x03	; 3
     f34:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     f38:	d7 fd       	sbrc	r29, 7
     f3a:	03 c0       	rjmp	.+6      	; 0xf42 <loop+0xf6>
     f3c:	62 eb       	ldi	r22, 0xB2	; 178
     f3e:	72 e0       	ldi	r23, 0x02	; 2
     f40:	02 c0       	rjmp	.+4      	; 0xf46 <loop+0xfa>
     f42:	65 eb       	ldi	r22, 0xB5	; 181
     f44:	72 e0       	ldi	r23, 0x02	; 2
     f46:	8f ea       	ldi	r24, 0xAF	; 175
     f48:	93 e0       	ldi	r25, 0x03	; 3
     f4a:	df 91       	pop	r29
     f4c:	cf 91       	pop	r28
     f4e:	0c 94 06 0c 	jmp	0x180c	; 0x180c <Print::println(char const*)>
     f52:	86 33       	cpi	r24, 0x36	; 54
     f54:	21 f4       	brne	.+8      	; 0xf5e <loop+0x112>
     f56:	df 91       	pop	r29
     f58:	cf 91       	pop	r28
     f5a:	0c 94 03 07 	jmp	0xe06	; 0xe06 <processCommand()>
     f5e:	68 eb       	ldi	r22, 0xB8	; 184
     f60:	72 e0       	ldi	r23, 0x02	; 2
     f62:	8f ea       	ldi	r24, 0xAF	; 175
     f64:	93 e0       	ldi	r25, 0x03	; 3
     f66:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <Print::print(char const*)>
     f6a:	6c 2f       	mov	r22, r28
     f6c:	8f ea       	ldi	r24, 0xAF	; 175
     f6e:	93 e0       	ldi	r25, 0x03	; 3
     f70:	df 91       	pop	r29
     f72:	cf 91       	pop	r28
     f74:	0c 94 18 0c 	jmp	0x1830	; 0x1830 <Print::println(char)>

00000f78 <__vector_23>:
     f78:	1f 92       	push	r1
     f7a:	0f 92       	push	r0
     f7c:	0f b6       	in	r0, 0x3f	; 63
     f7e:	0f 92       	push	r0
     f80:	11 24       	eor	r1, r1
     f82:	2f 93       	push	r18
     f84:	3f 93       	push	r19
     f86:	8f 93       	push	r24
     f88:	9f 93       	push	r25
     f8a:	af 93       	push	r26
     f8c:	bf 93       	push	r27
     f8e:	80 91 a7 03 	lds	r24, 0x03A7
     f92:	90 91 a8 03 	lds	r25, 0x03A8
     f96:	a0 91 a9 03 	lds	r26, 0x03A9
     f9a:	b0 91 aa 03 	lds	r27, 0x03AA
     f9e:	30 91 a6 03 	lds	r19, 0x03A6
     fa2:	23 e0       	ldi	r18, 0x03	; 3
     fa4:	23 0f       	add	r18, r19
     fa6:	2d 37       	cpi	r18, 0x7D	; 125
     fa8:	20 f4       	brcc	.+8      	; 0xfb2 <__vector_23+0x3a>
     faa:	01 96       	adiw	r24, 0x01	; 1
     fac:	a1 1d       	adc	r26, r1
     fae:	b1 1d       	adc	r27, r1
     fb0:	05 c0       	rjmp	.+10     	; 0xfbc <__vector_23+0x44>
     fb2:	26 e8       	ldi	r18, 0x86	; 134
     fb4:	23 0f       	add	r18, r19
     fb6:	02 96       	adiw	r24, 0x02	; 2
     fb8:	a1 1d       	adc	r26, r1
     fba:	b1 1d       	adc	r27, r1
     fbc:	20 93 a6 03 	sts	0x03A6, r18
     fc0:	80 93 a7 03 	sts	0x03A7, r24
     fc4:	90 93 a8 03 	sts	0x03A8, r25
     fc8:	a0 93 a9 03 	sts	0x03A9, r26
     fcc:	b0 93 aa 03 	sts	0x03AA, r27
     fd0:	80 91 ab 03 	lds	r24, 0x03AB
     fd4:	90 91 ac 03 	lds	r25, 0x03AC
     fd8:	a0 91 ad 03 	lds	r26, 0x03AD
     fdc:	b0 91 ae 03 	lds	r27, 0x03AE
     fe0:	01 96       	adiw	r24, 0x01	; 1
     fe2:	a1 1d       	adc	r26, r1
     fe4:	b1 1d       	adc	r27, r1
     fe6:	80 93 ab 03 	sts	0x03AB, r24
     fea:	90 93 ac 03 	sts	0x03AC, r25
     fee:	a0 93 ad 03 	sts	0x03AD, r26
     ff2:	b0 93 ae 03 	sts	0x03AE, r27
     ff6:	bf 91       	pop	r27
     ff8:	af 91       	pop	r26
     ffa:	9f 91       	pop	r25
     ffc:	8f 91       	pop	r24
     ffe:	3f 91       	pop	r19
    1000:	2f 91       	pop	r18
    1002:	0f 90       	pop	r0
    1004:	0f be       	out	0x3f, r0	; 63
    1006:	0f 90       	pop	r0
    1008:	1f 90       	pop	r1
    100a:	18 95       	reti

0000100c <millis>:
    100c:	2f b7       	in	r18, 0x3f	; 63
    100e:	f8 94       	cli
    1010:	60 91 a7 03 	lds	r22, 0x03A7
    1014:	70 91 a8 03 	lds	r23, 0x03A8
    1018:	80 91 a9 03 	lds	r24, 0x03A9
    101c:	90 91 aa 03 	lds	r25, 0x03AA
    1020:	2f bf       	out	0x3f, r18	; 63
    1022:	08 95       	ret

00001024 <micros>:
    1024:	3f b7       	in	r19, 0x3f	; 63
    1026:	f8 94       	cli
    1028:	80 91 ab 03 	lds	r24, 0x03AB
    102c:	90 91 ac 03 	lds	r25, 0x03AC
    1030:	a0 91 ad 03 	lds	r26, 0x03AD
    1034:	b0 91 ae 03 	lds	r27, 0x03AE
    1038:	26 b5       	in	r18, 0x26	; 38
    103a:	a8 9b       	sbis	0x15, 0	; 21
    103c:	05 c0       	rjmp	.+10     	; 0x1048 <micros+0x24>
    103e:	2f 3f       	cpi	r18, 0xFF	; 255
    1040:	19 f0       	breq	.+6      	; 0x1048 <micros+0x24>
    1042:	01 96       	adiw	r24, 0x01	; 1
    1044:	a1 1d       	adc	r26, r1
    1046:	b1 1d       	adc	r27, r1
    1048:	3f bf       	out	0x3f, r19	; 63
    104a:	66 27       	eor	r22, r22
    104c:	78 2f       	mov	r23, r24
    104e:	89 2f       	mov	r24, r25
    1050:	9a 2f       	mov	r25, r26
    1052:	62 0f       	add	r22, r18
    1054:	71 1d       	adc	r23, r1
    1056:	81 1d       	adc	r24, r1
    1058:	91 1d       	adc	r25, r1
    105a:	42 e0       	ldi	r20, 0x02	; 2
    105c:	66 0f       	add	r22, r22
    105e:	77 1f       	adc	r23, r23
    1060:	88 1f       	adc	r24, r24
    1062:	99 1f       	adc	r25, r25
    1064:	4a 95       	dec	r20
    1066:	d1 f7       	brne	.-12     	; 0x105c <micros+0x38>
    1068:	08 95       	ret

0000106a <delay>:
    106a:	cf 92       	push	r12
    106c:	df 92       	push	r13
    106e:	ef 92       	push	r14
    1070:	ff 92       	push	r15
    1072:	cf 93       	push	r28
    1074:	df 93       	push	r29
    1076:	6b 01       	movw	r12, r22
    1078:	7c 01       	movw	r14, r24
    107a:	0e 94 12 08 	call	0x1024	; 0x1024 <micros>
    107e:	eb 01       	movw	r28, r22
    1080:	c1 14       	cp	r12, r1
    1082:	d1 04       	cpc	r13, r1
    1084:	e1 04       	cpc	r14, r1
    1086:	f1 04       	cpc	r15, r1
    1088:	89 f0       	breq	.+34     	; 0x10ac <delay+0x42>
    108a:	0e 94 8b 19 	call	0x3316	; 0x3316 <yield>
    108e:	0e 94 12 08 	call	0x1024	; 0x1024 <micros>
    1092:	6c 1b       	sub	r22, r28
    1094:	7d 0b       	sbc	r23, r29
    1096:	68 3e       	cpi	r22, 0xE8	; 232
    1098:	73 40       	sbci	r23, 0x03	; 3
    109a:	90 f3       	brcs	.-28     	; 0x1080 <delay+0x16>
    109c:	81 e0       	ldi	r24, 0x01	; 1
    109e:	c8 1a       	sub	r12, r24
    10a0:	d1 08       	sbc	r13, r1
    10a2:	e1 08       	sbc	r14, r1
    10a4:	f1 08       	sbc	r15, r1
    10a6:	c8 51       	subi	r28, 0x18	; 24
    10a8:	dc 4f       	sbci	r29, 0xFC	; 252
    10aa:	ea cf       	rjmp	.-44     	; 0x1080 <delay+0x16>
    10ac:	df 91       	pop	r29
    10ae:	cf 91       	pop	r28
    10b0:	ff 90       	pop	r15
    10b2:	ef 90       	pop	r14
    10b4:	df 90       	pop	r13
    10b6:	cf 90       	pop	r12
    10b8:	08 95       	ret

000010ba <init>:
    10ba:	78 94       	sei
    10bc:	84 b5       	in	r24, 0x24	; 36
    10be:	82 60       	ori	r24, 0x02	; 2
    10c0:	84 bd       	out	0x24, r24	; 36
    10c2:	84 b5       	in	r24, 0x24	; 36
    10c4:	81 60       	ori	r24, 0x01	; 1
    10c6:	84 bd       	out	0x24, r24	; 36
    10c8:	85 b5       	in	r24, 0x25	; 37
    10ca:	82 60       	ori	r24, 0x02	; 2
    10cc:	85 bd       	out	0x25, r24	; 37
    10ce:	85 b5       	in	r24, 0x25	; 37
    10d0:	81 60       	ori	r24, 0x01	; 1
    10d2:	85 bd       	out	0x25, r24	; 37
    10d4:	ee e6       	ldi	r30, 0x6E	; 110
    10d6:	f0 e0       	ldi	r31, 0x00	; 0
    10d8:	80 81       	ld	r24, Z
    10da:	81 60       	ori	r24, 0x01	; 1
    10dc:	80 83       	st	Z, r24
    10de:	e1 e8       	ldi	r30, 0x81	; 129
    10e0:	f0 e0       	ldi	r31, 0x00	; 0
    10e2:	10 82       	st	Z, r1
    10e4:	80 81       	ld	r24, Z
    10e6:	82 60       	ori	r24, 0x02	; 2
    10e8:	80 83       	st	Z, r24
    10ea:	80 81       	ld	r24, Z
    10ec:	81 60       	ori	r24, 0x01	; 1
    10ee:	80 83       	st	Z, r24
    10f0:	e0 e8       	ldi	r30, 0x80	; 128
    10f2:	f0 e0       	ldi	r31, 0x00	; 0
    10f4:	80 81       	ld	r24, Z
    10f6:	81 60       	ori	r24, 0x01	; 1
    10f8:	80 83       	st	Z, r24
    10fa:	e1 e9       	ldi	r30, 0x91	; 145
    10fc:	f0 e0       	ldi	r31, 0x00	; 0
    10fe:	80 81       	ld	r24, Z
    1100:	82 60       	ori	r24, 0x02	; 2
    1102:	80 83       	st	Z, r24
    1104:	80 81       	ld	r24, Z
    1106:	81 60       	ori	r24, 0x01	; 1
    1108:	80 83       	st	Z, r24
    110a:	e0 e9       	ldi	r30, 0x90	; 144
    110c:	f0 e0       	ldi	r31, 0x00	; 0
    110e:	80 81       	ld	r24, Z
    1110:	81 60       	ori	r24, 0x01	; 1
    1112:	80 83       	st	Z, r24
    1114:	e1 ec       	ldi	r30, 0xC1	; 193
    1116:	f0 e0       	ldi	r31, 0x00	; 0
    1118:	80 81       	ld	r24, Z
    111a:	84 60       	ori	r24, 0x04	; 4
    111c:	80 83       	st	Z, r24
    111e:	80 81       	ld	r24, Z
    1120:	82 60       	ori	r24, 0x02	; 2
    1122:	80 83       	st	Z, r24
    1124:	80 81       	ld	r24, Z
    1126:	81 60       	ori	r24, 0x01	; 1
    1128:	80 83       	st	Z, r24
    112a:	e3 ec       	ldi	r30, 0xC3	; 195
    112c:	f0 e0       	ldi	r31, 0x00	; 0
    112e:	80 81       	ld	r24, Z
    1130:	81 60       	ori	r24, 0x01	; 1
    1132:	80 83       	st	Z, r24
    1134:	e0 ec       	ldi	r30, 0xC0	; 192
    1136:	f0 e0       	ldi	r31, 0x00	; 0
    1138:	80 81       	ld	r24, Z
    113a:	82 60       	ori	r24, 0x02	; 2
    113c:	80 83       	st	Z, r24
    113e:	e2 ec       	ldi	r30, 0xC2	; 194
    1140:	f0 e0       	ldi	r31, 0x00	; 0
    1142:	80 81       	ld	r24, Z
    1144:	81 60       	ori	r24, 0x01	; 1
    1146:	80 83       	st	Z, r24
    1148:	ea e7       	ldi	r30, 0x7A	; 122
    114a:	f0 e0       	ldi	r31, 0x00	; 0
    114c:	80 81       	ld	r24, Z
    114e:	84 60       	ori	r24, 0x04	; 4
    1150:	80 83       	st	Z, r24
    1152:	80 81       	ld	r24, Z
    1154:	82 60       	ori	r24, 0x02	; 2
    1156:	80 83       	st	Z, r24
    1158:	80 81       	ld	r24, Z
    115a:	81 60       	ori	r24, 0x01	; 1
    115c:	80 83       	st	Z, r24
    115e:	80 81       	ld	r24, Z
    1160:	80 68       	ori	r24, 0x80	; 128
    1162:	80 83       	st	Z, r24
    1164:	08 95       	ret

00001166 <turnOffPWM>:
    1166:	90 e0       	ldi	r25, 0x00	; 0
    1168:	fc 01       	movw	r30, r24
    116a:	31 97       	sbiw	r30, 0x01	; 1
    116c:	ef 30       	cpi	r30, 0x0F	; 15
    116e:	f1 05       	cpc	r31, r1
    1170:	b0 f5       	brcc	.+108    	; 0x11de <turnOffPWM+0x78>
    1172:	ea 5a       	subi	r30, 0xAA	; 170
    1174:	ff 4f       	sbci	r31, 0xFF	; 255
    1176:	0c 94 73 20 	jmp	0x40e6	; 0x40e6 <__tablejump2__>
    117a:	80 91 80 00 	lds	r24, 0x0080
    117e:	8f 77       	andi	r24, 0x7F	; 127
    1180:	03 c0       	rjmp	.+6      	; 0x1188 <turnOffPWM+0x22>
    1182:	80 91 80 00 	lds	r24, 0x0080
    1186:	8f 7d       	andi	r24, 0xDF	; 223
    1188:	80 93 80 00 	sts	0x0080, r24
    118c:	08 95       	ret
    118e:	80 91 80 00 	lds	r24, 0x0080
    1192:	87 7f       	andi	r24, 0xF7	; 247
    1194:	f9 cf       	rjmp	.-14     	; 0x1188 <turnOffPWM+0x22>
    1196:	84 b5       	in	r24, 0x24	; 36
    1198:	8f 77       	andi	r24, 0x7F	; 127
    119a:	02 c0       	rjmp	.+4      	; 0x11a0 <turnOffPWM+0x3a>
    119c:	84 b5       	in	r24, 0x24	; 36
    119e:	8f 7d       	andi	r24, 0xDF	; 223
    11a0:	84 bd       	out	0x24, r24	; 36
    11a2:	08 95       	ret
    11a4:	80 91 90 00 	lds	r24, 0x0090
    11a8:	8f 77       	andi	r24, 0x7F	; 127
    11aa:	07 c0       	rjmp	.+14     	; 0x11ba <turnOffPWM+0x54>
    11ac:	80 91 90 00 	lds	r24, 0x0090
    11b0:	8f 7d       	andi	r24, 0xDF	; 223
    11b2:	03 c0       	rjmp	.+6      	; 0x11ba <turnOffPWM+0x54>
    11b4:	80 91 90 00 	lds	r24, 0x0090
    11b8:	87 7f       	andi	r24, 0xF7	; 247
    11ba:	80 93 90 00 	sts	0x0090, r24
    11be:	08 95       	ret
    11c0:	80 91 c0 00 	lds	r24, 0x00C0
    11c4:	8f 77       	andi	r24, 0x7F	; 127
    11c6:	03 c0       	rjmp	.+6      	; 0x11ce <turnOffPWM+0x68>
    11c8:	80 91 c0 00 	lds	r24, 0x00C0
    11cc:	8f 7d       	andi	r24, 0xDF	; 223
    11ce:	80 93 c0 00 	sts	0x00C0, r24
    11d2:	08 95       	ret
    11d4:	80 91 c2 00 	lds	r24, 0x00C2
    11d8:	87 7f       	andi	r24, 0xF7	; 247
    11da:	80 93 c2 00 	sts	0x00C2, r24
    11de:	08 95       	ret

000011e0 <pinMode>:
    11e0:	cf 93       	push	r28
    11e2:	df 93       	push	r29
    11e4:	90 e0       	ldi	r25, 0x00	; 0
    11e6:	fc 01       	movw	r30, r24
    11e8:	eb 5b       	subi	r30, 0xBB	; 187
    11ea:	fe 4f       	sbci	r31, 0xFE	; 254
    11ec:	24 91       	lpm	r18, Z
    11ee:	fc 01       	movw	r30, r24
    11f0:	ed 59       	subi	r30, 0x9D	; 157
    11f2:	fe 4f       	sbci	r31, 0xFE	; 254
    11f4:	84 91       	lpm	r24, Z
    11f6:	88 23       	and	r24, r24
    11f8:	49 f1       	breq	.+82     	; 0x124c <pinMode+0x6c>
    11fa:	90 e0       	ldi	r25, 0x00	; 0
    11fc:	88 0f       	add	r24, r24
    11fe:	99 1f       	adc	r25, r25
    1200:	fc 01       	movw	r30, r24
    1202:	e3 56       	subi	r30, 0x63	; 99
    1204:	fe 4f       	sbci	r31, 0xFE	; 254
    1206:	a5 91       	lpm	r26, Z+
    1208:	b4 91       	lpm	r27, Z
    120a:	81 57       	subi	r24, 0x71	; 113
    120c:	9e 4f       	sbci	r25, 0xFE	; 254
    120e:	fc 01       	movw	r30, r24
    1210:	c5 91       	lpm	r28, Z+
    1212:	d4 91       	lpm	r29, Z
    1214:	9f b7       	in	r25, 0x3f	; 63
    1216:	61 11       	cpse	r22, r1
    1218:	08 c0       	rjmp	.+16     	; 0x122a <pinMode+0x4a>
    121a:	f8 94       	cli
    121c:	8c 91       	ld	r24, X
    121e:	20 95       	com	r18
    1220:	82 23       	and	r24, r18
    1222:	8c 93       	st	X, r24
    1224:	88 81       	ld	r24, Y
    1226:	82 23       	and	r24, r18
    1228:	0a c0       	rjmp	.+20     	; 0x123e <pinMode+0x5e>
    122a:	62 30       	cpi	r22, 0x02	; 2
    122c:	51 f4       	brne	.+20     	; 0x1242 <pinMode+0x62>
    122e:	f8 94       	cli
    1230:	8c 91       	ld	r24, X
    1232:	32 2f       	mov	r19, r18
    1234:	30 95       	com	r19
    1236:	83 23       	and	r24, r19
    1238:	8c 93       	st	X, r24
    123a:	88 81       	ld	r24, Y
    123c:	82 2b       	or	r24, r18
    123e:	88 83       	st	Y, r24
    1240:	04 c0       	rjmp	.+8      	; 0x124a <pinMode+0x6a>
    1242:	f8 94       	cli
    1244:	8c 91       	ld	r24, X
    1246:	82 2b       	or	r24, r18
    1248:	8c 93       	st	X, r24
    124a:	9f bf       	out	0x3f, r25	; 63
    124c:	df 91       	pop	r29
    124e:	cf 91       	pop	r28
    1250:	08 95       	ret

00001252 <digitalWrite>:
    1252:	0f 93       	push	r16
    1254:	1f 93       	push	r17
    1256:	cf 93       	push	r28
    1258:	df 93       	push	r29
    125a:	1f 92       	push	r1
    125c:	cd b7       	in	r28, 0x3d	; 61
    125e:	de b7       	in	r29, 0x3e	; 62
    1260:	28 2f       	mov	r18, r24
    1262:	30 e0       	ldi	r19, 0x00	; 0
    1264:	f9 01       	movw	r30, r18
    1266:	e9 5d       	subi	r30, 0xD9	; 217
    1268:	fe 4f       	sbci	r31, 0xFE	; 254
    126a:	84 91       	lpm	r24, Z
    126c:	f9 01       	movw	r30, r18
    126e:	eb 5b       	subi	r30, 0xBB	; 187
    1270:	fe 4f       	sbci	r31, 0xFE	; 254
    1272:	14 91       	lpm	r17, Z
    1274:	f9 01       	movw	r30, r18
    1276:	ed 59       	subi	r30, 0x9D	; 157
    1278:	fe 4f       	sbci	r31, 0xFE	; 254
    127a:	04 91       	lpm	r16, Z
    127c:	00 23       	and	r16, r16
    127e:	c9 f0       	breq	.+50     	; 0x12b2 <digitalWrite+0x60>
    1280:	88 23       	and	r24, r24
    1282:	21 f0       	breq	.+8      	; 0x128c <digitalWrite+0x3a>
    1284:	69 83       	std	Y+1, r22	; 0x01
    1286:	0e 94 b3 08 	call	0x1166	; 0x1166 <turnOffPWM>
    128a:	69 81       	ldd	r22, Y+1	; 0x01
    128c:	e0 2f       	mov	r30, r16
    128e:	f0 e0       	ldi	r31, 0x00	; 0
    1290:	ee 0f       	add	r30, r30
    1292:	ff 1f       	adc	r31, r31
    1294:	e1 57       	subi	r30, 0x71	; 113
    1296:	fe 4f       	sbci	r31, 0xFE	; 254
    1298:	a5 91       	lpm	r26, Z+
    129a:	b4 91       	lpm	r27, Z
    129c:	9f b7       	in	r25, 0x3f	; 63
    129e:	f8 94       	cli
    12a0:	8c 91       	ld	r24, X
    12a2:	61 11       	cpse	r22, r1
    12a4:	03 c0       	rjmp	.+6      	; 0x12ac <digitalWrite+0x5a>
    12a6:	10 95       	com	r17
    12a8:	81 23       	and	r24, r17
    12aa:	01 c0       	rjmp	.+2      	; 0x12ae <digitalWrite+0x5c>
    12ac:	81 2b       	or	r24, r17
    12ae:	8c 93       	st	X, r24
    12b0:	9f bf       	out	0x3f, r25	; 63
    12b2:	0f 90       	pop	r0
    12b4:	df 91       	pop	r29
    12b6:	cf 91       	pop	r28
    12b8:	1f 91       	pop	r17
    12ba:	0f 91       	pop	r16
    12bc:	08 95       	ret

000012be <Serial_::write(unsigned char)>:
    12be:	cf 93       	push	r28
    12c0:	df 93       	push	r29
    12c2:	1f 92       	push	r1
    12c4:	cd b7       	in	r28, 0x3d	; 61
    12c6:	de b7       	in	r29, 0x3e	; 62
    12c8:	69 83       	std	Y+1, r22	; 0x01
    12ca:	dc 01       	movw	r26, r24
    12cc:	ed 91       	ld	r30, X+
    12ce:	fc 91       	ld	r31, X
    12d0:	02 80       	ldd	r0, Z+2	; 0x02
    12d2:	f3 81       	ldd	r31, Z+3	; 0x03
    12d4:	e0 2d       	mov	r30, r0
    12d6:	41 e0       	ldi	r20, 0x01	; 1
    12d8:	50 e0       	ldi	r21, 0x00	; 0
    12da:	be 01       	movw	r22, r28
    12dc:	6f 5f       	subi	r22, 0xFF	; 255
    12de:	7f 4f       	sbci	r23, 0xFF	; 255
    12e0:	09 95       	icall
    12e2:	0f 90       	pop	r0
    12e4:	df 91       	pop	r29
    12e6:	cf 91       	pop	r28
    12e8:	08 95       	ret

000012ea <Serial_::peek()>:
    12ea:	cf 93       	push	r28
    12ec:	df 93       	push	r29
    12ee:	ec 01       	movw	r28, r24
    12f0:	8c 85       	ldd	r24, Y+12	; 0x0c
    12f2:	9d 85       	ldd	r25, Y+13	; 0x0d
    12f4:	97 ff       	sbrs	r25, 7
    12f6:	05 c0       	rjmp	.+10     	; 0x1302 <Serial_::peek()+0x18>
    12f8:	82 e0       	ldi	r24, 0x02	; 2
    12fa:	0e 94 e8 0d 	call	0x1bd0	; 0x1bd0 <USB_Recv(unsigned char)>
    12fe:	9d 87       	std	Y+13, r25	; 0x0d
    1300:	8c 87       	std	Y+12, r24	; 0x0c
    1302:	8c 85       	ldd	r24, Y+12	; 0x0c
    1304:	9d 85       	ldd	r25, Y+13	; 0x0d
    1306:	df 91       	pop	r29
    1308:	cf 91       	pop	r28
    130a:	08 95       	ret

0000130c <Serial_::flush()>:
    130c:	83 e0       	ldi	r24, 0x03	; 3
    130e:	0c 94 3d 10 	jmp	0x207a	; 0x207a <USB_Flush(unsigned char)>

00001312 <Serial_::available()>:
    1312:	fc 01       	movw	r30, r24
    1314:	84 85       	ldd	r24, Z+12	; 0x0c
    1316:	95 85       	ldd	r25, Z+13	; 0x0d
    1318:	97 fd       	sbrc	r25, 7
    131a:	06 c0       	rjmp	.+12     	; 0x1328 <Serial_::available()+0x16>
    131c:	82 e0       	ldi	r24, 0x02	; 2
    131e:	0e 94 90 0d 	call	0x1b20	; 0x1b20 <USB_Available(unsigned char)>
    1322:	90 e0       	ldi	r25, 0x00	; 0
    1324:	01 96       	adiw	r24, 0x01	; 1
    1326:	08 95       	ret
    1328:	82 e0       	ldi	r24, 0x02	; 2
    132a:	0e 94 90 0d 	call	0x1b20	; 0x1b20 <USB_Available(unsigned char)>
    132e:	90 e0       	ldi	r25, 0x00	; 0
    1330:	08 95       	ret

00001332 <Serial_::read()>:
    1332:	fc 01       	movw	r30, r24
    1334:	84 85       	ldd	r24, Z+12	; 0x0c
    1336:	95 85       	ldd	r25, Z+13	; 0x0d
    1338:	97 fd       	sbrc	r25, 7
    133a:	05 c0       	rjmp	.+10     	; 0x1346 <Serial_::read()+0x14>
    133c:	2f ef       	ldi	r18, 0xFF	; 255
    133e:	3f ef       	ldi	r19, 0xFF	; 255
    1340:	35 87       	std	Z+13, r19	; 0x0d
    1342:	24 87       	std	Z+12, r18	; 0x0c
    1344:	08 95       	ret
    1346:	82 e0       	ldi	r24, 0x02	; 2
    1348:	0c 94 e8 0d 	jmp	0x1bd0	; 0x1bd0 <USB_Recv(unsigned char)>

0000134c <Serial_::write(unsigned char const*, unsigned int)>:
    134c:	cf 93       	push	r28
    134e:	df 93       	push	r29
    1350:	ec 01       	movw	r28, r24
    1352:	80 91 0d 01 	lds	r24, 0x010D
    1356:	88 23       	and	r24, r24
    1358:	31 f0       	breq	.+12     	; 0x1366 <Serial_::write(unsigned char const*, unsigned int)+0x1a>
    135a:	83 e0       	ldi	r24, 0x03	; 3
    135c:	0e 94 19 0e 	call	0x1c32	; 0x1c32 <USB_Send(unsigned char, void const*, int)>
    1360:	18 16       	cp	r1, r24
    1362:	19 06       	cpc	r1, r25
    1364:	34 f0       	brlt	.+12     	; 0x1372 <Serial_::write(unsigned char const*, unsigned int)+0x26>
    1366:	81 e0       	ldi	r24, 0x01	; 1
    1368:	90 e0       	ldi	r25, 0x00	; 0
    136a:	9b 83       	std	Y+3, r25	; 0x03
    136c:	8a 83       	std	Y+2, r24	; 0x02
    136e:	80 e0       	ldi	r24, 0x00	; 0
    1370:	90 e0       	ldi	r25, 0x00	; 0
    1372:	df 91       	pop	r29
    1374:	cf 91       	pop	r28
    1376:	08 95       	ret

00001378 <CDC_GetInterface(unsigned char*)>:
    1378:	fc 01       	movw	r30, r24
    137a:	20 81       	ld	r18, Z
    137c:	2e 5f       	subi	r18, 0xFE	; 254
    137e:	20 83       	st	Z, r18
    1380:	42 e4       	ldi	r20, 0x42	; 66
    1382:	50 e0       	ldi	r21, 0x00	; 0
    1384:	6b ea       	ldi	r22, 0xAB	; 171
    1386:	71 e0       	ldi	r23, 0x01	; 1
    1388:	80 e8       	ldi	r24, 0x80	; 128
    138a:	0c 94 b4 0e 	jmp	0x1d68	; 0x1d68 <USB_SendControl(unsigned char, void const*, int)>

0000138e <CDC_Setup(Setup&)>:
    138e:	fc 01       	movw	r30, r24
    1390:	81 81       	ldd	r24, Z+1	; 0x01
    1392:	90 81       	ld	r25, Z
    1394:	91 3a       	cpi	r25, 0xA1	; 161
    1396:	59 f4       	brne	.+22     	; 0x13ae <CDC_Setup(Setup&)+0x20>
    1398:	81 32       	cpi	r24, 0x21	; 33
    139a:	09 f0       	breq	.+2      	; 0x139e <CDC_Setup(Setup&)+0x10>
    139c:	3c c0       	rjmp	.+120    	; 0x1416 <CDC_Setup(Setup&)+0x88>
    139e:	47 e0       	ldi	r20, 0x07	; 7
    13a0:	50 e0       	ldi	r21, 0x00	; 0
    13a2:	66 e0       	ldi	r22, 0x06	; 6
    13a4:	71 e0       	ldi	r23, 0x01	; 1
    13a6:	80 e0       	ldi	r24, 0x00	; 0
    13a8:	0e 94 b4 0e 	call	0x1d68	; 0x1d68 <USB_SendControl(unsigned char, void const*, int)>
    13ac:	43 c0       	rjmp	.+134    	; 0x1434 <CDC_Setup(Setup&)+0xa6>
    13ae:	91 32       	cpi	r25, 0x21	; 33
    13b0:	91 f5       	brne	.+100    	; 0x1416 <CDC_Setup(Setup&)+0x88>
    13b2:	80 32       	cpi	r24, 0x20	; 32
    13b4:	39 f4       	brne	.+14     	; 0x13c4 <CDC_Setup(Setup&)+0x36>
    13b6:	67 e0       	ldi	r22, 0x07	; 7
    13b8:	70 e0       	ldi	r23, 0x00	; 0
    13ba:	86 e0       	ldi	r24, 0x06	; 6
    13bc:	91 e0       	ldi	r25, 0x01	; 1
    13be:	0e 94 e5 0e 	call	0x1dca	; 0x1dca <USB_RecvControl(void*, int)>
    13c2:	06 c0       	rjmp	.+12     	; 0x13d0 <CDC_Setup(Setup&)+0x42>
    13c4:	82 32       	cpi	r24, 0x22	; 34
    13c6:	09 f0       	breq	.+2      	; 0x13ca <CDC_Setup(Setup&)+0x3c>
    13c8:	35 c0       	rjmp	.+106    	; 0x1434 <CDC_Setup(Setup&)+0xa6>
    13ca:	82 81       	ldd	r24, Z+2	; 0x02
    13cc:	80 93 0d 01 	sts	0x010D, r24
    13d0:	80 91 06 01 	lds	r24, 0x0106
    13d4:	90 91 07 01 	lds	r25, 0x0107
    13d8:	a0 91 08 01 	lds	r26, 0x0108
    13dc:	b0 91 09 01 	lds	r27, 0x0109
    13e0:	80 3b       	cpi	r24, 0xB0	; 176
    13e2:	94 40       	sbci	r25, 0x04	; 4
    13e4:	a1 05       	cpc	r26, r1
    13e6:	b1 05       	cpc	r27, r1
    13e8:	c1 f4       	brne	.+48     	; 0x141a <CDC_Setup(Setup&)+0x8c>
    13ea:	80 91 0d 01 	lds	r24, 0x010D
    13ee:	80 fd       	sbrc	r24, 0
    13f0:	14 c0       	rjmp	.+40     	; 0x141a <CDC_Setup(Setup&)+0x8c>
    13f2:	87 e7       	ldi	r24, 0x77	; 119
    13f4:	97 e7       	ldi	r25, 0x77	; 119
    13f6:	90 93 01 08 	sts	0x0801, r25
    13fa:	80 93 00 08 	sts	0x0800, r24
    13fe:	2b e0       	ldi	r18, 0x0B	; 11
    1400:	88 e1       	ldi	r24, 0x18	; 24
    1402:	90 e0       	ldi	r25, 0x00	; 0
    1404:	0f b6       	in	r0, 0x3f	; 63
    1406:	f8 94       	cli
    1408:	a8 95       	wdr
    140a:	80 93 60 00 	sts	0x0060, r24
    140e:	0f be       	out	0x3f, r0	; 63
    1410:	20 93 60 00 	sts	0x0060, r18
    1414:	0f c0       	rjmp	.+30     	; 0x1434 <CDC_Setup(Setup&)+0xa6>
    1416:	80 e0       	ldi	r24, 0x00	; 0
    1418:	08 95       	ret
    141a:	88 e1       	ldi	r24, 0x18	; 24
    141c:	0f b6       	in	r0, 0x3f	; 63
    141e:	f8 94       	cli
    1420:	80 93 60 00 	sts	0x0060, r24
    1424:	10 92 60 00 	sts	0x0060, r1
    1428:	0f be       	out	0x3f, r0	; 63
    142a:	a8 95       	wdr
    142c:	10 92 01 08 	sts	0x0801, r1
    1430:	10 92 00 08 	sts	0x0800, r1
    1434:	81 e0       	ldi	r24, 0x01	; 1
    1436:	08 95       	ret

00001438 <Serial_::begin(unsigned long)>:
    1438:	2f ef       	ldi	r18, 0xFF	; 255
    143a:	3f ef       	ldi	r19, 0xFF	; 255
    143c:	fc 01       	movw	r30, r24
    143e:	35 87       	std	Z+13, r19	; 0x0d
    1440:	24 87       	std	Z+12, r18	; 0x0c
    1442:	08 95       	ret

00001444 <_GLOBAL__sub_I__cdcInterface>:
    1444:	10 92 b2 03 	sts	0x03B2, r1
    1448:	10 92 b1 03 	sts	0x03B1, r1
    144c:	88 ee       	ldi	r24, 0xE8	; 232
    144e:	93 e0       	ldi	r25, 0x03	; 3
    1450:	a0 e0       	ldi	r26, 0x00	; 0
    1452:	b0 e0       	ldi	r27, 0x00	; 0
    1454:	80 93 b3 03 	sts	0x03B3, r24
    1458:	90 93 b4 03 	sts	0x03B4, r25
    145c:	a0 93 b5 03 	sts	0x03B5, r26
    1460:	b0 93 b6 03 	sts	0x03B6, r27
    1464:	8b ec       	ldi	r24, 0xCB	; 203
    1466:	92 e0       	ldi	r25, 0x02	; 2
    1468:	90 93 b0 03 	sts	0x03B0, r25
    146c:	80 93 af 03 	sts	0x03AF, r24
    1470:	8f ef       	ldi	r24, 0xFF	; 255
    1472:	9f ef       	ldi	r25, 0xFF	; 255
    1474:	90 93 bc 03 	sts	0x03BC, r25
    1478:	80 93 bb 03 	sts	0x03BB, r24
    147c:	08 95       	ret

0000147e <HardwareSerial::available()>:
    147e:	fc 01       	movw	r30, r24
    1480:	81 8d       	ldd	r24, Z+25	; 0x19
    1482:	22 8d       	ldd	r18, Z+26	; 0x1a
    1484:	90 e0       	ldi	r25, 0x00	; 0
    1486:	80 5c       	subi	r24, 0xC0	; 192
    1488:	9f 4f       	sbci	r25, 0xFF	; 255
    148a:	82 1b       	sub	r24, r18
    148c:	91 09       	sbc	r25, r1
    148e:	8f 73       	andi	r24, 0x3F	; 63
    1490:	99 27       	eor	r25, r25
    1492:	08 95       	ret

00001494 <HardwareSerial::peek()>:
    1494:	fc 01       	movw	r30, r24
    1496:	91 8d       	ldd	r25, Z+25	; 0x19
    1498:	82 8d       	ldd	r24, Z+26	; 0x1a
    149a:	98 17       	cp	r25, r24
    149c:	31 f0       	breq	.+12     	; 0x14aa <HardwareSerial::peek()+0x16>
    149e:	82 8d       	ldd	r24, Z+26	; 0x1a
    14a0:	e8 0f       	add	r30, r24
    14a2:	f1 1d       	adc	r31, r1
    14a4:	85 8d       	ldd	r24, Z+29	; 0x1d
    14a6:	90 e0       	ldi	r25, 0x00	; 0
    14a8:	08 95       	ret
    14aa:	8f ef       	ldi	r24, 0xFF	; 255
    14ac:	9f ef       	ldi	r25, 0xFF	; 255
    14ae:	08 95       	ret

000014b0 <HardwareSerial::read()>:
    14b0:	fc 01       	movw	r30, r24
    14b2:	91 8d       	ldd	r25, Z+25	; 0x19
    14b4:	82 8d       	ldd	r24, Z+26	; 0x1a
    14b6:	98 17       	cp	r25, r24
    14b8:	61 f0       	breq	.+24     	; 0x14d2 <HardwareSerial::read()+0x22>
    14ba:	82 8d       	ldd	r24, Z+26	; 0x1a
    14bc:	df 01       	movw	r26, r30
    14be:	a8 0f       	add	r26, r24
    14c0:	b1 1d       	adc	r27, r1
    14c2:	5d 96       	adiw	r26, 0x1d	; 29
    14c4:	8c 91       	ld	r24, X
    14c6:	92 8d       	ldd	r25, Z+26	; 0x1a
    14c8:	9f 5f       	subi	r25, 0xFF	; 255
    14ca:	9f 73       	andi	r25, 0x3F	; 63
    14cc:	92 8f       	std	Z+26, r25	; 0x1a
    14ce:	90 e0       	ldi	r25, 0x00	; 0
    14d0:	08 95       	ret
    14d2:	8f ef       	ldi	r24, 0xFF	; 255
    14d4:	9f ef       	ldi	r25, 0xFF	; 255
    14d6:	08 95       	ret

000014d8 <serialEventRun()>:
    14d8:	87 e2       	ldi	r24, 0x27	; 39
    14da:	9b e1       	ldi	r25, 0x1B	; 27
    14dc:	89 2b       	or	r24, r25
    14de:	49 f0       	breq	.+18     	; 0x14f2 <serialEventRun()+0x1a>
    14e0:	80 e0       	ldi	r24, 0x00	; 0
    14e2:	90 e0       	ldi	r25, 0x00	; 0
    14e4:	89 2b       	or	r24, r25
    14e6:	29 f0       	breq	.+10     	; 0x14f2 <serialEventRun()+0x1a>
    14e8:	0e 94 27 1b 	call	0x364e	; 0x364e <Serial1_available()>
    14ec:	81 11       	cpse	r24, r1
    14ee:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>
    14f2:	08 95       	ret

000014f4 <HardwareSerial::_tx_udr_empty_irq()>:
    14f4:	fc 01       	movw	r30, r24
    14f6:	84 8d       	ldd	r24, Z+28	; 0x1c
    14f8:	df 01       	movw	r26, r30
    14fa:	a8 0f       	add	r26, r24
    14fc:	b1 1d       	adc	r27, r1
    14fe:	a3 5a       	subi	r26, 0xA3	; 163
    1500:	bf 4f       	sbci	r27, 0xFF	; 255
    1502:	2c 91       	ld	r18, X
    1504:	84 8d       	ldd	r24, Z+28	; 0x1c
    1506:	90 e0       	ldi	r25, 0x00	; 0
    1508:	01 96       	adiw	r24, 0x01	; 1
    150a:	8f 73       	andi	r24, 0x3F	; 63
    150c:	99 27       	eor	r25, r25
    150e:	84 8f       	std	Z+28, r24	; 0x1c
    1510:	a6 89       	ldd	r26, Z+22	; 0x16
    1512:	b7 89       	ldd	r27, Z+23	; 0x17
    1514:	2c 93       	st	X, r18
    1516:	a0 89       	ldd	r26, Z+16	; 0x10
    1518:	b1 89       	ldd	r27, Z+17	; 0x11
    151a:	8c 91       	ld	r24, X
    151c:	80 64       	ori	r24, 0x40	; 64
    151e:	8c 93       	st	X, r24
    1520:	93 8d       	ldd	r25, Z+27	; 0x1b
    1522:	84 8d       	ldd	r24, Z+28	; 0x1c
    1524:	98 13       	cpse	r25, r24
    1526:	06 c0       	rjmp	.+12     	; 0x1534 <HardwareSerial::_tx_udr_empty_irq()+0x40>
    1528:	02 88       	ldd	r0, Z+18	; 0x12
    152a:	f3 89       	ldd	r31, Z+19	; 0x13
    152c:	e0 2d       	mov	r30, r0
    152e:	80 81       	ld	r24, Z
    1530:	8f 7d       	andi	r24, 0xDF	; 223
    1532:	80 83       	st	Z, r24
    1534:	08 95       	ret

00001536 <HardwareSerial::flush()>:
    1536:	cf 93       	push	r28
    1538:	df 93       	push	r29
    153a:	ec 01       	movw	r28, r24
    153c:	88 8d       	ldd	r24, Y+24	; 0x18
    153e:	88 23       	and	r24, r24
    1540:	c9 f0       	breq	.+50     	; 0x1574 <HardwareSerial::flush()+0x3e>
    1542:	ea 89       	ldd	r30, Y+18	; 0x12
    1544:	fb 89       	ldd	r31, Y+19	; 0x13
    1546:	80 81       	ld	r24, Z
    1548:	85 fd       	sbrc	r24, 5
    154a:	05 c0       	rjmp	.+10     	; 0x1556 <HardwareSerial::flush()+0x20>
    154c:	a8 89       	ldd	r26, Y+16	; 0x10
    154e:	b9 89       	ldd	r27, Y+17	; 0x11
    1550:	8c 91       	ld	r24, X
    1552:	86 fd       	sbrc	r24, 6
    1554:	0f c0       	rjmp	.+30     	; 0x1574 <HardwareSerial::flush()+0x3e>
    1556:	0f b6       	in	r0, 0x3f	; 63
    1558:	07 fc       	sbrc	r0, 7
    155a:	f5 cf       	rjmp	.-22     	; 0x1546 <HardwareSerial::flush()+0x10>
    155c:	80 81       	ld	r24, Z
    155e:	85 ff       	sbrs	r24, 5
    1560:	f2 cf       	rjmp	.-28     	; 0x1546 <HardwareSerial::flush()+0x10>
    1562:	a8 89       	ldd	r26, Y+16	; 0x10
    1564:	b9 89       	ldd	r27, Y+17	; 0x11
    1566:	8c 91       	ld	r24, X
    1568:	85 ff       	sbrs	r24, 5
    156a:	ed cf       	rjmp	.-38     	; 0x1546 <HardwareSerial::flush()+0x10>
    156c:	ce 01       	movw	r24, r28
    156e:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <HardwareSerial::_tx_udr_empty_irq()>
    1572:	e7 cf       	rjmp	.-50     	; 0x1542 <HardwareSerial::flush()+0xc>
    1574:	df 91       	pop	r29
    1576:	cf 91       	pop	r28
    1578:	08 95       	ret

0000157a <HardwareSerial::write(unsigned char)>:
    157a:	cf 92       	push	r12
    157c:	df 92       	push	r13
    157e:	ff 92       	push	r15
    1580:	0f 93       	push	r16
    1582:	1f 93       	push	r17
    1584:	cf 93       	push	r28
    1586:	df 93       	push	r29
    1588:	1f 92       	push	r1
    158a:	cd b7       	in	r28, 0x3d	; 61
    158c:	de b7       	in	r29, 0x3e	; 62
    158e:	6c 01       	movw	r12, r24
    1590:	81 e0       	ldi	r24, 0x01	; 1
    1592:	d6 01       	movw	r26, r12
    1594:	58 96       	adiw	r26, 0x18	; 24
    1596:	8c 93       	st	X, r24
    1598:	58 97       	sbiw	r26, 0x18	; 24
    159a:	5b 96       	adiw	r26, 0x1b	; 27
    159c:	9c 91       	ld	r25, X
    159e:	5b 97       	sbiw	r26, 0x1b	; 27
    15a0:	5c 96       	adiw	r26, 0x1c	; 28
    15a2:	8c 91       	ld	r24, X
    15a4:	5c 97       	sbiw	r26, 0x1c	; 28
    15a6:	98 13       	cpse	r25, r24
    15a8:	07 c0       	rjmp	.+14     	; 0x15b8 <HardwareSerial::write(unsigned char)+0x3e>
    15aa:	50 96       	adiw	r26, 0x10	; 16
    15ac:	ed 91       	ld	r30, X+
    15ae:	fc 91       	ld	r31, X
    15b0:	51 97       	sbiw	r26, 0x11	; 17
    15b2:	80 81       	ld	r24, Z
    15b4:	85 fd       	sbrc	r24, 5
    15b6:	2e c0       	rjmp	.+92     	; 0x1614 <HardwareSerial::write(unsigned char)+0x9a>
    15b8:	f6 01       	movw	r30, r12
    15ba:	03 8d       	ldd	r16, Z+27	; 0x1b
    15bc:	10 e0       	ldi	r17, 0x00	; 0
    15be:	0f 5f       	subi	r16, 0xFF	; 255
    15c0:	1f 4f       	sbci	r17, 0xFF	; 255
    15c2:	0f 73       	andi	r16, 0x3F	; 63
    15c4:	11 27       	eor	r17, r17
    15c6:	f0 2e       	mov	r15, r16
    15c8:	f6 01       	movw	r30, r12
    15ca:	84 8d       	ldd	r24, Z+28	; 0x1c
    15cc:	f8 12       	cpse	r15, r24
    15ce:	11 c0       	rjmp	.+34     	; 0x15f2 <HardwareSerial::write(unsigned char)+0x78>
    15d0:	0f b6       	in	r0, 0x3f	; 63
    15d2:	07 fc       	sbrc	r0, 7
    15d4:	f9 cf       	rjmp	.-14     	; 0x15c8 <HardwareSerial::write(unsigned char)+0x4e>
    15d6:	d6 01       	movw	r26, r12
    15d8:	50 96       	adiw	r26, 0x10	; 16
    15da:	ed 91       	ld	r30, X+
    15dc:	fc 91       	ld	r31, X
    15de:	51 97       	sbiw	r26, 0x11	; 17
    15e0:	80 81       	ld	r24, Z
    15e2:	85 ff       	sbrs	r24, 5
    15e4:	f1 cf       	rjmp	.-30     	; 0x15c8 <HardwareSerial::write(unsigned char)+0x4e>
    15e6:	c6 01       	movw	r24, r12
    15e8:	69 83       	std	Y+1, r22	; 0x01
    15ea:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <HardwareSerial::_tx_udr_empty_irq()>
    15ee:	69 81       	ldd	r22, Y+1	; 0x01
    15f0:	eb cf       	rjmp	.-42     	; 0x15c8 <HardwareSerial::write(unsigned char)+0x4e>
    15f2:	83 8d       	ldd	r24, Z+27	; 0x1b
    15f4:	e8 0f       	add	r30, r24
    15f6:	f1 1d       	adc	r31, r1
    15f8:	e3 5a       	subi	r30, 0xA3	; 163
    15fa:	ff 4f       	sbci	r31, 0xFF	; 255
    15fc:	60 83       	st	Z, r22
    15fe:	d6 01       	movw	r26, r12
    1600:	5b 96       	adiw	r26, 0x1b	; 27
    1602:	0c 93       	st	X, r16
    1604:	5b 97       	sbiw	r26, 0x1b	; 27
    1606:	52 96       	adiw	r26, 0x12	; 18
    1608:	ed 91       	ld	r30, X+
    160a:	fc 91       	ld	r31, X
    160c:	53 97       	sbiw	r26, 0x13	; 19
    160e:	80 81       	ld	r24, Z
    1610:	80 62       	ori	r24, 0x20	; 32
    1612:	0c c0       	rjmp	.+24     	; 0x162c <HardwareSerial::write(unsigned char)+0xb2>
    1614:	d6 01       	movw	r26, r12
    1616:	56 96       	adiw	r26, 0x16	; 22
    1618:	ed 91       	ld	r30, X+
    161a:	fc 91       	ld	r31, X
    161c:	57 97       	sbiw	r26, 0x17	; 23
    161e:	60 83       	st	Z, r22
    1620:	50 96       	adiw	r26, 0x10	; 16
    1622:	ed 91       	ld	r30, X+
    1624:	fc 91       	ld	r31, X
    1626:	51 97       	sbiw	r26, 0x11	; 17
    1628:	80 81       	ld	r24, Z
    162a:	80 64       	ori	r24, 0x40	; 64
    162c:	80 83       	st	Z, r24
    162e:	81 e0       	ldi	r24, 0x01	; 1
    1630:	90 e0       	ldi	r25, 0x00	; 0
    1632:	0f 90       	pop	r0
    1634:	df 91       	pop	r29
    1636:	cf 91       	pop	r28
    1638:	1f 91       	pop	r17
    163a:	0f 91       	pop	r16
    163c:	ff 90       	pop	r15
    163e:	df 90       	pop	r13
    1640:	cf 90       	pop	r12
    1642:	08 95       	ret

00001644 <HardwareSerial::begin(unsigned long, unsigned char)>:
    1644:	bf 92       	push	r11
    1646:	cf 92       	push	r12
    1648:	df 92       	push	r13
    164a:	ef 92       	push	r14
    164c:	ff 92       	push	r15
    164e:	cf 93       	push	r28
    1650:	df 93       	push	r29
    1652:	ec 01       	movw	r28, r24
    1654:	6a 01       	movw	r12, r20
    1656:	7b 01       	movw	r14, r22
    1658:	b2 2e       	mov	r11, r18
    165a:	e8 89       	ldd	r30, Y+16	; 0x10
    165c:	f9 89       	ldd	r31, Y+17	; 0x11
    165e:	82 e0       	ldi	r24, 0x02	; 2
    1660:	80 83       	st	Z, r24
    1662:	41 15       	cp	r20, r1
    1664:	81 ee       	ldi	r24, 0xE1	; 225
    1666:	58 07       	cpc	r21, r24
    1668:	61 05       	cpc	r22, r1
    166a:	71 05       	cpc	r23, r1
    166c:	a1 f0       	breq	.+40     	; 0x1696 <HardwareSerial::begin(unsigned long, unsigned char)+0x52>
    166e:	60 e0       	ldi	r22, 0x00	; 0
    1670:	79 e0       	ldi	r23, 0x09	; 9
    1672:	8d e3       	ldi	r24, 0x3D	; 61
    1674:	90 e0       	ldi	r25, 0x00	; 0
    1676:	a7 01       	movw	r20, r14
    1678:	96 01       	movw	r18, r12
    167a:	0e 94 32 20 	call	0x4064	; 0x4064 <__udivmodsi4>
    167e:	21 50       	subi	r18, 0x01	; 1
    1680:	31 09       	sbc	r19, r1
    1682:	41 09       	sbc	r20, r1
    1684:	51 09       	sbc	r21, r1
    1686:	56 95       	lsr	r21
    1688:	47 95       	ror	r20
    168a:	37 95       	ror	r19
    168c:	27 95       	ror	r18
    168e:	21 15       	cp	r18, r1
    1690:	80 e1       	ldi	r24, 0x10	; 16
    1692:	38 07       	cpc	r19, r24
    1694:	98 f0       	brcs	.+38     	; 0x16bc <HardwareSerial::begin(unsigned long, unsigned char)+0x78>
    1696:	e8 89       	ldd	r30, Y+16	; 0x10
    1698:	f9 89       	ldd	r31, Y+17	; 0x11
    169a:	10 82       	st	Z, r1
    169c:	60 e8       	ldi	r22, 0x80	; 128
    169e:	74 e8       	ldi	r23, 0x84	; 132
    16a0:	8e e1       	ldi	r24, 0x1E	; 30
    16a2:	90 e0       	ldi	r25, 0x00	; 0
    16a4:	a7 01       	movw	r20, r14
    16a6:	96 01       	movw	r18, r12
    16a8:	0e 94 32 20 	call	0x4064	; 0x4064 <__udivmodsi4>
    16ac:	21 50       	subi	r18, 0x01	; 1
    16ae:	31 09       	sbc	r19, r1
    16b0:	41 09       	sbc	r20, r1
    16b2:	51 09       	sbc	r21, r1
    16b4:	56 95       	lsr	r21
    16b6:	47 95       	ror	r20
    16b8:	37 95       	ror	r19
    16ba:	27 95       	ror	r18
    16bc:	ec 85       	ldd	r30, Y+12	; 0x0c
    16be:	fd 85       	ldd	r31, Y+13	; 0x0d
    16c0:	30 83       	st	Z, r19
    16c2:	ee 85       	ldd	r30, Y+14	; 0x0e
    16c4:	ff 85       	ldd	r31, Y+15	; 0x0f
    16c6:	20 83       	st	Z, r18
    16c8:	18 8e       	std	Y+24, r1	; 0x18
    16ca:	ec 89       	ldd	r30, Y+20	; 0x14
    16cc:	fd 89       	ldd	r31, Y+21	; 0x15
    16ce:	b0 82       	st	Z, r11
    16d0:	ea 89       	ldd	r30, Y+18	; 0x12
    16d2:	fb 89       	ldd	r31, Y+19	; 0x13
    16d4:	80 81       	ld	r24, Z
    16d6:	80 61       	ori	r24, 0x10	; 16
    16d8:	80 83       	st	Z, r24
    16da:	ea 89       	ldd	r30, Y+18	; 0x12
    16dc:	fb 89       	ldd	r31, Y+19	; 0x13
    16de:	80 81       	ld	r24, Z
    16e0:	88 60       	ori	r24, 0x08	; 8
    16e2:	80 83       	st	Z, r24
    16e4:	ea 89       	ldd	r30, Y+18	; 0x12
    16e6:	fb 89       	ldd	r31, Y+19	; 0x13
    16e8:	80 81       	ld	r24, Z
    16ea:	80 68       	ori	r24, 0x80	; 128
    16ec:	80 83       	st	Z, r24
    16ee:	ea 89       	ldd	r30, Y+18	; 0x12
    16f0:	fb 89       	ldd	r31, Y+19	; 0x13
    16f2:	80 81       	ld	r24, Z
    16f4:	8f 7d       	andi	r24, 0xDF	; 223
    16f6:	80 83       	st	Z, r24
    16f8:	df 91       	pop	r29
    16fa:	cf 91       	pop	r28
    16fc:	ff 90       	pop	r15
    16fe:	ef 90       	pop	r14
    1700:	df 90       	pop	r13
    1702:	cf 90       	pop	r12
    1704:	bf 90       	pop	r11
    1706:	08 95       	ret

00001708 <Print::write(unsigned char const*, unsigned int)>:
    1708:	cf 92       	push	r12
    170a:	df 92       	push	r13
    170c:	ef 92       	push	r14
    170e:	ff 92       	push	r15
    1710:	0f 93       	push	r16
    1712:	1f 93       	push	r17
    1714:	cf 93       	push	r28
    1716:	df 93       	push	r29
    1718:	6c 01       	movw	r12, r24
    171a:	7a 01       	movw	r14, r20
    171c:	eb 01       	movw	r28, r22
    171e:	e6 0e       	add	r14, r22
    1720:	f7 1e       	adc	r15, r23
    1722:	00 e0       	ldi	r16, 0x00	; 0
    1724:	10 e0       	ldi	r17, 0x00	; 0
    1726:	ce 15       	cp	r28, r14
    1728:	df 05       	cpc	r29, r15
    172a:	61 f0       	breq	.+24     	; 0x1744 <Print::write(unsigned char const*, unsigned int)+0x3c>
    172c:	69 91       	ld	r22, Y+
    172e:	d6 01       	movw	r26, r12
    1730:	ed 91       	ld	r30, X+
    1732:	fc 91       	ld	r31, X
    1734:	01 90       	ld	r0, Z+
    1736:	f0 81       	ld	r31, Z
    1738:	e0 2d       	mov	r30, r0
    173a:	c6 01       	movw	r24, r12
    173c:	09 95       	icall
    173e:	08 0f       	add	r16, r24
    1740:	19 1f       	adc	r17, r25
    1742:	f1 cf       	rjmp	.-30     	; 0x1726 <Print::write(unsigned char const*, unsigned int)+0x1e>
    1744:	c8 01       	movw	r24, r16
    1746:	df 91       	pop	r29
    1748:	cf 91       	pop	r28
    174a:	1f 91       	pop	r17
    174c:	0f 91       	pop	r16
    174e:	ff 90       	pop	r15
    1750:	ef 90       	pop	r14
    1752:	df 90       	pop	r13
    1754:	cf 90       	pop	r12
    1756:	08 95       	ret

00001758 <Print::write(char const*)>:
    1758:	61 15       	cp	r22, r1
    175a:	71 05       	cpc	r23, r1
    175c:	81 f0       	breq	.+32     	; 0x177e <Print::write(char const*)+0x26>
    175e:	db 01       	movw	r26, r22
    1760:	0d 90       	ld	r0, X+
    1762:	00 20       	and	r0, r0
    1764:	e9 f7       	brne	.-6      	; 0x1760 <Print::write(char const*)+0x8>
    1766:	ad 01       	movw	r20, r26
    1768:	41 50       	subi	r20, 0x01	; 1
    176a:	51 09       	sbc	r21, r1
    176c:	46 1b       	sub	r20, r22
    176e:	57 0b       	sbc	r21, r23
    1770:	dc 01       	movw	r26, r24
    1772:	ed 91       	ld	r30, X+
    1774:	fc 91       	ld	r31, X
    1776:	02 80       	ldd	r0, Z+2	; 0x02
    1778:	f3 81       	ldd	r31, Z+3	; 0x03
    177a:	e0 2d       	mov	r30, r0
    177c:	09 94       	ijmp
    177e:	80 e0       	ldi	r24, 0x00	; 0
    1780:	90 e0       	ldi	r25, 0x00	; 0
    1782:	08 95       	ret

00001784 <Print::print(__FlashStringHelper const*)>:
    1784:	ef 92       	push	r14
    1786:	ff 92       	push	r15
    1788:	0f 93       	push	r16
    178a:	1f 93       	push	r17
    178c:	cf 93       	push	r28
    178e:	df 93       	push	r29
    1790:	8c 01       	movw	r16, r24
    1792:	fb 01       	movw	r30, r22
    1794:	c0 e0       	ldi	r28, 0x00	; 0
    1796:	d0 e0       	ldi	r29, 0x00	; 0
    1798:	64 91       	lpm	r22, Z
    179a:	7f 01       	movw	r14, r30
    179c:	8f ef       	ldi	r24, 0xFF	; 255
    179e:	e8 1a       	sub	r14, r24
    17a0:	f8 0a       	sbc	r15, r24
    17a2:	66 23       	and	r22, r22
    17a4:	61 f0       	breq	.+24     	; 0x17be <Print::print(__FlashStringHelper const*)+0x3a>
    17a6:	d8 01       	movw	r26, r16
    17a8:	ed 91       	ld	r30, X+
    17aa:	fc 91       	ld	r31, X
    17ac:	01 90       	ld	r0, Z+
    17ae:	f0 81       	ld	r31, Z
    17b0:	e0 2d       	mov	r30, r0
    17b2:	c8 01       	movw	r24, r16
    17b4:	09 95       	icall
    17b6:	c8 0f       	add	r28, r24
    17b8:	d9 1f       	adc	r29, r25
    17ba:	f7 01       	movw	r30, r14
    17bc:	ed cf       	rjmp	.-38     	; 0x1798 <Print::print(__FlashStringHelper const*)+0x14>
    17be:	ce 01       	movw	r24, r28
    17c0:	df 91       	pop	r29
    17c2:	cf 91       	pop	r28
    17c4:	1f 91       	pop	r17
    17c6:	0f 91       	pop	r16
    17c8:	ff 90       	pop	r15
    17ca:	ef 90       	pop	r14
    17cc:	08 95       	ret

000017ce <Print::print(char const*)>:
    17ce:	0c 94 ac 0b 	jmp	0x1758	; 0x1758 <Print::write(char const*)>

000017d2 <Print::print(char)>:
    17d2:	dc 01       	movw	r26, r24
    17d4:	ed 91       	ld	r30, X+
    17d6:	fc 91       	ld	r31, X
    17d8:	01 90       	ld	r0, Z+
    17da:	f0 81       	ld	r31, Z
    17dc:	e0 2d       	mov	r30, r0
    17de:	09 94       	ijmp

000017e0 <Print::println()>:
    17e0:	67 ee       	ldi	r22, 0xE7	; 231
    17e2:	72 e0       	ldi	r23, 0x02	; 2
    17e4:	0c 94 ac 0b 	jmp	0x1758	; 0x1758 <Print::write(char const*)>

000017e8 <Print::println(__FlashStringHelper const*)>:
    17e8:	0f 93       	push	r16
    17ea:	1f 93       	push	r17
    17ec:	cf 93       	push	r28
    17ee:	df 93       	push	r29
    17f0:	ec 01       	movw	r28, r24
    17f2:	0e 94 c2 0b 	call	0x1784	; 0x1784 <Print::print(__FlashStringHelper const*)>
    17f6:	8c 01       	movw	r16, r24
    17f8:	ce 01       	movw	r24, r28
    17fa:	0e 94 f0 0b 	call	0x17e0	; 0x17e0 <Print::println()>
    17fe:	80 0f       	add	r24, r16
    1800:	91 1f       	adc	r25, r17
    1802:	df 91       	pop	r29
    1804:	cf 91       	pop	r28
    1806:	1f 91       	pop	r17
    1808:	0f 91       	pop	r16
    180a:	08 95       	ret

0000180c <Print::println(char const*)>:
    180c:	0f 93       	push	r16
    180e:	1f 93       	push	r17
    1810:	cf 93       	push	r28
    1812:	df 93       	push	r29
    1814:	ec 01       	movw	r28, r24
    1816:	0e 94 ac 0b 	call	0x1758	; 0x1758 <Print::write(char const*)>
    181a:	8c 01       	movw	r16, r24
    181c:	ce 01       	movw	r24, r28
    181e:	0e 94 f0 0b 	call	0x17e0	; 0x17e0 <Print::println()>
    1822:	80 0f       	add	r24, r16
    1824:	91 1f       	adc	r25, r17
    1826:	df 91       	pop	r29
    1828:	cf 91       	pop	r28
    182a:	1f 91       	pop	r17
    182c:	0f 91       	pop	r16
    182e:	08 95       	ret

00001830 <Print::println(char)>:
    1830:	0f 93       	push	r16
    1832:	1f 93       	push	r17
    1834:	cf 93       	push	r28
    1836:	df 93       	push	r29
    1838:	ec 01       	movw	r28, r24
    183a:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <Print::print(char)>
    183e:	8c 01       	movw	r16, r24
    1840:	ce 01       	movw	r24, r28
    1842:	0e 94 f0 0b 	call	0x17e0	; 0x17e0 <Print::println()>
    1846:	80 0f       	add	r24, r16
    1848:	91 1f       	adc	r25, r17
    184a:	df 91       	pop	r29
    184c:	cf 91       	pop	r28
    184e:	1f 91       	pop	r17
    1850:	0f 91       	pop	r16
    1852:	08 95       	ret

00001854 <Print::printNumber(unsigned long, unsigned char)>:
    1854:	8f 92       	push	r8
    1856:	9f 92       	push	r9
    1858:	af 92       	push	r10
    185a:	bf 92       	push	r11
    185c:	cf 92       	push	r12
    185e:	df 92       	push	r13
    1860:	ef 92       	push	r14
    1862:	ff 92       	push	r15
    1864:	0f 93       	push	r16
    1866:	1f 93       	push	r17
    1868:	cf 93       	push	r28
    186a:	df 93       	push	r29
    186c:	cd b7       	in	r28, 0x3d	; 61
    186e:	de b7       	in	r29, 0x3e	; 62
    1870:	a1 97       	sbiw	r28, 0x21	; 33
    1872:	0f b6       	in	r0, 0x3f	; 63
    1874:	f8 94       	cli
    1876:	de bf       	out	0x3e, r29	; 62
    1878:	0f be       	out	0x3f, r0	; 63
    187a:	cd bf       	out	0x3d, r28	; 61
    187c:	7c 01       	movw	r14, r24
    187e:	c4 2e       	mov	r12, r20
    1880:	e5 2f       	mov	r30, r21
    1882:	cb 01       	movw	r24, r22
    1884:	d2 2e       	mov	r13, r18
    1886:	19 a2       	std	Y+33, r1	; 0x21
    1888:	21 e0       	ldi	r18, 0x01	; 1
    188a:	2d 15       	cp	r18, r13
    188c:	10 f0       	brcs	.+4      	; 0x1892 <Print::printNumber(unsigned long, unsigned char)+0x3e>
    188e:	2a e0       	ldi	r18, 0x0A	; 10
    1890:	d2 2e       	mov	r13, r18
    1892:	8e 01       	movw	r16, r28
    1894:	0f 5d       	subi	r16, 0xDF	; 223
    1896:	1f 4f       	sbci	r17, 0xFF	; 255
    1898:	8d 2c       	mov	r8, r13
    189a:	91 2c       	mov	r9, r1
    189c:	a1 2c       	mov	r10, r1
    189e:	b1 2c       	mov	r11, r1
    18a0:	6c 2d       	mov	r22, r12
    18a2:	7e 2f       	mov	r23, r30
    18a4:	a5 01       	movw	r20, r10
    18a6:	94 01       	movw	r18, r8
    18a8:	0e 94 32 20 	call	0x4064	; 0x4064 <__udivmodsi4>
    18ac:	8c 2d       	mov	r24, r12
    18ae:	d2 9e       	mul	r13, r18
    18b0:	80 19       	sub	r24, r0
    18b2:	11 24       	eor	r1, r1
    18b4:	01 50       	subi	r16, 0x01	; 1
    18b6:	11 09       	sbc	r17, r1
    18b8:	8a 30       	cpi	r24, 0x0A	; 10
    18ba:	14 f4       	brge	.+4      	; 0x18c0 <Print::printNumber(unsigned long, unsigned char)+0x6c>
    18bc:	80 5d       	subi	r24, 0xD0	; 208
    18be:	01 c0       	rjmp	.+2      	; 0x18c2 <Print::printNumber(unsigned long, unsigned char)+0x6e>
    18c0:	89 5c       	subi	r24, 0xC9	; 201
    18c2:	f8 01       	movw	r30, r16
    18c4:	80 83       	st	Z, r24
    18c6:	21 15       	cp	r18, r1
    18c8:	31 05       	cpc	r19, r1
    18ca:	41 05       	cpc	r20, r1
    18cc:	51 05       	cpc	r21, r1
    18ce:	21 f0       	breq	.+8      	; 0x18d8 <Print::printNumber(unsigned long, unsigned char)+0x84>
    18d0:	c2 2e       	mov	r12, r18
    18d2:	e3 2f       	mov	r30, r19
    18d4:	ca 01       	movw	r24, r20
    18d6:	e4 cf       	rjmp	.-56     	; 0x18a0 <Print::printNumber(unsigned long, unsigned char)+0x4c>
    18d8:	b8 01       	movw	r22, r16
    18da:	c7 01       	movw	r24, r14
    18dc:	0e 94 ac 0b 	call	0x1758	; 0x1758 <Print::write(char const*)>
    18e0:	a1 96       	adiw	r28, 0x21	; 33
    18e2:	0f b6       	in	r0, 0x3f	; 63
    18e4:	f8 94       	cli
    18e6:	de bf       	out	0x3e, r29	; 62
    18e8:	0f be       	out	0x3f, r0	; 63
    18ea:	cd bf       	out	0x3d, r28	; 61
    18ec:	df 91       	pop	r29
    18ee:	cf 91       	pop	r28
    18f0:	1f 91       	pop	r17
    18f2:	0f 91       	pop	r16
    18f4:	ff 90       	pop	r15
    18f6:	ef 90       	pop	r14
    18f8:	df 90       	pop	r13
    18fa:	cf 90       	pop	r12
    18fc:	bf 90       	pop	r11
    18fe:	af 90       	pop	r10
    1900:	9f 90       	pop	r9
    1902:	8f 90       	pop	r8
    1904:	08 95       	ret

00001906 <Print::print(long, int)>:
    1906:	cf 92       	push	r12
    1908:	df 92       	push	r13
    190a:	ef 92       	push	r14
    190c:	ff 92       	push	r15
    190e:	0f 93       	push	r16
    1910:	1f 93       	push	r17
    1912:	cf 93       	push	r28
    1914:	df 93       	push	r29
    1916:	ec 01       	movw	r28, r24
    1918:	6a 01       	movw	r12, r20
    191a:	7b 01       	movw	r14, r22
    191c:	21 15       	cp	r18, r1
    191e:	31 05       	cpc	r19, r1
    1920:	79 f4       	brne	.+30     	; 0x1940 <Print::print(long, int)+0x3a>
    1922:	e8 81       	ld	r30, Y
    1924:	f9 81       	ldd	r31, Y+1	; 0x01
    1926:	01 90       	ld	r0, Z+
    1928:	f0 81       	ld	r31, Z
    192a:	e0 2d       	mov	r30, r0
    192c:	64 2f       	mov	r22, r20
    192e:	df 91       	pop	r29
    1930:	cf 91       	pop	r28
    1932:	1f 91       	pop	r17
    1934:	0f 91       	pop	r16
    1936:	ff 90       	pop	r15
    1938:	ef 90       	pop	r14
    193a:	df 90       	pop	r13
    193c:	cf 90       	pop	r12
    193e:	09 94       	ijmp
    1940:	2a 30       	cpi	r18, 0x0A	; 10
    1942:	31 05       	cpc	r19, r1
    1944:	e9 f4       	brne	.+58     	; 0x1980 <Print::print(long, int)+0x7a>
    1946:	77 ff       	sbrs	r23, 7
    1948:	1a c0       	rjmp	.+52     	; 0x197e <Print::print(long, int)+0x78>
    194a:	6d e2       	ldi	r22, 0x2D	; 45
    194c:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <Print::print(char)>
    1950:	8c 01       	movw	r16, r24
    1952:	44 27       	eor	r20, r20
    1954:	55 27       	eor	r21, r21
    1956:	ba 01       	movw	r22, r20
    1958:	4c 19       	sub	r20, r12
    195a:	5d 09       	sbc	r21, r13
    195c:	6e 09       	sbc	r22, r14
    195e:	7f 09       	sbc	r23, r15
    1960:	2a e0       	ldi	r18, 0x0A	; 10
    1962:	ce 01       	movw	r24, r28
    1964:	0e 94 2a 0c 	call	0x1854	; 0x1854 <Print::printNumber(unsigned long, unsigned char)>
    1968:	80 0f       	add	r24, r16
    196a:	91 1f       	adc	r25, r17
    196c:	df 91       	pop	r29
    196e:	cf 91       	pop	r28
    1970:	1f 91       	pop	r17
    1972:	0f 91       	pop	r16
    1974:	ff 90       	pop	r15
    1976:	ef 90       	pop	r14
    1978:	df 90       	pop	r13
    197a:	cf 90       	pop	r12
    197c:	08 95       	ret
    197e:	2a e0       	ldi	r18, 0x0A	; 10
    1980:	b7 01       	movw	r22, r14
    1982:	a6 01       	movw	r20, r12
    1984:	ce 01       	movw	r24, r28
    1986:	df 91       	pop	r29
    1988:	cf 91       	pop	r28
    198a:	1f 91       	pop	r17
    198c:	0f 91       	pop	r16
    198e:	ff 90       	pop	r15
    1990:	ef 90       	pop	r14
    1992:	df 90       	pop	r13
    1994:	cf 90       	pop	r12
    1996:	0c 94 2a 0c 	jmp	0x1854	; 0x1854 <Print::printNumber(unsigned long, unsigned char)>

0000199a <Print::print(int, int)>:
    199a:	9a 01       	movw	r18, r20
    199c:	ab 01       	movw	r20, r22
    199e:	66 27       	eor	r22, r22
    19a0:	57 fd       	sbrc	r21, 7
    19a2:	60 95       	com	r22
    19a4:	76 2f       	mov	r23, r22
    19a6:	0c 94 83 0c 	jmp	0x1906	; 0x1906 <Print::print(long, int)>

000019aa <Print::println(int, int)>:
    19aa:	0f 93       	push	r16
    19ac:	1f 93       	push	r17
    19ae:	cf 93       	push	r28
    19b0:	df 93       	push	r29
    19b2:	ec 01       	movw	r28, r24
    19b4:	9a 01       	movw	r18, r20
    19b6:	ab 01       	movw	r20, r22
    19b8:	66 27       	eor	r22, r22
    19ba:	57 fd       	sbrc	r21, 7
    19bc:	60 95       	com	r22
    19be:	76 2f       	mov	r23, r22
    19c0:	0e 94 83 0c 	call	0x1906	; 0x1906 <Print::print(long, int)>
    19c4:	8c 01       	movw	r16, r24
    19c6:	ce 01       	movw	r24, r28
    19c8:	0e 94 f0 0b 	call	0x17e0	; 0x17e0 <Print::println()>
    19cc:	80 0f       	add	r24, r16
    19ce:	91 1f       	adc	r25, r17
    19d0:	df 91       	pop	r29
    19d2:	cf 91       	pop	r28
    19d4:	1f 91       	pop	r17
    19d6:	0f 91       	pop	r16
    19d8:	08 95       	ret

000019da <Print::print(unsigned long, int)>:
    19da:	21 15       	cp	r18, r1
    19dc:	31 05       	cpc	r19, r1
    19de:	41 f4       	brne	.+16     	; 0x19f0 <Print::print(unsigned long, int)+0x16>
    19e0:	dc 01       	movw	r26, r24
    19e2:	ed 91       	ld	r30, X+
    19e4:	fc 91       	ld	r31, X
    19e6:	01 90       	ld	r0, Z+
    19e8:	f0 81       	ld	r31, Z
    19ea:	e0 2d       	mov	r30, r0
    19ec:	64 2f       	mov	r22, r20
    19ee:	09 94       	ijmp
    19f0:	0c 94 2a 0c 	jmp	0x1854	; 0x1854 <Print::printNumber(unsigned long, unsigned char)>

000019f4 <Print::print(unsigned char, int)>:
    19f4:	9a 01       	movw	r18, r20
    19f6:	46 2f       	mov	r20, r22
    19f8:	50 e0       	ldi	r21, 0x00	; 0
    19fa:	60 e0       	ldi	r22, 0x00	; 0
    19fc:	70 e0       	ldi	r23, 0x00	; 0
    19fe:	0c 94 ed 0c 	jmp	0x19da	; 0x19da <Print::print(unsigned long, int)>

00001a02 <Print::println(unsigned int, int)>:
    1a02:	0f 93       	push	r16
    1a04:	1f 93       	push	r17
    1a06:	cf 93       	push	r28
    1a08:	df 93       	push	r29
    1a0a:	ec 01       	movw	r28, r24
    1a0c:	9a 01       	movw	r18, r20
    1a0e:	ab 01       	movw	r20, r22
    1a10:	60 e0       	ldi	r22, 0x00	; 0
    1a12:	70 e0       	ldi	r23, 0x00	; 0
    1a14:	0e 94 ed 0c 	call	0x19da	; 0x19da <Print::print(unsigned long, int)>
    1a18:	8c 01       	movw	r16, r24
    1a1a:	ce 01       	movw	r24, r28
    1a1c:	0e 94 f0 0b 	call	0x17e0	; 0x17e0 <Print::println()>
    1a20:	80 0f       	add	r24, r16
    1a22:	91 1f       	adc	r25, r17
    1a24:	df 91       	pop	r29
    1a26:	cf 91       	pop	r28
    1a28:	1f 91       	pop	r17
    1a2a:	0f 91       	pop	r16
    1a2c:	08 95       	ret

00001a2e <SendControl(unsigned char)>:
    1a2e:	40 91 03 04 	lds	r20, 0x0403
    1a32:	50 91 04 04 	lds	r21, 0x0404
    1a36:	20 91 01 04 	lds	r18, 0x0401
    1a3a:	30 91 02 04 	lds	r19, 0x0402
    1a3e:	42 17       	cp	r20, r18
    1a40:	53 07       	cpc	r21, r19
    1a42:	b4 f4       	brge	.+44     	; 0x1a70 <SendControl(unsigned char)+0x42>
    1a44:	90 91 e8 00 	lds	r25, 0x00E8
    1a48:	95 70       	andi	r25, 0x05	; 5
    1a4a:	e1 f3       	breq	.-8      	; 0x1a44 <SendControl(unsigned char)+0x16>
    1a4c:	90 91 e8 00 	lds	r25, 0x00E8
    1a50:	92 fd       	sbrc	r25, 2
    1a52:	19 c0       	rjmp	.+50     	; 0x1a86 <SendControl(unsigned char)+0x58>
    1a54:	80 93 f1 00 	sts	0x00F1, r24
    1a58:	80 91 03 04 	lds	r24, 0x0403
    1a5c:	90 91 04 04 	lds	r25, 0x0404
    1a60:	01 96       	adiw	r24, 0x01	; 1
    1a62:	8f 73       	andi	r24, 0x3F	; 63
    1a64:	99 27       	eor	r25, r25
    1a66:	89 2b       	or	r24, r25
    1a68:	19 f4       	brne	.+6      	; 0x1a70 <SendControl(unsigned char)+0x42>
    1a6a:	8e ef       	ldi	r24, 0xFE	; 254
    1a6c:	80 93 e8 00 	sts	0x00E8, r24
    1a70:	80 91 03 04 	lds	r24, 0x0403
    1a74:	90 91 04 04 	lds	r25, 0x0404
    1a78:	01 96       	adiw	r24, 0x01	; 1
    1a7a:	90 93 04 04 	sts	0x0404, r25
    1a7e:	80 93 03 04 	sts	0x0403, r24
    1a82:	81 e0       	ldi	r24, 0x01	; 1
    1a84:	08 95       	ret
    1a86:	80 e0       	ldi	r24, 0x00	; 0
    1a88:	08 95       	ret

00001a8a <USB_SendStringDescriptor(unsigned char const*, unsigned char)>:
    1a8a:	cf 92       	push	r12
    1a8c:	df 92       	push	r13
    1a8e:	ff 92       	push	r15
    1a90:	0f 93       	push	r16
    1a92:	1f 93       	push	r17
    1a94:	cf 93       	push	r28
    1a96:	df 93       	push	r29
    1a98:	1f 92       	push	r1
    1a9a:	cd b7       	in	r28, 0x3d	; 61
    1a9c:	de b7       	in	r29, 0x3e	; 62
    1a9e:	08 2f       	mov	r16, r24
    1aa0:	16 2f       	mov	r17, r22
    1aa2:	86 2f       	mov	r24, r22
    1aa4:	88 0f       	add	r24, r24
    1aa6:	8e 5f       	subi	r24, 0xFE	; 254
    1aa8:	99 83       	std	Y+1, r25	; 0x01
    1aaa:	0e 94 17 0d 	call	0x1a2e	; 0x1a2e <SendControl(unsigned char)>
    1aae:	83 e0       	ldi	r24, 0x03	; 3
    1ab0:	0e 94 17 0d 	call	0x1a2e	; 0x1a2e <SendControl(unsigned char)>
    1ab4:	f0 2e       	mov	r15, r16
    1ab6:	c0 2e       	mov	r12, r16
    1ab8:	99 81       	ldd	r25, Y+1	; 0x01
    1aba:	d9 2e       	mov	r13, r25
    1abc:	8c 2d       	mov	r24, r12
    1abe:	8f 19       	sub	r24, r15
    1ac0:	81 17       	cp	r24, r17
    1ac2:	78 f4       	brcc	.+30     	; 0x1ae2 <USB_SendStringDescriptor(unsigned char const*, unsigned char)+0x58>
    1ac4:	f6 01       	movw	r30, r12
    1ac6:	84 91       	lpm	r24, Z
    1ac8:	0e 94 17 0d 	call	0x1a2e	; 0x1a2e <SendControl(unsigned char)>
    1acc:	08 2f       	mov	r16, r24
    1ace:	80 e0       	ldi	r24, 0x00	; 0
    1ad0:	0e 94 17 0d 	call	0x1a2e	; 0x1a2e <SendControl(unsigned char)>
    1ad4:	80 23       	and	r24, r16
    1ad6:	ff ef       	ldi	r31, 0xFF	; 255
    1ad8:	cf 1a       	sub	r12, r31
    1ada:	df 0a       	sbc	r13, r31
    1adc:	81 11       	cpse	r24, r1
    1ade:	ee cf       	rjmp	.-36     	; 0x1abc <USB_SendStringDescriptor(unsigned char const*, unsigned char)+0x32>
    1ae0:	01 c0       	rjmp	.+2      	; 0x1ae4 <USB_SendStringDescriptor(unsigned char const*, unsigned char)+0x5a>
    1ae2:	81 e0       	ldi	r24, 0x01	; 1
    1ae4:	0f 90       	pop	r0
    1ae6:	df 91       	pop	r29
    1ae8:	cf 91       	pop	r28
    1aea:	1f 91       	pop	r17
    1aec:	0f 91       	pop	r16
    1aee:	ff 90       	pop	r15
    1af0:	df 90       	pop	r13
    1af2:	cf 90       	pop	r12
    1af4:	08 95       	ret

00001af6 <Recv(unsigned char volatile*, unsigned char)>:
    1af6:	61 50       	subi	r22, 0x01	; 1
    1af8:	30 f0       	brcs	.+12     	; 0x1b06 <Recv(unsigned char volatile*, unsigned char)+0x10>
    1afa:	20 91 f1 00 	lds	r18, 0x00F1
    1afe:	fc 01       	movw	r30, r24
    1b00:	20 83       	st	Z, r18
    1b02:	01 96       	adiw	r24, 0x01	; 1
    1b04:	f8 cf       	rjmp	.-16     	; 0x1af6 <Recv(unsigned char volatile*, unsigned char)>
    1b06:	28 98       	cbi	0x05, 0	; 5
    1b08:	84 e6       	ldi	r24, 0x64	; 100
    1b0a:	80 93 06 04 	sts	0x0406, r24
    1b0e:	08 95       	ret

00001b10 <LockEP::LockEP(unsigned char)>:
    1b10:	2f b7       	in	r18, 0x3f	; 63
    1b12:	fc 01       	movw	r30, r24
    1b14:	20 83       	st	Z, r18
    1b16:	f8 94       	cli
    1b18:	67 70       	andi	r22, 0x07	; 7
    1b1a:	60 93 e9 00 	sts	0x00E9, r22
    1b1e:	08 95       	ret

00001b20 <USB_Available(unsigned char)>:
    1b20:	cf 93       	push	r28
    1b22:	df 93       	push	r29
    1b24:	1f 92       	push	r1
    1b26:	cd b7       	in	r28, 0x3d	; 61
    1b28:	de b7       	in	r29, 0x3e	; 62
    1b2a:	68 2f       	mov	r22, r24
    1b2c:	ce 01       	movw	r24, r28
    1b2e:	01 96       	adiw	r24, 0x01	; 1
    1b30:	0e 94 88 0d 	call	0x1b10	; 0x1b10 <LockEP::LockEP(unsigned char)>
    1b34:	80 91 f2 00 	lds	r24, 0x00F2
    1b38:	99 81       	ldd	r25, Y+1	; 0x01
    1b3a:	9f bf       	out	0x3f, r25	; 63
    1b3c:	0f 90       	pop	r0
    1b3e:	df 91       	pop	r29
    1b40:	cf 91       	pop	r28
    1b42:	08 95       	ret

00001b44 <USB_Recv(unsigned char, void*, int)>:
    1b44:	ff 92       	push	r15
    1b46:	0f 93       	push	r16
    1b48:	1f 93       	push	r17
    1b4a:	cf 93       	push	r28
    1b4c:	df 93       	push	r29
    1b4e:	00 d0       	rcall	.+0      	; 0x1b50 <USB_Recv(unsigned char, void*, int)+0xc>
    1b50:	cd b7       	in	r28, 0x3d	; 61
    1b52:	de b7       	in	r29, 0x3e	; 62
    1b54:	f6 2e       	mov	r15, r22
    1b56:	8a 01       	movw	r16, r20
    1b58:	90 91 05 04 	lds	r25, 0x0405
    1b5c:	99 23       	and	r25, r25
    1b5e:	11 f0       	breq	.+4      	; 0x1b64 <USB_Recv(unsigned char, void*, int)+0x20>
    1b60:	57 ff       	sbrs	r21, 7
    1b62:	03 c0       	rjmp	.+6      	; 0x1b6a <USB_Recv(unsigned char, void*, int)+0x26>
    1b64:	8f ef       	ldi	r24, 0xFF	; 255
    1b66:	9f ef       	ldi	r25, 0xFF	; 255
    1b68:	2b c0       	rjmp	.+86     	; 0x1bc0 <USB_Recv(unsigned char, void*, int)+0x7c>
    1b6a:	68 2f       	mov	r22, r24
    1b6c:	ce 01       	movw	r24, r28
    1b6e:	01 96       	adiw	r24, 0x01	; 1
    1b70:	7a 83       	std	Y+2, r23	; 0x02
    1b72:	0e 94 88 0d 	call	0x1b10	; 0x1b10 <LockEP::LockEP(unsigned char)>
    1b76:	80 91 f2 00 	lds	r24, 0x00F2
    1b7a:	90 e0       	ldi	r25, 0x00	; 0
    1b7c:	a8 01       	movw	r20, r16
    1b7e:	7a 81       	ldd	r23, Y+2	; 0x02
    1b80:	80 17       	cp	r24, r16
    1b82:	91 07       	cpc	r25, r17
    1b84:	0c f4       	brge	.+2      	; 0x1b88 <USB_Recv(unsigned char, void*, int)+0x44>
    1b86:	ac 01       	movw	r20, r24
    1b88:	ef 2d       	mov	r30, r15
    1b8a:	f7 2f       	mov	r31, r23
    1b8c:	f4 0e       	add	r15, r20
    1b8e:	84 e6       	ldi	r24, 0x64	; 100
    1b90:	fe 16       	cp	r15, r30
    1b92:	39 f0       	breq	.+14     	; 0x1ba2 <USB_Recv(unsigned char, void*, int)+0x5e>
    1b94:	28 98       	cbi	0x05, 0	; 5
    1b96:	80 93 06 04 	sts	0x0406, r24
    1b9a:	90 91 f1 00 	lds	r25, 0x00F1
    1b9e:	91 93       	st	Z+, r25
    1ba0:	f7 cf       	rjmp	.-18     	; 0x1b90 <USB_Recv(unsigned char, void*, int)+0x4c>
    1ba2:	41 15       	cp	r20, r1
    1ba4:	51 05       	cpc	r21, r1
    1ba6:	21 f0       	breq	.+8      	; 0x1bb0 <USB_Recv(unsigned char, void*, int)+0x6c>
    1ba8:	80 91 f2 00 	lds	r24, 0x00F2
    1bac:	88 23       	and	r24, r24
    1bae:	21 f0       	breq	.+8      	; 0x1bb8 <USB_Recv(unsigned char, void*, int)+0x74>
    1bb0:	89 81       	ldd	r24, Y+1	; 0x01
    1bb2:	8f bf       	out	0x3f, r24	; 63
    1bb4:	ca 01       	movw	r24, r20
    1bb6:	04 c0       	rjmp	.+8      	; 0x1bc0 <USB_Recv(unsigned char, void*, int)+0x7c>
    1bb8:	8b e6       	ldi	r24, 0x6B	; 107
    1bba:	80 93 e8 00 	sts	0x00E8, r24
    1bbe:	f8 cf       	rjmp	.-16     	; 0x1bb0 <USB_Recv(unsigned char, void*, int)+0x6c>
    1bc0:	0f 90       	pop	r0
    1bc2:	0f 90       	pop	r0
    1bc4:	df 91       	pop	r29
    1bc6:	cf 91       	pop	r28
    1bc8:	1f 91       	pop	r17
    1bca:	0f 91       	pop	r16
    1bcc:	ff 90       	pop	r15
    1bce:	08 95       	ret

00001bd0 <USB_Recv(unsigned char)>:
    1bd0:	cf 93       	push	r28
    1bd2:	df 93       	push	r29
    1bd4:	1f 92       	push	r1
    1bd6:	cd b7       	in	r28, 0x3d	; 61
    1bd8:	de b7       	in	r29, 0x3e	; 62
    1bda:	41 e0       	ldi	r20, 0x01	; 1
    1bdc:	50 e0       	ldi	r21, 0x00	; 0
    1bde:	be 01       	movw	r22, r28
    1be0:	6f 5f       	subi	r22, 0xFF	; 255
    1be2:	7f 4f       	sbci	r23, 0xFF	; 255
    1be4:	0e 94 a2 0d 	call	0x1b44	; 0x1b44 <USB_Recv(unsigned char, void*, int)>
    1be8:	01 97       	sbiw	r24, 0x01	; 1
    1bea:	19 f4       	brne	.+6      	; 0x1bf2 <USB_Recv(unsigned char)+0x22>
    1bec:	89 81       	ldd	r24, Y+1	; 0x01
    1bee:	90 e0       	ldi	r25, 0x00	; 0
    1bf0:	02 c0       	rjmp	.+4      	; 0x1bf6 <USB_Recv(unsigned char)+0x26>
    1bf2:	8f ef       	ldi	r24, 0xFF	; 255
    1bf4:	9f ef       	ldi	r25, 0xFF	; 255
    1bf6:	0f 90       	pop	r0
    1bf8:	df 91       	pop	r29
    1bfa:	cf 91       	pop	r28
    1bfc:	08 95       	ret

00001bfe <USB_SendSpace(unsigned char)>:
    1bfe:	cf 93       	push	r28
    1c00:	df 93       	push	r29
    1c02:	1f 92       	push	r1
    1c04:	cd b7       	in	r28, 0x3d	; 61
    1c06:	de b7       	in	r29, 0x3e	; 62
    1c08:	68 2f       	mov	r22, r24
    1c0a:	ce 01       	movw	r24, r28
    1c0c:	01 96       	adiw	r24, 0x01	; 1
    1c0e:	0e 94 88 0d 	call	0x1b10	; 0x1b10 <LockEP::LockEP(unsigned char)>
    1c12:	90 91 e8 00 	lds	r25, 0x00E8
    1c16:	89 2f       	mov	r24, r25
    1c18:	80 72       	andi	r24, 0x20	; 32
    1c1a:	95 ff       	sbrs	r25, 5
    1c1c:	04 c0       	rjmp	.+8      	; 0x1c26 <USB_SendSpace(unsigned char)+0x28>
    1c1e:	90 91 f2 00 	lds	r25, 0x00F2
    1c22:	80 e4       	ldi	r24, 0x40	; 64
    1c24:	89 1b       	sub	r24, r25
    1c26:	99 81       	ldd	r25, Y+1	; 0x01
    1c28:	9f bf       	out	0x3f, r25	; 63
    1c2a:	0f 90       	pop	r0
    1c2c:	df 91       	pop	r29
    1c2e:	cf 91       	pop	r28
    1c30:	08 95       	ret

00001c32 <USB_Send(unsigned char, void const*, int)>:
    1c32:	6f 92       	push	r6
    1c34:	7f 92       	push	r7
    1c36:	8f 92       	push	r8
    1c38:	9f 92       	push	r9
    1c3a:	af 92       	push	r10
    1c3c:	bf 92       	push	r11
    1c3e:	cf 92       	push	r12
    1c40:	df 92       	push	r13
    1c42:	ef 92       	push	r14
    1c44:	ff 92       	push	r15
    1c46:	0f 93       	push	r16
    1c48:	1f 93       	push	r17
    1c4a:	cf 93       	push	r28
    1c4c:	df 93       	push	r29
    1c4e:	1f 92       	push	r1
    1c50:	cd b7       	in	r28, 0x3d	; 61
    1c52:	de b7       	in	r29, 0x3e	; 62
    1c54:	78 2e       	mov	r7, r24
    1c56:	7b 01       	movw	r14, r22
    1c58:	c4 2e       	mov	r12, r20
    1c5a:	b5 2e       	mov	r11, r21
    1c5c:	80 91 05 04 	lds	r24, 0x0405
    1c60:	88 23       	and	r24, r24
    1c62:	69 f0       	breq	.+26     	; 0x1c7e <USB_Send(unsigned char, void const*, int)+0x4c>
    1c64:	04 2f       	mov	r16, r20
    1c66:	15 2f       	mov	r17, r21
    1c68:	8a ef       	ldi	r24, 0xFA	; 250
    1c6a:	d8 2e       	mov	r13, r24
    1c6c:	87 2d       	mov	r24, r7
    1c6e:	80 72       	andi	r24, 0x20	; 32
    1c70:	98 2e       	mov	r9, r24
    1c72:	9a e3       	ldi	r25, 0x3A	; 58
    1c74:	a9 2e       	mov	r10, r25
    1c76:	87 2d       	mov	r24, r7
    1c78:	80 74       	andi	r24, 0x40	; 64
    1c7a:	88 2e       	mov	r8, r24
    1c7c:	11 c0       	rjmp	.+34     	; 0x1ca0 <USB_Send(unsigned char, void const*, int)+0x6e>
    1c7e:	8f ef       	ldi	r24, 0xFF	; 255
    1c80:	9f ef       	ldi	r25, 0xFF	; 255
    1c82:	57 c0       	rjmp	.+174    	; 0x1d32 <USB_Send(unsigned char, void const*, int)+0x100>
    1c84:	87 2d       	mov	r24, r7
    1c86:	0e 94 ff 0d 	call	0x1bfe	; 0x1bfe <USB_SendSpace(unsigned char)>
    1c8a:	68 2e       	mov	r6, r24
    1c8c:	81 11       	cpse	r24, r1
    1c8e:	0c c0       	rjmp	.+24     	; 0x1ca8 <USB_Send(unsigned char, void const*, int)+0x76>
    1c90:	da 94       	dec	r13
    1c92:	a9 f3       	breq	.-22     	; 0x1c7e <USB_Send(unsigned char, void const*, int)+0x4c>
    1c94:	61 e0       	ldi	r22, 0x01	; 1
    1c96:	70 e0       	ldi	r23, 0x00	; 0
    1c98:	80 e0       	ldi	r24, 0x00	; 0
    1c9a:	90 e0       	ldi	r25, 0x00	; 0
    1c9c:	0e 94 35 08 	call	0x106a	; 0x106a <delay>
    1ca0:	01 15       	cp	r16, r1
    1ca2:	11 05       	cpc	r17, r1
    1ca4:	79 f7       	brne	.-34     	; 0x1c84 <USB_Send(unsigned char, void const*, int)+0x52>
    1ca6:	3b c0       	rjmp	.+118    	; 0x1d1e <USB_Send(unsigned char, void const*, int)+0xec>
    1ca8:	28 2f       	mov	r18, r24
    1caa:	30 e0       	ldi	r19, 0x00	; 0
    1cac:	02 17       	cp	r16, r18
    1cae:	13 07       	cpc	r17, r19
    1cb0:	0c f4       	brge	.+2      	; 0x1cb4 <USB_Send(unsigned char, void const*, int)+0x82>
    1cb2:	60 2e       	mov	r6, r16
    1cb4:	67 2d       	mov	r22, r7
    1cb6:	ce 01       	movw	r24, r28
    1cb8:	01 96       	adiw	r24, 0x01	; 1
    1cba:	0e 94 88 0d 	call	0x1b10	; 0x1b10 <LockEP::LockEP(unsigned char)>
    1cbe:	80 91 e8 00 	lds	r24, 0x00E8
    1cc2:	85 ff       	sbrs	r24, 5
    1cc4:	29 c0       	rjmp	.+82     	; 0x1d18 <USB_Send(unsigned char, void const*, int)+0xe6>
    1cc6:	26 2d       	mov	r18, r6
    1cc8:	30 e0       	ldi	r19, 0x00	; 0
    1cca:	02 1b       	sub	r16, r18
    1ccc:	13 0b       	sbc	r17, r19
    1cce:	99 20       	and	r9, r9
    1cd0:	39 f0       	breq	.+14     	; 0x1ce0 <USB_Send(unsigned char, void const*, int)+0xae>
    1cd2:	6a 94       	dec	r6
    1cd4:	8f ef       	ldi	r24, 0xFF	; 255
    1cd6:	68 16       	cp	r6, r24
    1cd8:	b1 f0       	breq	.+44     	; 0x1d06 <USB_Send(unsigned char, void const*, int)+0xd4>
    1cda:	10 92 f1 00 	sts	0x00F1, r1
    1cde:	f9 cf       	rjmp	.-14     	; 0x1cd2 <USB_Send(unsigned char, void const*, int)+0xa0>
    1ce0:	f7 01       	movw	r30, r14
    1ce2:	86 2d       	mov	r24, r6
    1ce4:	77 fe       	sbrs	r7, 7
    1ce6:	07 c0       	rjmp	.+14     	; 0x1cf6 <USB_Send(unsigned char, void const*, int)+0xc4>
    1ce8:	81 50       	subi	r24, 0x01	; 1
    1cea:	58 f0       	brcs	.+22     	; 0x1d02 <USB_Send(unsigned char, void const*, int)+0xd0>
    1cec:	94 91       	lpm	r25, Z
    1cee:	90 93 f1 00 	sts	0x00F1, r25
    1cf2:	31 96       	adiw	r30, 0x01	; 1
    1cf4:	f9 cf       	rjmp	.-14     	; 0x1ce8 <USB_Send(unsigned char, void const*, int)+0xb6>
    1cf6:	81 50       	subi	r24, 0x01	; 1
    1cf8:	20 f0       	brcs	.+8      	; 0x1d02 <USB_Send(unsigned char, void const*, int)+0xd0>
    1cfa:	91 91       	ld	r25, Z+
    1cfc:	90 93 f1 00 	sts	0x00F1, r25
    1d00:	fa cf       	rjmp	.-12     	; 0x1cf6 <USB_Send(unsigned char, void const*, int)+0xc4>
    1d02:	e2 0e       	add	r14, r18
    1d04:	f3 1e       	adc	r15, r19
    1d06:	80 91 e8 00 	lds	r24, 0x00E8
    1d0a:	85 ff       	sbrs	r24, 5
    1d0c:	0f c0       	rjmp	.+30     	; 0x1d2c <USB_Send(unsigned char, void const*, int)+0xfa>
    1d0e:	01 15       	cp	r16, r1
    1d10:	11 05       	cpc	r17, r1
    1d12:	11 f4       	brne	.+4      	; 0x1d18 <USB_Send(unsigned char, void const*, int)+0xe6>
    1d14:	81 10       	cpse	r8, r1
    1d16:	0a c0       	rjmp	.+20     	; 0x1d2c <USB_Send(unsigned char, void const*, int)+0xfa>
    1d18:	89 81       	ldd	r24, Y+1	; 0x01
    1d1a:	8f bf       	out	0x3f, r24	; 63
    1d1c:	c1 cf       	rjmp	.-126    	; 0x1ca0 <USB_Send(unsigned char, void const*, int)+0x6e>
    1d1e:	5d 98       	cbi	0x0b, 5	; 11
    1d20:	84 e6       	ldi	r24, 0x64	; 100
    1d22:	80 93 07 04 	sts	0x0407, r24
    1d26:	8c 2d       	mov	r24, r12
    1d28:	9b 2d       	mov	r25, r11
    1d2a:	03 c0       	rjmp	.+6      	; 0x1d32 <USB_Send(unsigned char, void const*, int)+0x100>
    1d2c:	a0 92 e8 00 	sts	0x00E8, r10
    1d30:	f3 cf       	rjmp	.-26     	; 0x1d18 <USB_Send(unsigned char, void const*, int)+0xe6>
    1d32:	0f 90       	pop	r0
    1d34:	df 91       	pop	r29
    1d36:	cf 91       	pop	r28
    1d38:	1f 91       	pop	r17
    1d3a:	0f 91       	pop	r16
    1d3c:	ff 90       	pop	r15
    1d3e:	ef 90       	pop	r14
    1d40:	df 90       	pop	r13
    1d42:	cf 90       	pop	r12
    1d44:	bf 90       	pop	r11
    1d46:	af 90       	pop	r10
    1d48:	9f 90       	pop	r9
    1d4a:	8f 90       	pop	r8
    1d4c:	7f 90       	pop	r7
    1d4e:	6f 90       	pop	r6
    1d50:	08 95       	ret

00001d52 <InitControl(int)>:
    1d52:	10 92 e9 00 	sts	0x00E9, r1
    1d56:	10 92 04 04 	sts	0x0404, r1
    1d5a:	10 92 03 04 	sts	0x0403, r1
    1d5e:	90 93 02 04 	sts	0x0402, r25
    1d62:	80 93 01 04 	sts	0x0401, r24
    1d66:	08 95       	ret

00001d68 <USB_SendControl(unsigned char, void const*, int)>:
    1d68:	cf 92       	push	r12
    1d6a:	df 92       	push	r13
    1d6c:	ff 92       	push	r15
    1d6e:	0f 93       	push	r16
    1d70:	1f 93       	push	r17
    1d72:	cf 93       	push	r28
    1d74:	df 93       	push	r29
    1d76:	00 d0       	rcall	.+0      	; 0x1d78 <USB_SendControl(unsigned char, void const*, int)+0x10>
    1d78:	cd b7       	in	r28, 0x3d	; 61
    1d7a:	de b7       	in	r29, 0x3e	; 62
    1d7c:	f8 2e       	mov	r15, r24
    1d7e:	8a 01       	movw	r16, r20
    1d80:	6b 01       	movw	r12, r22
    1d82:	01 15       	cp	r16, r1
    1d84:	11 05       	cpc	r17, r1
    1d86:	b1 f0       	breq	.+44     	; 0x1db4 <USB_SendControl(unsigned char, void const*, int)+0x4c>
    1d88:	f6 01       	movw	r30, r12
    1d8a:	f7 fe       	sbrs	r15, 7
    1d8c:	02 c0       	rjmp	.+4      	; 0x1d92 <USB_SendControl(unsigned char, void const*, int)+0x2a>
    1d8e:	84 91       	lpm	r24, Z
    1d90:	01 c0       	rjmp	.+2      	; 0x1d94 <USB_SendControl(unsigned char, void const*, int)+0x2c>
    1d92:	80 81       	ld	r24, Z
    1d94:	49 83       	std	Y+1, r20	; 0x01
    1d96:	5a 83       	std	Y+2, r21	; 0x02
    1d98:	0e 94 17 0d 	call	0x1a2e	; 0x1a2e <SendControl(unsigned char)>
    1d9c:	01 50       	subi	r16, 0x01	; 1
    1d9e:	11 09       	sbc	r17, r1
    1da0:	ff ef       	ldi	r31, 0xFF	; 255
    1da2:	cf 1a       	sub	r12, r31
    1da4:	df 0a       	sbc	r13, r31
    1da6:	49 81       	ldd	r20, Y+1	; 0x01
    1da8:	5a 81       	ldd	r21, Y+2	; 0x02
    1daa:	81 11       	cpse	r24, r1
    1dac:	ea cf       	rjmp	.-44     	; 0x1d82 <USB_SendControl(unsigned char, void const*, int)+0x1a>
    1dae:	8f ef       	ldi	r24, 0xFF	; 255
    1db0:	9f ef       	ldi	r25, 0xFF	; 255
    1db2:	01 c0       	rjmp	.+2      	; 0x1db6 <USB_SendControl(unsigned char, void const*, int)+0x4e>
    1db4:	ca 01       	movw	r24, r20
    1db6:	0f 90       	pop	r0
    1db8:	0f 90       	pop	r0
    1dba:	df 91       	pop	r29
    1dbc:	cf 91       	pop	r28
    1dbe:	1f 91       	pop	r17
    1dc0:	0f 91       	pop	r16
    1dc2:	ff 90       	pop	r15
    1dc4:	df 90       	pop	r13
    1dc6:	cf 90       	pop	r12
    1dc8:	08 95       	ret

00001dca <USB_RecvControl(void*, int)>:
    1dca:	1f 93       	push	r17
    1dcc:	cf 93       	push	r28
    1dce:	df 93       	push	r29
    1dd0:	1f 92       	push	r1
    1dd2:	cd b7       	in	r28, 0x3d	; 61
    1dd4:	de b7       	in	r29, 0x3e	; 62
    1dd6:	16 2f       	mov	r17, r22
    1dd8:	20 91 e8 00 	lds	r18, 0x00E8
    1ddc:	22 ff       	sbrs	r18, 2
    1dde:	fc cf       	rjmp	.-8      	; 0x1dd8 <USB_RecvControl(void*, int)+0xe>
    1de0:	61 2f       	mov	r22, r17
    1de2:	79 83       	std	Y+1, r23	; 0x01
    1de4:	0e 94 7b 0d 	call	0x1af6	; 0x1af6 <Recv(unsigned char volatile*, unsigned char)>
    1de8:	8b ef       	ldi	r24, 0xFB	; 251
    1dea:	80 93 e8 00 	sts	0x00E8, r24
    1dee:	81 2f       	mov	r24, r17
    1df0:	79 81       	ldd	r23, Y+1	; 0x01
    1df2:	97 2f       	mov	r25, r23
    1df4:	0f 90       	pop	r0
    1df6:	df 91       	pop	r29
    1df8:	cf 91       	pop	r28
    1dfa:	1f 91       	pop	r17
    1dfc:	08 95       	ret

00001dfe <SendInterfaces()>:
    1dfe:	cf 93       	push	r28
    1e00:	df 93       	push	r29
    1e02:	1f 92       	push	r1
    1e04:	cd b7       	in	r28, 0x3d	; 61
    1e06:	de b7       	in	r29, 0x3e	; 62
    1e08:	19 82       	std	Y+1, r1	; 0x01
    1e0a:	ce 01       	movw	r24, r28
    1e0c:	01 96       	adiw	r24, 0x01	; 1
    1e0e:	0e 94 bc 09 	call	0x1378	; 0x1378 <CDC_GetInterface(unsigned char*)>
    1e12:	ce 01       	movw	r24, r28
    1e14:	01 96       	adiw	r24, 0x01	; 1
    1e16:	0e 94 aa 19 	call	0x3354	; 0x3354 <HID_GetInterface(unsigned char*)>
    1e1a:	89 81       	ldd	r24, Y+1	; 0x01
    1e1c:	90 e0       	ldi	r25, 0x00	; 0
    1e1e:	0f 90       	pop	r0
    1e20:	df 91       	pop	r29
    1e22:	cf 91       	pop	r28
    1e24:	08 95       	ret

00001e26 <__vector_11>:
    1e26:	1f 92       	push	r1
    1e28:	0f 92       	push	r0
    1e2a:	0f b6       	in	r0, 0x3f	; 63
    1e2c:	0f 92       	push	r0
    1e2e:	11 24       	eor	r1, r1
    1e30:	ef 92       	push	r14
    1e32:	ff 92       	push	r15
    1e34:	0f 93       	push	r16
    1e36:	1f 93       	push	r17
    1e38:	2f 93       	push	r18
    1e3a:	3f 93       	push	r19
    1e3c:	4f 93       	push	r20
    1e3e:	5f 93       	push	r21
    1e40:	6f 93       	push	r22
    1e42:	7f 93       	push	r23
    1e44:	8f 93       	push	r24
    1e46:	9f 93       	push	r25
    1e48:	af 93       	push	r26
    1e4a:	bf 93       	push	r27
    1e4c:	ef 93       	push	r30
    1e4e:	ff 93       	push	r31
    1e50:	cf 93       	push	r28
    1e52:	df 93       	push	r29
    1e54:	cd b7       	in	r28, 0x3d	; 61
    1e56:	de b7       	in	r29, 0x3e	; 62
    1e58:	62 97       	sbiw	r28, 0x12	; 18
    1e5a:	de bf       	out	0x3e, r29	; 62
    1e5c:	cd bf       	out	0x3d, r28	; 61
    1e5e:	10 92 e9 00 	sts	0x00E9, r1
    1e62:	80 91 e8 00 	lds	r24, 0x00E8
    1e66:	83 ff       	sbrs	r24, 3
    1e68:	eb c0       	rjmp	.+470    	; 0x2040 <__vector_11+0x21a>
    1e6a:	68 e0       	ldi	r22, 0x08	; 8
    1e6c:	ce 01       	movw	r24, r28
    1e6e:	0a 96       	adiw	r24, 0x0a	; 10
    1e70:	0e 94 7b 0d 	call	0x1af6	; 0x1af6 <Recv(unsigned char volatile*, unsigned char)>
    1e74:	82 ef       	ldi	r24, 0xF2	; 242
    1e76:	80 93 e8 00 	sts	0x00E8, r24
    1e7a:	9a 85       	ldd	r25, Y+10	; 0x0a
    1e7c:	97 ff       	sbrs	r25, 7
    1e7e:	05 c0       	rjmp	.+10     	; 0x1e8a <__vector_11+0x64>
    1e80:	80 91 e8 00 	lds	r24, 0x00E8
    1e84:	80 ff       	sbrs	r24, 0
    1e86:	fc cf       	rjmp	.-8      	; 0x1e80 <__vector_11+0x5a>
    1e88:	03 c0       	rjmp	.+6      	; 0x1e90 <__vector_11+0x6a>
    1e8a:	8e ef       	ldi	r24, 0xFE	; 254
    1e8c:	80 93 e8 00 	sts	0x00E8, r24
    1e90:	89 2f       	mov	r24, r25
    1e92:	80 76       	andi	r24, 0x60	; 96
    1e94:	09 f0       	breq	.+2      	; 0x1e98 <__vector_11+0x72>
    1e96:	b9 c0       	rjmp	.+370    	; 0x200a <__vector_11+0x1e4>
    1e98:	8b 85       	ldd	r24, Y+11	; 0x0b
    1e9a:	81 11       	cpse	r24, r1
    1e9c:	05 c0       	rjmp	.+10     	; 0x1ea8 <__vector_11+0x82>
    1e9e:	10 92 f1 00 	sts	0x00F1, r1
    1ea2:	10 92 f1 00 	sts	0x00F1, r1
    1ea6:	c5 c0       	rjmp	.+394    	; 0x2032 <__vector_11+0x20c>
    1ea8:	28 2f       	mov	r18, r24
    1eaa:	2d 7f       	andi	r18, 0xFD	; 253
    1eac:	21 30       	cpi	r18, 0x01	; 1
    1eae:	09 f4       	brne	.+2      	; 0x1eb2 <__vector_11+0x8c>
    1eb0:	c0 c0       	rjmp	.+384    	; 0x2032 <__vector_11+0x20c>
    1eb2:	85 30       	cpi	r24, 0x05	; 5
    1eb4:	49 f4       	brne	.+18     	; 0x1ec8 <__vector_11+0xa2>
    1eb6:	80 91 e8 00 	lds	r24, 0x00E8
    1eba:	80 ff       	sbrs	r24, 0
    1ebc:	fc cf       	rjmp	.-8      	; 0x1eb6 <__vector_11+0x90>
    1ebe:	8c 85       	ldd	r24, Y+12	; 0x0c
    1ec0:	80 68       	ori	r24, 0x80	; 128
    1ec2:	80 93 e3 00 	sts	0x00E3, r24
    1ec6:	b5 c0       	rjmp	.+362    	; 0x2032 <__vector_11+0x20c>
    1ec8:	86 30       	cpi	r24, 0x06	; 6
    1eca:	09 f0       	breq	.+2      	; 0x1ece <__vector_11+0xa8>
    1ecc:	76 c0       	rjmp	.+236    	; 0x1fba <__vector_11+0x194>
    1ece:	2d 85       	ldd	r18, Y+13	; 0x0d
    1ed0:	e8 88       	ldd	r14, Y+16	; 0x10
    1ed2:	f9 88       	ldd	r15, Y+17	; 0x11
    1ed4:	22 30       	cpi	r18, 0x02	; 2
    1ed6:	71 f5       	brne	.+92     	; 0x1f34 <__vector_11+0x10e>
    1ed8:	80 e0       	ldi	r24, 0x00	; 0
    1eda:	90 e0       	ldi	r25, 0x00	; 0
    1edc:	2a 8b       	std	Y+18, r18	; 0x12
    1ede:	0e 94 a9 0e 	call	0x1d52	; 0x1d52 <InitControl(int)>
    1ee2:	0e 94 ff 0e 	call	0x1dfe	; 0x1dfe <SendInterfaces()>
    1ee6:	99 e0       	ldi	r25, 0x09	; 9
    1ee8:	8e 01       	movw	r16, r28
    1eea:	0f 5f       	subi	r16, 0xFF	; 255
    1eec:	1f 4f       	sbci	r17, 0xFF	; 255
    1eee:	f8 01       	movw	r30, r16
    1ef0:	39 2f       	mov	r19, r25
    1ef2:	11 92       	st	Z+, r1
    1ef4:	3a 95       	dec	r19
    1ef6:	e9 f7       	brne	.-6      	; 0x1ef2 <__vector_11+0xcc>
    1ef8:	99 83       	std	Y+1, r25	; 0x01
    1efa:	2a 89       	ldd	r18, Y+18	; 0x12
    1efc:	2a 83       	std	Y+2, r18	; 0x02
    1efe:	91 e0       	ldi	r25, 0x01	; 1
    1f00:	9e 83       	std	Y+6, r25	; 0x06
    1f02:	90 e8       	ldi	r25, 0x80	; 128
    1f04:	98 87       	std	Y+8, r25	; 0x08
    1f06:	9a ef       	ldi	r25, 0xFA	; 250
    1f08:	99 87       	std	Y+9, r25	; 0x09
    1f0a:	20 91 03 04 	lds	r18, 0x0403
    1f0e:	30 91 04 04 	lds	r19, 0x0404
    1f12:	27 5f       	subi	r18, 0xF7	; 247
    1f14:	3f 4f       	sbci	r19, 0xFF	; 255
    1f16:	3c 83       	std	Y+4, r19	; 0x04
    1f18:	2b 83       	std	Y+3, r18	; 0x03
    1f1a:	8d 83       	std	Y+5, r24	; 0x05
    1f1c:	c7 01       	movw	r24, r14
    1f1e:	0e 94 a9 0e 	call	0x1d52	; 0x1d52 <InitControl(int)>
    1f22:	49 e0       	ldi	r20, 0x09	; 9
    1f24:	50 e0       	ldi	r21, 0x00	; 0
    1f26:	b8 01       	movw	r22, r16
    1f28:	80 e0       	ldi	r24, 0x00	; 0
    1f2a:	0e 94 b4 0e 	call	0x1d68	; 0x1d68 <USB_SendControl(unsigned char, void const*, int)>
    1f2e:	0e 94 ff 0e 	call	0x1dfe	; 0x1dfe <SendInterfaces()>
    1f32:	7f c0       	rjmp	.+254    	; 0x2032 <__vector_11+0x20c>
    1f34:	c7 01       	movw	r24, r14
    1f36:	2a 8b       	std	Y+18, r18	; 0x12
    1f38:	0e 94 a9 0e 	call	0x1d52	; 0x1d52 <InitControl(int)>
    1f3c:	2a 89       	ldd	r18, Y+18	; 0x12
    1f3e:	22 32       	cpi	r18, 0x22	; 34
    1f40:	41 f4       	brne	.+16     	; 0x1f52 <__vector_11+0x12c>
    1f42:	82 e2       	ldi	r24, 0x22	; 34
    1f44:	90 e0       	ldi	r25, 0x00	; 0
    1f46:	0e 94 b5 19 	call	0x336a	; 0x336a <HID_GetDescriptor(int)>
    1f4a:	89 2b       	or	r24, r25
    1f4c:	09 f0       	breq	.+2      	; 0x1f50 <__vector_11+0x12a>
    1f4e:	71 c0       	rjmp	.+226    	; 0x2032 <__vector_11+0x20c>
    1f50:	74 c0       	rjmp	.+232    	; 0x203a <__vector_11+0x214>
    1f52:	21 30       	cpi	r18, 0x01	; 1
    1f54:	69 f4       	brne	.+26     	; 0x1f70 <__vector_11+0x14a>
    1f56:	88 89       	ldd	r24, Y+16	; 0x10
    1f58:	99 89       	ldd	r25, Y+17	; 0x11
    1f5a:	08 97       	sbiw	r24, 0x08	; 8
    1f5c:	11 f4       	brne	.+4      	; 0x1f62 <__vector_11+0x13c>
    1f5e:	20 93 00 04 	sts	0x0400, r18
    1f62:	80 91 00 04 	lds	r24, 0x0400
    1f66:	81 11       	cpse	r24, r1
    1f68:	18 c0       	rjmp	.+48     	; 0x1f9a <__vector_11+0x174>
    1f6a:	64 e0       	ldi	r22, 0x04	; 4
    1f6c:	72 e0       	ldi	r23, 0x02	; 2
    1f6e:	1a c0       	rjmp	.+52     	; 0x1fa4 <__vector_11+0x17e>
    1f70:	23 30       	cpi	r18, 0x03	; 3
    1f72:	09 f0       	breq	.+2      	; 0x1f76 <__vector_11+0x150>
    1f74:	62 c0       	rjmp	.+196    	; 0x203a <__vector_11+0x214>
    1f76:	8c 85       	ldd	r24, Y+12	; 0x0c
    1f78:	88 23       	and	r24, r24
    1f7a:	91 f0       	breq	.+36     	; 0x1fa0 <__vector_11+0x17a>
    1f7c:	82 30       	cpi	r24, 0x02	; 2
    1f7e:	21 f4       	brne	.+8      	; 0x1f88 <__vector_11+0x162>
    1f80:	6c e0       	ldi	r22, 0x0C	; 12
    1f82:	82 e2       	ldi	r24, 0x22	; 34
    1f84:	92 e0       	ldi	r25, 0x02	; 2
    1f86:	06 c0       	rjmp	.+12     	; 0x1f94 <__vector_11+0x16e>
    1f88:	81 30       	cpi	r24, 0x01	; 1
    1f8a:	09 f0       	breq	.+2      	; 0x1f8e <__vector_11+0x168>
    1f8c:	56 c0       	rjmp	.+172    	; 0x203a <__vector_11+0x214>
    1f8e:	6b e0       	ldi	r22, 0x0B	; 11
    1f90:	86 e1       	ldi	r24, 0x16	; 22
    1f92:	92 e0       	ldi	r25, 0x02	; 2
    1f94:	0e 94 45 0d 	call	0x1a8a	; 0x1a8a <USB_SendStringDescriptor(unsigned char const*, unsigned char)>
    1f98:	4a c0       	rjmp	.+148    	; 0x202e <__vector_11+0x208>
    1f9a:	62 ef       	ldi	r22, 0xF2	; 242
    1f9c:	71 e0       	ldi	r23, 0x01	; 1
    1f9e:	02 c0       	rjmp	.+4      	; 0x1fa4 <__vector_11+0x17e>
    1fa0:	6f e2       	ldi	r22, 0x2F	; 47
    1fa2:	72 e0       	ldi	r23, 0x02	; 2
    1fa4:	61 15       	cp	r22, r1
    1fa6:	71 05       	cpc	r23, r1
    1fa8:	09 f4       	brne	.+2      	; 0x1fac <__vector_11+0x186>
    1faa:	47 c0       	rjmp	.+142    	; 0x203a <__vector_11+0x214>
    1fac:	fb 01       	movw	r30, r22
    1fae:	44 91       	lpm	r20, Z
    1fb0:	50 e0       	ldi	r21, 0x00	; 0
    1fb2:	80 e8       	ldi	r24, 0x80	; 128
    1fb4:	0e 94 b4 0e 	call	0x1d68	; 0x1d68 <USB_SendControl(unsigned char, void const*, int)>
    1fb8:	3c c0       	rjmp	.+120    	; 0x2032 <__vector_11+0x20c>
    1fba:	87 30       	cpi	r24, 0x07	; 7
    1fbc:	09 f4       	brne	.+2      	; 0x1fc0 <__vector_11+0x19a>
    1fbe:	3d c0       	rjmp	.+122    	; 0x203a <__vector_11+0x214>
    1fc0:	88 30       	cpi	r24, 0x08	; 8
    1fc2:	21 f4       	brne	.+8      	; 0x1fcc <__vector_11+0x1a6>
    1fc4:	81 e0       	ldi	r24, 0x01	; 1
    1fc6:	80 93 f1 00 	sts	0x00F1, r24
    1fca:	33 c0       	rjmp	.+102    	; 0x2032 <__vector_11+0x20c>
    1fcc:	89 30       	cpi	r24, 0x09	; 9
    1fce:	89 f5       	brne	.+98     	; 0x2032 <__vector_11+0x20c>
    1fd0:	93 70       	andi	r25, 0x03	; 3
    1fd2:	99 f5       	brne	.+102    	; 0x203a <__vector_11+0x214>
    1fd4:	ee ee       	ldi	r30, 0xEE	; 238
    1fd6:	f1 e0       	ldi	r31, 0x01	; 1
    1fd8:	81 e0       	ldi	r24, 0x01	; 1
    1fda:	21 e0       	ldi	r18, 0x01	; 1
    1fdc:	96 e3       	ldi	r25, 0x36	; 54
    1fde:	80 93 e9 00 	sts	0x00E9, r24
    1fe2:	20 93 eb 00 	sts	0x00EB, r18
    1fe6:	34 91       	lpm	r19, Z
    1fe8:	30 93 ec 00 	sts	0x00EC, r19
    1fec:	90 93 ed 00 	sts	0x00ED, r25
    1ff0:	8f 5f       	subi	r24, 0xFF	; 255
    1ff2:	31 96       	adiw	r30, 0x01	; 1
    1ff4:	85 30       	cpi	r24, 0x05	; 5
    1ff6:	99 f7       	brne	.-26     	; 0x1fde <__vector_11+0x1b8>
    1ff8:	8e e7       	ldi	r24, 0x7E	; 126
    1ffa:	80 93 ea 00 	sts	0x00EA, r24
    1ffe:	10 92 ea 00 	sts	0x00EA, r1
    2002:	8c 85       	ldd	r24, Y+12	; 0x0c
    2004:	80 93 05 04 	sts	0x0405, r24
    2008:	14 c0       	rjmp	.+40     	; 0x2032 <__vector_11+0x20c>
    200a:	88 89       	ldd	r24, Y+16	; 0x10
    200c:	99 89       	ldd	r25, Y+17	; 0x11
    200e:	0e 94 a9 0e 	call	0x1d52	; 0x1d52 <InitControl(int)>
    2012:	8e 85       	ldd	r24, Y+14	; 0x0e
    2014:	81 11       	cpse	r24, r1
    2016:	05 c0       	rjmp	.+10     	; 0x2022 <__vector_11+0x1fc>
    2018:	ce 01       	movw	r24, r28
    201a:	0a 96       	adiw	r24, 0x0a	; 10
    201c:	0e 94 c7 09 	call	0x138e	; 0x138e <CDC_Setup(Setup&)>
    2020:	06 c0       	rjmp	.+12     	; 0x202e <__vector_11+0x208>
    2022:	82 30       	cpi	r24, 0x02	; 2
    2024:	51 f4       	brne	.+20     	; 0x203a <__vector_11+0x214>
    2026:	ce 01       	movw	r24, r28
    2028:	0a 96       	adiw	r24, 0x0a	; 10
    202a:	0e 94 dd 19 	call	0x33ba	; 0x33ba <HID_Setup(Setup&)>
    202e:	88 23       	and	r24, r24
    2030:	21 f0       	breq	.+8      	; 0x203a <__vector_11+0x214>
    2032:	8e ef       	ldi	r24, 0xFE	; 254
    2034:	80 93 e8 00 	sts	0x00E8, r24
    2038:	03 c0       	rjmp	.+6      	; 0x2040 <__vector_11+0x21a>
    203a:	81 e2       	ldi	r24, 0x21	; 33
    203c:	80 93 eb 00 	sts	0x00EB, r24
    2040:	62 96       	adiw	r28, 0x12	; 18
    2042:	0f b6       	in	r0, 0x3f	; 63
    2044:	f8 94       	cli
    2046:	de bf       	out	0x3e, r29	; 62
    2048:	0f be       	out	0x3f, r0	; 63
    204a:	cd bf       	out	0x3d, r28	; 61
    204c:	df 91       	pop	r29
    204e:	cf 91       	pop	r28
    2050:	ff 91       	pop	r31
    2052:	ef 91       	pop	r30
    2054:	bf 91       	pop	r27
    2056:	af 91       	pop	r26
    2058:	9f 91       	pop	r25
    205a:	8f 91       	pop	r24
    205c:	7f 91       	pop	r23
    205e:	6f 91       	pop	r22
    2060:	5f 91       	pop	r21
    2062:	4f 91       	pop	r20
    2064:	3f 91       	pop	r19
    2066:	2f 91       	pop	r18
    2068:	1f 91       	pop	r17
    206a:	0f 91       	pop	r16
    206c:	ff 90       	pop	r15
    206e:	ef 90       	pop	r14
    2070:	0f 90       	pop	r0
    2072:	0f be       	out	0x3f, r0	; 63
    2074:	0f 90       	pop	r0
    2076:	1f 90       	pop	r1
    2078:	18 95       	reti

0000207a <USB_Flush(unsigned char)>:
    207a:	80 93 e9 00 	sts	0x00E9, r24
    207e:	80 91 f2 00 	lds	r24, 0x00F2
    2082:	88 23       	and	r24, r24
    2084:	19 f0       	breq	.+6      	; 0x208c <USB_Flush(unsigned char)+0x12>
    2086:	8a e3       	ldi	r24, 0x3A	; 58
    2088:	80 93 e8 00 	sts	0x00E8, r24
    208c:	08 95       	ret

0000208e <__vector_10>:
    208e:	1f 92       	push	r1
    2090:	0f 92       	push	r0
    2092:	0f b6       	in	r0, 0x3f	; 63
    2094:	0f 92       	push	r0
    2096:	11 24       	eor	r1, r1
    2098:	2f 93       	push	r18
    209a:	3f 93       	push	r19
    209c:	4f 93       	push	r20
    209e:	5f 93       	push	r21
    20a0:	6f 93       	push	r22
    20a2:	7f 93       	push	r23
    20a4:	8f 93       	push	r24
    20a6:	9f 93       	push	r25
    20a8:	af 93       	push	r26
    20aa:	bf 93       	push	r27
    20ac:	ef 93       	push	r30
    20ae:	ff 93       	push	r31
    20b0:	80 91 e1 00 	lds	r24, 0x00E1
    20b4:	10 92 e1 00 	sts	0x00E1, r1
    20b8:	83 ff       	sbrs	r24, 3
    20ba:	0f c0       	rjmp	.+30     	; 0x20da <__vector_10+0x4c>
    20bc:	10 92 e9 00 	sts	0x00E9, r1
    20c0:	91 e0       	ldi	r25, 0x01	; 1
    20c2:	90 93 eb 00 	sts	0x00EB, r25
    20c6:	10 92 ec 00 	sts	0x00EC, r1
    20ca:	92 e3       	ldi	r25, 0x32	; 50
    20cc:	90 93 ed 00 	sts	0x00ED, r25
    20d0:	10 92 05 04 	sts	0x0405, r1
    20d4:	98 e0       	ldi	r25, 0x08	; 8
    20d6:	90 93 f0 00 	sts	0x00F0, r25
    20da:	82 ff       	sbrs	r24, 2
    20dc:	1d c0       	rjmp	.+58     	; 0x2118 <__vector_10+0x8a>
    20de:	83 e0       	ldi	r24, 0x03	; 3
    20e0:	0e 94 3d 10 	call	0x207a	; 0x207a <USB_Flush(unsigned char)>
    20e4:	80 91 07 04 	lds	r24, 0x0407
    20e8:	88 23       	and	r24, r24
    20ea:	39 f0       	breq	.+14     	; 0x20fa <__vector_10+0x6c>
    20ec:	80 91 07 04 	lds	r24, 0x0407
    20f0:	81 50       	subi	r24, 0x01	; 1
    20f2:	80 93 07 04 	sts	0x0407, r24
    20f6:	88 23       	and	r24, r24
    20f8:	69 f0       	breq	.+26     	; 0x2114 <__vector_10+0x86>
    20fa:	80 91 06 04 	lds	r24, 0x0406
    20fe:	88 23       	and	r24, r24
    2100:	59 f0       	breq	.+22     	; 0x2118 <__vector_10+0x8a>
    2102:	80 91 06 04 	lds	r24, 0x0406
    2106:	81 50       	subi	r24, 0x01	; 1
    2108:	80 93 06 04 	sts	0x0406, r24
    210c:	81 11       	cpse	r24, r1
    210e:	04 c0       	rjmp	.+8      	; 0x2118 <__vector_10+0x8a>
    2110:	28 9a       	sbi	0x05, 0	; 5
    2112:	02 c0       	rjmp	.+4      	; 0x2118 <__vector_10+0x8a>
    2114:	5d 9a       	sbi	0x0b, 5	; 11
    2116:	f1 cf       	rjmp	.-30     	; 0x20fa <__vector_10+0x6c>
    2118:	ff 91       	pop	r31
    211a:	ef 91       	pop	r30
    211c:	bf 91       	pop	r27
    211e:	af 91       	pop	r26
    2120:	9f 91       	pop	r25
    2122:	8f 91       	pop	r24
    2124:	7f 91       	pop	r23
    2126:	6f 91       	pop	r22
    2128:	5f 91       	pop	r21
    212a:	4f 91       	pop	r20
    212c:	3f 91       	pop	r19
    212e:	2f 91       	pop	r18
    2130:	0f 90       	pop	r0
    2132:	0f be       	out	0x3f, r0	; 63
    2134:	0f 90       	pop	r0
    2136:	1f 90       	pop	r1
    2138:	18 95       	reti

0000213a <USBDevice_::attach()>:
    213a:	10 92 05 04 	sts	0x0405, r1
    213e:	81 e0       	ldi	r24, 0x01	; 1
    2140:	80 93 d7 00 	sts	0x00D7, r24
    2144:	80 ea       	ldi	r24, 0xA0	; 160
    2146:	80 93 d8 00 	sts	0x00D8, r24
    214a:	82 e1       	ldi	r24, 0x12	; 18
    214c:	89 bd       	out	0x29, r24	; 41
    214e:	09 b4       	in	r0, 0x29	; 41
    2150:	00 fe       	sbrs	r0, 0
    2152:	fd cf       	rjmp	.-6      	; 0x214e <USBDevice_::attach()+0x14>
    2154:	61 e0       	ldi	r22, 0x01	; 1
    2156:	70 e0       	ldi	r23, 0x00	; 0
    2158:	80 e0       	ldi	r24, 0x00	; 0
    215a:	90 e0       	ldi	r25, 0x00	; 0
    215c:	0e 94 35 08 	call	0x106a	; 0x106a <delay>
    2160:	80 e9       	ldi	r24, 0x90	; 144
    2162:	80 93 d8 00 	sts	0x00D8, r24
    2166:	8c e0       	ldi	r24, 0x0C	; 12
    2168:	80 93 e2 00 	sts	0x00E2, r24
    216c:	10 92 e0 00 	sts	0x00E0, r1
    2170:	55 9a       	sbi	0x0a, 5	; 10
    2172:	20 9a       	sbi	0x04, 0	; 4
    2174:	08 95       	ret

00002176 <String::~String()>:
    2176:	fc 01       	movw	r30, r24
    2178:	80 81       	ld	r24, Z
    217a:	91 81       	ldd	r25, Z+1	; 0x01
    217c:	0c 94 10 1c 	jmp	0x3820	; 0x3820 <free>

00002180 <String::invalidate()>:
    2180:	cf 93       	push	r28
    2182:	df 93       	push	r29
    2184:	ec 01       	movw	r28, r24
    2186:	88 81       	ld	r24, Y
    2188:	99 81       	ldd	r25, Y+1	; 0x01
    218a:	00 97       	sbiw	r24, 0x00	; 0
    218c:	11 f0       	breq	.+4      	; 0x2192 <String::invalidate()+0x12>
    218e:	0e 94 10 1c 	call	0x3820	; 0x3820 <free>
    2192:	19 82       	std	Y+1, r1	; 0x01
    2194:	18 82       	st	Y, r1
    2196:	1d 82       	std	Y+5, r1	; 0x05
    2198:	1c 82       	std	Y+4, r1	; 0x04
    219a:	1b 82       	std	Y+3, r1	; 0x03
    219c:	1a 82       	std	Y+2, r1	; 0x02
    219e:	df 91       	pop	r29
    21a0:	cf 91       	pop	r28
    21a2:	08 95       	ret

000021a4 <String::changeBuffer(unsigned int)>:
    21a4:	0f 93       	push	r16
    21a6:	1f 93       	push	r17
    21a8:	cf 93       	push	r28
    21aa:	df 93       	push	r29
    21ac:	ec 01       	movw	r28, r24
    21ae:	8b 01       	movw	r16, r22
    21b0:	6f 5f       	subi	r22, 0xFF	; 255
    21b2:	7f 4f       	sbci	r23, 0xFF	; 255
    21b4:	88 81       	ld	r24, Y
    21b6:	99 81       	ldd	r25, Y+1	; 0x01
    21b8:	0e 94 9f 1c 	call	0x393e	; 0x393e <realloc>
    21bc:	00 97       	sbiw	r24, 0x00	; 0
    21be:	31 f0       	breq	.+12     	; 0x21cc <String::changeBuffer(unsigned int)+0x28>
    21c0:	99 83       	std	Y+1, r25	; 0x01
    21c2:	88 83       	st	Y, r24
    21c4:	1b 83       	std	Y+3, r17	; 0x03
    21c6:	0a 83       	std	Y+2, r16	; 0x02
    21c8:	81 e0       	ldi	r24, 0x01	; 1
    21ca:	01 c0       	rjmp	.+2      	; 0x21ce <String::changeBuffer(unsigned int)+0x2a>
    21cc:	80 e0       	ldi	r24, 0x00	; 0
    21ce:	df 91       	pop	r29
    21d0:	cf 91       	pop	r28
    21d2:	1f 91       	pop	r17
    21d4:	0f 91       	pop	r16
    21d6:	08 95       	ret

000021d8 <String::reserve(unsigned int)>:
    21d8:	cf 93       	push	r28
    21da:	df 93       	push	r29
    21dc:	ec 01       	movw	r28, r24
    21de:	88 81       	ld	r24, Y
    21e0:	99 81       	ldd	r25, Y+1	; 0x01
    21e2:	89 2b       	or	r24, r25
    21e4:	29 f0       	breq	.+10     	; 0x21f0 <String::reserve(unsigned int)+0x18>
    21e6:	8a 81       	ldd	r24, Y+2	; 0x02
    21e8:	9b 81       	ldd	r25, Y+3	; 0x03
    21ea:	86 17       	cp	r24, r22
    21ec:	97 07       	cpc	r25, r23
    21ee:	60 f4       	brcc	.+24     	; 0x2208 <String::reserve(unsigned int)+0x30>
    21f0:	ce 01       	movw	r24, r28
    21f2:	0e 94 d2 10 	call	0x21a4	; 0x21a4 <String::changeBuffer(unsigned int)>
    21f6:	88 23       	and	r24, r24
    21f8:	41 f0       	breq	.+16     	; 0x220a <String::reserve(unsigned int)+0x32>
    21fa:	8c 81       	ldd	r24, Y+4	; 0x04
    21fc:	9d 81       	ldd	r25, Y+5	; 0x05
    21fe:	89 2b       	or	r24, r25
    2200:	19 f4       	brne	.+6      	; 0x2208 <String::reserve(unsigned int)+0x30>
    2202:	e8 81       	ld	r30, Y
    2204:	f9 81       	ldd	r31, Y+1	; 0x01
    2206:	10 82       	st	Z, r1
    2208:	81 e0       	ldi	r24, 0x01	; 1
    220a:	df 91       	pop	r29
    220c:	cf 91       	pop	r28
    220e:	08 95       	ret

00002210 <String::copy(char const*, unsigned int)>:
    2210:	ef 92       	push	r14
    2212:	ff 92       	push	r15
    2214:	0f 93       	push	r16
    2216:	1f 93       	push	r17
    2218:	cf 93       	push	r28
    221a:	df 93       	push	r29
    221c:	ec 01       	movw	r28, r24
    221e:	7b 01       	movw	r14, r22
    2220:	8a 01       	movw	r16, r20
    2222:	ba 01       	movw	r22, r20
    2224:	0e 94 ec 10 	call	0x21d8	; 0x21d8 <String::reserve(unsigned int)>
    2228:	81 11       	cpse	r24, r1
    222a:	04 c0       	rjmp	.+8      	; 0x2234 <String::copy(char const*, unsigned int)+0x24>
    222c:	ce 01       	movw	r24, r28
    222e:	0e 94 c0 10 	call	0x2180	; 0x2180 <String::invalidate()>
    2232:	07 c0       	rjmp	.+14     	; 0x2242 <String::copy(char const*, unsigned int)+0x32>
    2234:	1d 83       	std	Y+5, r17	; 0x05
    2236:	0c 83       	std	Y+4, r16	; 0x04
    2238:	b7 01       	movw	r22, r14
    223a:	88 81       	ld	r24, Y
    223c:	99 81       	ldd	r25, Y+1	; 0x01
    223e:	0e 94 75 1d 	call	0x3aea	; 0x3aea <strcpy>
    2242:	ce 01       	movw	r24, r28
    2244:	df 91       	pop	r29
    2246:	cf 91       	pop	r28
    2248:	1f 91       	pop	r17
    224a:	0f 91       	pop	r16
    224c:	ff 90       	pop	r15
    224e:	ef 90       	pop	r14
    2250:	08 95       	ret

00002252 <String::String(char const*)>:
    2252:	fc 01       	movw	r30, r24
    2254:	11 82       	std	Z+1, r1	; 0x01
    2256:	10 82       	st	Z, r1
    2258:	13 82       	std	Z+3, r1	; 0x03
    225a:	12 82       	std	Z+2, r1	; 0x02
    225c:	15 82       	std	Z+5, r1	; 0x05
    225e:	14 82       	std	Z+4, r1	; 0x04
    2260:	61 15       	cp	r22, r1
    2262:	71 05       	cpc	r23, r1
    2264:	59 f0       	breq	.+22     	; 0x227c <String::String(char const*)+0x2a>
    2266:	fb 01       	movw	r30, r22
    2268:	01 90       	ld	r0, Z+
    226a:	00 20       	and	r0, r0
    226c:	e9 f7       	brne	.-6      	; 0x2268 <String::String(char const*)+0x16>
    226e:	af 01       	movw	r20, r30
    2270:	41 50       	subi	r20, 0x01	; 1
    2272:	51 09       	sbc	r21, r1
    2274:	46 1b       	sub	r20, r22
    2276:	57 0b       	sbc	r21, r23
    2278:	0c 94 08 11 	jmp	0x2210	; 0x2210 <String::copy(char const*, unsigned int)>
    227c:	08 95       	ret

0000227e <String::operator=(String const&)>:
    227e:	cf 93       	push	r28
    2280:	df 93       	push	r29
    2282:	ec 01       	movw	r28, r24
    2284:	fb 01       	movw	r30, r22
    2286:	86 17       	cp	r24, r22
    2288:	97 07       	cpc	r25, r23
    228a:	61 f0       	breq	.+24     	; 0x22a4 <String::operator=(String const&)+0x26>
    228c:	60 81       	ld	r22, Z
    228e:	71 81       	ldd	r23, Z+1	; 0x01
    2290:	61 15       	cp	r22, r1
    2292:	71 05       	cpc	r23, r1
    2294:	29 f0       	breq	.+10     	; 0x22a0 <String::operator=(String const&)+0x22>
    2296:	44 81       	ldd	r20, Z+4	; 0x04
    2298:	55 81       	ldd	r21, Z+5	; 0x05
    229a:	0e 94 08 11 	call	0x2210	; 0x2210 <String::copy(char const*, unsigned int)>
    229e:	02 c0       	rjmp	.+4      	; 0x22a4 <String::operator=(String const&)+0x26>
    22a0:	0e 94 c0 10 	call	0x2180	; 0x2180 <String::invalidate()>
    22a4:	ce 01       	movw	r24, r28
    22a6:	df 91       	pop	r29
    22a8:	cf 91       	pop	r28
    22aa:	08 95       	ret

000022ac <String::String(String const&)>:
    22ac:	fc 01       	movw	r30, r24
    22ae:	11 82       	std	Z+1, r1	; 0x01
    22b0:	10 82       	st	Z, r1
    22b2:	13 82       	std	Z+3, r1	; 0x03
    22b4:	12 82       	std	Z+2, r1	; 0x02
    22b6:	15 82       	std	Z+5, r1	; 0x05
    22b8:	14 82       	std	Z+4, r1	; 0x04
    22ba:	0c 94 3f 11 	jmp	0x227e	; 0x227e <String::operator=(String const&)>

000022be <String::concat(char const*, unsigned int)>:
    22be:	ef 92       	push	r14
    22c0:	ff 92       	push	r15
    22c2:	0f 93       	push	r16
    22c4:	1f 93       	push	r17
    22c6:	cf 93       	push	r28
    22c8:	df 93       	push	r29
    22ca:	ec 01       	movw	r28, r24
    22cc:	7b 01       	movw	r14, r22
    22ce:	0c 81       	ldd	r16, Y+4	; 0x04
    22d0:	1d 81       	ldd	r17, Y+5	; 0x05
    22d2:	61 15       	cp	r22, r1
    22d4:	71 05       	cpc	r23, r1
    22d6:	11 f4       	brne	.+4      	; 0x22dc <String::concat(char const*, unsigned int)+0x1e>
    22d8:	80 e0       	ldi	r24, 0x00	; 0
    22da:	16 c0       	rjmp	.+44     	; 0x2308 <String::concat(char const*, unsigned int)+0x4a>
    22dc:	41 15       	cp	r20, r1
    22de:	51 05       	cpc	r21, r1
    22e0:	91 f0       	breq	.+36     	; 0x2306 <String::concat(char const*, unsigned int)+0x48>
    22e2:	04 0f       	add	r16, r20
    22e4:	15 1f       	adc	r17, r21
    22e6:	b8 01       	movw	r22, r16
    22e8:	0e 94 ec 10 	call	0x21d8	; 0x21d8 <String::reserve(unsigned int)>
    22ec:	88 23       	and	r24, r24
    22ee:	a1 f3       	breq	.-24     	; 0x22d8 <String::concat(char const*, unsigned int)+0x1a>
    22f0:	28 81       	ld	r18, Y
    22f2:	39 81       	ldd	r19, Y+1	; 0x01
    22f4:	8c 81       	ldd	r24, Y+4	; 0x04
    22f6:	9d 81       	ldd	r25, Y+5	; 0x05
    22f8:	b7 01       	movw	r22, r14
    22fa:	82 0f       	add	r24, r18
    22fc:	93 1f       	adc	r25, r19
    22fe:	0e 94 75 1d 	call	0x3aea	; 0x3aea <strcpy>
    2302:	1d 83       	std	Y+5, r17	; 0x05
    2304:	0c 83       	std	Y+4, r16	; 0x04
    2306:	81 e0       	ldi	r24, 0x01	; 1
    2308:	df 91       	pop	r29
    230a:	cf 91       	pop	r28
    230c:	1f 91       	pop	r17
    230e:	0f 91       	pop	r16
    2310:	ff 90       	pop	r15
    2312:	ef 90       	pop	r14
    2314:	08 95       	ret

00002316 <String::concat(String const&)>:
    2316:	fb 01       	movw	r30, r22
    2318:	44 81       	ldd	r20, Z+4	; 0x04
    231a:	55 81       	ldd	r21, Z+5	; 0x05
    231c:	60 81       	ld	r22, Z
    231e:	71 81       	ldd	r23, Z+1	; 0x01
    2320:	0c 94 5f 11 	jmp	0x22be	; 0x22be <String::concat(char const*, unsigned int)>

00002324 <String::concat(char const*)>:
    2324:	61 15       	cp	r22, r1
    2326:	71 05       	cpc	r23, r1
    2328:	59 f0       	breq	.+22     	; 0x2340 <String::concat(char const*)+0x1c>
    232a:	fb 01       	movw	r30, r22
    232c:	01 90       	ld	r0, Z+
    232e:	00 20       	and	r0, r0
    2330:	e9 f7       	brne	.-6      	; 0x232c <String::concat(char const*)+0x8>
    2332:	af 01       	movw	r20, r30
    2334:	41 50       	subi	r20, 0x01	; 1
    2336:	51 09       	sbc	r21, r1
    2338:	46 1b       	sub	r20, r22
    233a:	57 0b       	sbc	r21, r23
    233c:	0c 94 5f 11 	jmp	0x22be	; 0x22be <String::concat(char const*, unsigned int)>
    2340:	80 e0       	ldi	r24, 0x00	; 0
    2342:	08 95       	ret

00002344 <initVariant>:
    2344:	08 95       	ret

00002346 <main>:
    2346:	0e 94 5d 08 	call	0x10ba	; 0x10ba <init>
    234a:	0e 94 a2 11 	call	0x2344	; 0x2344 <initVariant>
    234e:	8f ef       	ldi	r24, 0xFF	; 255
    2350:	93 e0       	ldi	r25, 0x03	; 3
    2352:	0e 94 9d 10 	call	0x213a	; 0x213a <USBDevice_::attach()>
    2356:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <setup>
    235a:	cc e6       	ldi	r28, 0x6C	; 108
    235c:	da e0       	ldi	r29, 0x0A	; 10
    235e:	0e 94 26 07 	call	0xe4c	; 0xe4c <loop>
    2362:	20 97       	sbiw	r28, 0x00	; 0
    2364:	e1 f3       	breq	.-8      	; 0x235e <main+0x18>
    2366:	0e 94 6c 0a 	call	0x14d8	; 0x14d8 <serialEventRun()>
    236a:	f9 cf       	rjmp	.-14     	; 0x235e <main+0x18>

0000236c <BridgeClass::crcUpdate(unsigned char)>:
    236c:	fc 01       	movw	r30, r24
    236e:	23 81       	ldd	r18, Z+3	; 0x03
    2370:	34 81       	ldd	r19, Z+4	; 0x04
    2372:	26 27       	eor	r18, r22
    2374:	02 2e       	mov	r0, r18
    2376:	22 95       	swap	r18
    2378:	20 7f       	andi	r18, 0xF0	; 240
    237a:	20 25       	eor	r18, r0
    237c:	03 2e       	mov	r0, r19
    237e:	32 2f       	mov	r19, r18
    2380:	22 95       	swap	r18
    2382:	2f 70       	andi	r18, 0x0F	; 15
    2384:	02 26       	eor	r0, r18
    2386:	26 95       	lsr	r18
    2388:	32 27       	eor	r19, r18
    238a:	23 27       	eor	r18, r19
    238c:	22 0f       	add	r18, r18
    238e:	22 0f       	add	r18, r18
    2390:	22 0f       	add	r18, r18
    2392:	20 25       	eor	r18, r0
    2394:	fc 01       	movw	r30, r24
    2396:	34 83       	std	Z+4, r19	; 0x04
    2398:	23 83       	std	Z+3, r18	; 0x03
    239a:	08 95       	ret

0000239c <BridgeClass::crcWrite()>:
    239c:	cf 93       	push	r28
    239e:	df 93       	push	r29
    23a0:	ec 01       	movw	r28, r24
    23a2:	8d 81       	ldd	r24, Y+5	; 0x05
    23a4:	9e 81       	ldd	r25, Y+6	; 0x06
    23a6:	dc 01       	movw	r26, r24
    23a8:	ed 91       	ld	r30, X+
    23aa:	fc 91       	ld	r31, X
    23ac:	6c 81       	ldd	r22, Y+4	; 0x04
    23ae:	01 90       	ld	r0, Z+
    23b0:	f0 81       	ld	r31, Z
    23b2:	e0 2d       	mov	r30, r0
    23b4:	09 95       	icall
    23b6:	8d 81       	ldd	r24, Y+5	; 0x05
    23b8:	9e 81       	ldd	r25, Y+6	; 0x06
    23ba:	dc 01       	movw	r26, r24
    23bc:	ed 91       	ld	r30, X+
    23be:	fc 91       	ld	r31, X
    23c0:	01 90       	ld	r0, Z+
    23c2:	f0 81       	ld	r31, Z
    23c4:	e0 2d       	mov	r30, r0
    23c6:	6b 81       	ldd	r22, Y+3	; 0x03
    23c8:	df 91       	pop	r29
    23ca:	cf 91       	pop	r28
    23cc:	09 94       	ijmp

000023ce <BridgeClass::timedRead(unsigned int)>:
    23ce:	8f 92       	push	r8
    23d0:	9f 92       	push	r9
    23d2:	af 92       	push	r10
    23d4:	bf 92       	push	r11
    23d6:	cf 92       	push	r12
    23d8:	df 92       	push	r13
    23da:	ef 92       	push	r14
    23dc:	ff 92       	push	r15
    23de:	cf 93       	push	r28
    23e0:	df 93       	push	r29
    23e2:	ec 01       	movw	r28, r24
    23e4:	6b 01       	movw	r12, r22
    23e6:	0e 94 06 08 	call	0x100c	; 0x100c <millis>
    23ea:	4b 01       	movw	r8, r22
    23ec:	5c 01       	movw	r10, r24
    23ee:	e1 2c       	mov	r14, r1
    23f0:	f1 2c       	mov	r15, r1
    23f2:	8d 81       	ldd	r24, Y+5	; 0x05
    23f4:	9e 81       	ldd	r25, Y+6	; 0x06
    23f6:	dc 01       	movw	r26, r24
    23f8:	ed 91       	ld	r30, X+
    23fa:	fc 91       	ld	r31, X
    23fc:	06 80       	ldd	r0, Z+6	; 0x06
    23fe:	f7 81       	ldd	r31, Z+7	; 0x07
    2400:	e0 2d       	mov	r30, r0
    2402:	09 95       	icall
    2404:	97 ff       	sbrs	r25, 7
    2406:	0d c0       	rjmp	.+26     	; 0x2422 <BridgeClass::timedRead(unsigned int)+0x54>
    2408:	0e 94 06 08 	call	0x100c	; 0x100c <millis>
    240c:	68 19       	sub	r22, r8
    240e:	79 09       	sbc	r23, r9
    2410:	8a 09       	sbc	r24, r10
    2412:	9b 09       	sbc	r25, r11
    2414:	6c 15       	cp	r22, r12
    2416:	7d 05       	cpc	r23, r13
    2418:	8e 05       	cpc	r24, r14
    241a:	9f 05       	cpc	r25, r15
    241c:	50 f3       	brcs	.-44     	; 0x23f2 <BridgeClass::timedRead(unsigned int)+0x24>
    241e:	8f ef       	ldi	r24, 0xFF	; 255
    2420:	9f ef       	ldi	r25, 0xFF	; 255
    2422:	df 91       	pop	r29
    2424:	cf 91       	pop	r28
    2426:	ff 90       	pop	r15
    2428:	ef 90       	pop	r14
    242a:	df 90       	pop	r13
    242c:	cf 90       	pop	r12
    242e:	bf 90       	pop	r11
    2430:	af 90       	pop	r10
    2432:	9f 90       	pop	r9
    2434:	8f 90       	pop	r8
    2436:	08 95       	ret

00002438 <BridgeClass::dropAll()>:
    2438:	cf 93       	push	r28
    243a:	df 93       	push	r29
    243c:	ec 01       	movw	r28, r24
    243e:	8d 81       	ldd	r24, Y+5	; 0x05
    2440:	9e 81       	ldd	r25, Y+6	; 0x06
    2442:	dc 01       	movw	r26, r24
    2444:	ed 91       	ld	r30, X+
    2446:	fc 91       	ld	r31, X
    2448:	04 80       	ldd	r0, Z+4	; 0x04
    244a:	f5 81       	ldd	r31, Z+5	; 0x05
    244c:	e0 2d       	mov	r30, r0
    244e:	09 95       	icall
    2450:	18 16       	cp	r1, r24
    2452:	19 06       	cpc	r1, r25
    2454:	54 f4       	brge	.+20     	; 0x246a <BridgeClass::dropAll()+0x32>
    2456:	8d 81       	ldd	r24, Y+5	; 0x05
    2458:	9e 81       	ldd	r25, Y+6	; 0x06
    245a:	dc 01       	movw	r26, r24
    245c:	ed 91       	ld	r30, X+
    245e:	fc 91       	ld	r31, X
    2460:	06 80       	ldd	r0, Z+6	; 0x06
    2462:	f7 81       	ldd	r31, Z+7	; 0x07
    2464:	e0 2d       	mov	r30, r0
    2466:	09 95       	icall
    2468:	ea cf       	rjmp	.-44     	; 0x243e <BridgeClass::dropAll()+0x6>
    246a:	df 91       	pop	r29
    246c:	cf 91       	pop	r28
    246e:	08 95       	ret

00002470 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)>:
    2470:	2f 92       	push	r2
    2472:	3f 92       	push	r3
    2474:	4f 92       	push	r4
    2476:	5f 92       	push	r5
    2478:	6f 92       	push	r6
    247a:	7f 92       	push	r7
    247c:	8f 92       	push	r8
    247e:	9f 92       	push	r9
    2480:	af 92       	push	r10
    2482:	bf 92       	push	r11
    2484:	cf 92       	push	r12
    2486:	df 92       	push	r13
    2488:	ef 92       	push	r14
    248a:	ff 92       	push	r15
    248c:	0f 93       	push	r16
    248e:	1f 93       	push	r17
    2490:	cf 93       	push	r28
    2492:	df 93       	push	r29
    2494:	cd b7       	in	r28, 0x3d	; 61
    2496:	de b7       	in	r29, 0x3e	; 62
    2498:	2d 97       	sbiw	r28, 0x0d	; 13
    249a:	0f b6       	in	r0, 0x3f	; 63
    249c:	f8 94       	cli
    249e:	de bf       	out	0x3e, r29	; 62
    24a0:	0f be       	out	0x3f, r0	; 63
    24a2:	cd bf       	out	0x3d, r28	; 61
    24a4:	3c 01       	movw	r6, r24
    24a6:	1b 01       	movw	r2, r22
    24a8:	3c 83       	std	Y+4, r19	; 0x04
    24aa:	2b 83       	std	Y+3, r18	; 0x03
    24ac:	bf 82       	std	Y+7, r11	; 0x07
    24ae:	ae 82       	std	Y+6, r10	; 0x06
    24b0:	58 01       	movw	r10, r16
    24b2:	ac 0c       	add	r10, r12
    24b4:	bd 1c       	adc	r11, r13
    24b6:	a4 0e       	add	r10, r20
    24b8:	b5 1e       	adc	r11, r21
    24ba:	bd 82       	std	Y+5, r11	; 0x05
    24bc:	4b 2c       	mov	r4, r11
    24be:	51 2c       	mov	r5, r1
    24c0:	ca 01       	movw	r24, r20
    24c2:	86 0f       	add	r24, r22
    24c4:	97 1f       	adc	r25, r23
    24c6:	99 87       	std	Y+9, r25	; 0x09
    24c8:	88 87       	std	Y+8, r24	; 0x08
    24ca:	d9 01       	movw	r26, r18
    24cc:	a0 0f       	add	r26, r16
    24ce:	b1 1f       	adc	r27, r17
    24d0:	bb 87       	std	Y+11, r27	; 0x0b
    24d2:	aa 87       	std	Y+10, r26	; 0x0a
    24d4:	f6 01       	movw	r30, r12
    24d6:	ee 0d       	add	r30, r14
    24d8:	ff 1d       	adc	r31, r15
    24da:	fd 87       	std	Y+13, r31	; 0x0d
    24dc:	ec 87       	std	Y+12, r30	; 0x0c
    24de:	d3 01       	movw	r26, r6
    24e0:	18 96       	adiw	r26, 0x08	; 8
    24e2:	8c 91       	ld	r24, X
    24e4:	58 16       	cp	r5, r24
    24e6:	08 f0       	brcs	.+2      	; 0x24ea <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x7a>
    24e8:	26 c1       	rjmp	.+588    	; 0x2736 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x2c6>
    24ea:	ef ef       	ldi	r30, 0xFF	; 255
    24ec:	ff ef       	ldi	r31, 0xFF	; 255
    24ee:	d3 01       	movw	r26, r6
    24f0:	14 96       	adiw	r26, 0x04	; 4
    24f2:	fc 93       	st	X, r31
    24f4:	ee 93       	st	-X, r30
    24f6:	13 97       	sbiw	r26, 0x03	; 3
    24f8:	15 96       	adiw	r26, 0x05	; 5
    24fa:	8d 91       	ld	r24, X+
    24fc:	9c 91       	ld	r25, X
    24fe:	16 97       	sbiw	r26, 0x06	; 6
    2500:	dc 01       	movw	r26, r24
    2502:	ed 91       	ld	r30, X+
    2504:	fc 91       	ld	r31, X
    2506:	01 90       	ld	r0, Z+
    2508:	f0 81       	ld	r31, Z
    250a:	e0 2d       	mov	r30, r0
    250c:	6f ef       	ldi	r22, 0xFF	; 255
    250e:	09 95       	icall
    2510:	6f ef       	ldi	r22, 0xFF	; 255
    2512:	c3 01       	movw	r24, r6
    2514:	0e 94 b6 11 	call	0x236c	; 0x236c <BridgeClass::crcUpdate(unsigned char)>
    2518:	f3 01       	movw	r30, r6
    251a:	85 81       	ldd	r24, Z+5	; 0x05
    251c:	96 81       	ldd	r25, Z+6	; 0x06
    251e:	dc 01       	movw	r26, r24
    2520:	ed 91       	ld	r30, X+
    2522:	fc 91       	ld	r31, X
    2524:	01 90       	ld	r0, Z+
    2526:	f0 81       	ld	r31, Z
    2528:	e0 2d       	mov	r30, r0
    252a:	d3 01       	movw	r26, r6
    252c:	6c 91       	ld	r22, X
    252e:	09 95       	icall
    2530:	f3 01       	movw	r30, r6
    2532:	60 81       	ld	r22, Z
    2534:	c3 01       	movw	r24, r6
    2536:	0e 94 b6 11 	call	0x236c	; 0x236c <BridgeClass::crcUpdate(unsigned char)>
    253a:	d3 01       	movw	r26, r6
    253c:	15 96       	adiw	r26, 0x05	; 5
    253e:	8d 91       	ld	r24, X+
    2540:	9c 91       	ld	r25, X
    2542:	16 97       	sbiw	r26, 0x06	; 6
    2544:	dc 01       	movw	r26, r24
    2546:	ed 91       	ld	r30, X+
    2548:	fc 91       	ld	r31, X
    254a:	01 90       	ld	r0, Z+
    254c:	f0 81       	ld	r31, Z
    254e:	e0 2d       	mov	r30, r0
    2550:	6d 81       	ldd	r22, Y+5	; 0x05
    2552:	09 95       	icall
    2554:	64 2d       	mov	r22, r4
    2556:	c3 01       	movw	r24, r6
    2558:	0e 94 b6 11 	call	0x236c	; 0x236c <BridgeClass::crcUpdate(unsigned char)>
    255c:	f3 01       	movw	r30, r6
    255e:	85 81       	ldd	r24, Z+5	; 0x05
    2560:	96 81       	ldd	r25, Z+6	; 0x06
    2562:	dc 01       	movw	r26, r24
    2564:	ed 91       	ld	r30, X+
    2566:	fc 91       	ld	r31, X
    2568:	01 90       	ld	r0, Z+
    256a:	f0 81       	ld	r31, Z
    256c:	e0 2d       	mov	r30, r0
    256e:	6a 2d       	mov	r22, r10
    2570:	09 95       	icall
    2572:	6a 2d       	mov	r22, r10
    2574:	c3 01       	movw	r24, r6
    2576:	0e 94 b6 11 	call	0x236c	; 0x236c <BridgeClass::crcUpdate(unsigned char)>
    257a:	61 01       	movw	r12, r2
    257c:	88 85       	ldd	r24, Y+8	; 0x08
    257e:	99 85       	ldd	r25, Y+9	; 0x09
    2580:	c8 16       	cp	r12, r24
    2582:	d9 06       	cpc	r13, r25
    2584:	a1 f0       	breq	.+40     	; 0x25ae <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x13e>
    2586:	f3 01       	movw	r30, r6
    2588:	85 81       	ldd	r24, Z+5	; 0x05
    258a:	96 81       	ldd	r25, Z+6	; 0x06
    258c:	86 01       	movw	r16, r12
    258e:	dc 01       	movw	r26, r24
    2590:	ed 91       	ld	r30, X+
    2592:	fc 91       	ld	r31, X
    2594:	01 90       	ld	r0, Z+
    2596:	f0 81       	ld	r31, Z
    2598:	e0 2d       	mov	r30, r0
    259a:	d6 01       	movw	r26, r12
    259c:	6d 91       	ld	r22, X+
    259e:	6d 01       	movw	r12, r26
    25a0:	09 95       	icall
    25a2:	f8 01       	movw	r30, r16
    25a4:	60 81       	ld	r22, Z
    25a6:	c3 01       	movw	r24, r6
    25a8:	0e 94 b6 11 	call	0x236c	; 0x236c <BridgeClass::crcUpdate(unsigned char)>
    25ac:	e7 cf       	rjmp	.-50     	; 0x257c <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x10c>
    25ae:	cb 80       	ldd	r12, Y+3	; 0x03
    25b0:	dc 80       	ldd	r13, Y+4	; 0x04
    25b2:	8a 85       	ldd	r24, Y+10	; 0x0a
    25b4:	9b 85       	ldd	r25, Y+11	; 0x0b
    25b6:	c8 16       	cp	r12, r24
    25b8:	d9 06       	cpc	r13, r25
    25ba:	b1 f0       	breq	.+44     	; 0x25e8 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x178>
    25bc:	d3 01       	movw	r26, r6
    25be:	15 96       	adiw	r26, 0x05	; 5
    25c0:	8d 91       	ld	r24, X+
    25c2:	9c 91       	ld	r25, X
    25c4:	16 97       	sbiw	r26, 0x06	; 6
    25c6:	86 01       	movw	r16, r12
    25c8:	dc 01       	movw	r26, r24
    25ca:	ed 91       	ld	r30, X+
    25cc:	fc 91       	ld	r31, X
    25ce:	01 90       	ld	r0, Z+
    25d0:	f0 81       	ld	r31, Z
    25d2:	e0 2d       	mov	r30, r0
    25d4:	d6 01       	movw	r26, r12
    25d6:	6d 91       	ld	r22, X+
    25d8:	6d 01       	movw	r12, r26
    25da:	09 95       	icall
    25dc:	f8 01       	movw	r30, r16
    25de:	60 81       	ld	r22, Z
    25e0:	c3 01       	movw	r24, r6
    25e2:	0e 94 b6 11 	call	0x236c	; 0x236c <BridgeClass::crcUpdate(unsigned char)>
    25e6:	e5 cf       	rjmp	.-54     	; 0x25b2 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x142>
    25e8:	87 01       	movw	r16, r14
    25ea:	8c 85       	ldd	r24, Y+12	; 0x0c
    25ec:	9d 85       	ldd	r25, Y+13	; 0x0d
    25ee:	08 17       	cp	r16, r24
    25f0:	19 07       	cpc	r17, r25
    25f2:	b1 f0       	breq	.+44     	; 0x2620 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x1b0>
    25f4:	d3 01       	movw	r26, r6
    25f6:	15 96       	adiw	r26, 0x05	; 5
    25f8:	8d 91       	ld	r24, X+
    25fa:	9c 91       	ld	r25, X
    25fc:	16 97       	sbiw	r26, 0x06	; 6
    25fe:	68 01       	movw	r12, r16
    2600:	dc 01       	movw	r26, r24
    2602:	ed 91       	ld	r30, X+
    2604:	fc 91       	ld	r31, X
    2606:	01 90       	ld	r0, Z+
    2608:	f0 81       	ld	r31, Z
    260a:	e0 2d       	mov	r30, r0
    260c:	d8 01       	movw	r26, r16
    260e:	6d 91       	ld	r22, X+
    2610:	8d 01       	movw	r16, r26
    2612:	09 95       	icall
    2614:	f6 01       	movw	r30, r12
    2616:	60 81       	ld	r22, Z
    2618:	c3 01       	movw	r24, r6
    261a:	0e 94 b6 11 	call	0x236c	; 0x236c <BridgeClass::crcUpdate(unsigned char)>
    261e:	e5 cf       	rjmp	.-54     	; 0x25ea <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x17a>
    2620:	c3 01       	movw	r24, r6
    2622:	0e 94 ce 11 	call	0x239c	; 0x239c <BridgeClass::crcWrite()>
    2626:	64 e6       	ldi	r22, 0x64	; 100
    2628:	70 e0       	ldi	r23, 0x00	; 0
    262a:	c3 01       	movw	r24, r6
    262c:	0e 94 e7 11 	call	0x23ce	; 0x23ce <BridgeClass::timedRead(unsigned int)>
    2630:	8f 3f       	cpi	r24, 0xFF	; 255
    2632:	91 05       	cpc	r25, r1
    2634:	09 f0       	breq	.+2      	; 0x2638 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x1c8>
    2636:	74 c0       	rjmp	.+232    	; 0x2720 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x2b0>
    2638:	ef ef       	ldi	r30, 0xFF	; 255
    263a:	ff ef       	ldi	r31, 0xFF	; 255
    263c:	d3 01       	movw	r26, r6
    263e:	14 96       	adiw	r26, 0x04	; 4
    2640:	fc 93       	st	X, r31
    2642:	ee 93       	st	-X, r30
    2644:	13 97       	sbiw	r26, 0x03	; 3
    2646:	6f ef       	ldi	r22, 0xFF	; 255
    2648:	c3 01       	movw	r24, r6
    264a:	0e 94 b6 11 	call	0x236c	; 0x236c <BridgeClass::crcUpdate(unsigned char)>
    264e:	65 e0       	ldi	r22, 0x05	; 5
    2650:	70 e0       	ldi	r23, 0x00	; 0
    2652:	c3 01       	movw	r24, r6
    2654:	0e 94 e7 11 	call	0x23ce	; 0x23ce <BridgeClass::timedRead(unsigned int)>
    2658:	d3 01       	movw	r26, r6
    265a:	6c 91       	ld	r22, X
    265c:	26 2f       	mov	r18, r22
    265e:	30 e0       	ldi	r19, 0x00	; 0
    2660:	82 17       	cp	r24, r18
    2662:	93 07       	cpc	r25, r19
    2664:	09 f0       	breq	.+2      	; 0x2668 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x1f8>
    2666:	5c c0       	rjmp	.+184    	; 0x2720 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x2b0>
    2668:	c3 01       	movw	r24, r6
    266a:	0e 94 b6 11 	call	0x236c	; 0x236c <BridgeClass::crcUpdate(unsigned char)>
    266e:	6a e0       	ldi	r22, 0x0A	; 10
    2670:	70 e0       	ldi	r23, 0x00	; 0
    2672:	c3 01       	movw	r24, r6
    2674:	0e 94 e7 11 	call	0x23ce	; 0x23ce <BridgeClass::timedRead(unsigned int)>
    2678:	8c 01       	movw	r16, r24
    267a:	97 fd       	sbrc	r25, 7
    267c:	51 c0       	rjmp	.+162    	; 0x2720 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x2b0>
    267e:	68 2f       	mov	r22, r24
    2680:	c3 01       	movw	r24, r6
    2682:	0e 94 b6 11 	call	0x236c	; 0x236c <BridgeClass::crcUpdate(unsigned char)>
    2686:	6a e0       	ldi	r22, 0x0A	; 10
    2688:	70 e0       	ldi	r23, 0x00	; 0
    268a:	c3 01       	movw	r24, r6
    268c:	0e 94 e7 11 	call	0x23ce	; 0x23ce <BridgeClass::timedRead(unsigned int)>
    2690:	6c 01       	movw	r12, r24
    2692:	97 fd       	sbrc	r25, 7
    2694:	45 c0       	rjmp	.+138    	; 0x2720 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x2b0>
    2696:	68 2f       	mov	r22, r24
    2698:	c3 01       	movw	r24, r6
    269a:	0e 94 b6 11 	call	0x236c	; 0x236c <BridgeClass::crcUpdate(unsigned char)>
    269e:	0a 83       	std	Y+2, r16	; 0x02
    26a0:	19 82       	std	Y+1, r1	; 0x01
    26a2:	09 81       	ldd	r16, Y+1	; 0x01
    26a4:	1a 81       	ldd	r17, Y+2	; 0x02
    26a6:	0c 0d       	add	r16, r12
    26a8:	1d 1d       	adc	r17, r13
    26aa:	c1 2c       	mov	r12, r1
    26ac:	d1 2c       	mov	r13, r1
    26ae:	65 e0       	ldi	r22, 0x05	; 5
    26b0:	70 e0       	ldi	r23, 0x00	; 0
    26b2:	c3 01       	movw	r24, r6
    26b4:	c0 16       	cp	r12, r16
    26b6:	d1 06       	cpc	r13, r17
    26b8:	a1 f0       	breq	.+40     	; 0x26e2 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x272>
    26ba:	c8 14       	cp	r12, r8
    26bc:	d9 04       	cpc	r13, r9
    26be:	89 f0       	breq	.+34     	; 0x26e2 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x272>
    26c0:	0e 94 e7 11 	call	0x23ce	; 0x23ce <BridgeClass::timedRead(unsigned int)>
    26c4:	97 fd       	sbrc	r25, 7
    26c6:	09 c0       	rjmp	.+18     	; 0x26da <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x26a>
    26c8:	ee 81       	ldd	r30, Y+6	; 0x06
    26ca:	ff 81       	ldd	r31, Y+7	; 0x07
    26cc:	ec 0d       	add	r30, r12
    26ce:	fd 1d       	adc	r31, r13
    26d0:	80 83       	st	Z, r24
    26d2:	68 2f       	mov	r22, r24
    26d4:	c3 01       	movw	r24, r6
    26d6:	0e 94 b6 11 	call	0x236c	; 0x236c <BridgeClass::crcUpdate(unsigned char)>
    26da:	bf ef       	ldi	r27, 0xFF	; 255
    26dc:	cb 1a       	sub	r12, r27
    26de:	db 0a       	sbc	r13, r27
    26e0:	e6 cf       	rjmp	.-52     	; 0x26ae <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x23e>
    26e2:	0e 94 e7 11 	call	0x23ce	; 0x23ce <BridgeClass::timedRead(unsigned int)>
    26e6:	6c 01       	movw	r12, r24
    26e8:	97 fd       	sbrc	r25, 7
    26ea:	1a c0       	rjmp	.+52     	; 0x2720 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x2b0>
    26ec:	65 e0       	ldi	r22, 0x05	; 5
    26ee:	70 e0       	ldi	r23, 0x00	; 0
    26f0:	c3 01       	movw	r24, r6
    26f2:	0e 94 e7 11 	call	0x23ce	; 0x23ce <BridgeClass::timedRead(unsigned int)>
    26f6:	97 fd       	sbrc	r25, 7
    26f8:	13 c0       	rjmp	.+38     	; 0x2720 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x2b0>
    26fa:	dc 2c       	mov	r13, r12
    26fc:	cc 24       	eor	r12, r12
    26fe:	c8 0e       	add	r12, r24
    2700:	d9 1e       	adc	r13, r25
    2702:	f3 01       	movw	r30, r6
    2704:	83 81       	ldd	r24, Z+3	; 0x03
    2706:	94 81       	ldd	r25, Z+4	; 0x04
    2708:	8c 15       	cp	r24, r12
    270a:	9d 05       	cpc	r25, r13
    270c:	49 f4       	brne	.+18     	; 0x2720 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x2b0>
    270e:	80 81       	ld	r24, Z
    2710:	8f 5f       	subi	r24, 0xFF	; 255
    2712:	80 83       	st	Z, r24
    2714:	c8 01       	movw	r24, r16
    2716:	80 16       	cp	r8, r16
    2718:	91 06       	cpc	r9, r17
    271a:	78 f4       	brcc	.+30     	; 0x273a <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x2ca>
    271c:	c4 01       	movw	r24, r8
    271e:	0d c0       	rjmp	.+26     	; 0x273a <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x2ca>
    2720:	53 94       	inc	r5
    2722:	64 e6       	ldi	r22, 0x64	; 100
    2724:	70 e0       	ldi	r23, 0x00	; 0
    2726:	80 e0       	ldi	r24, 0x00	; 0
    2728:	90 e0       	ldi	r25, 0x00	; 0
    272a:	0e 94 35 08 	call	0x106a	; 0x106a <delay>
    272e:	c3 01       	movw	r24, r6
    2730:	0e 94 1c 12 	call	0x2438	; 0x2438 <BridgeClass::dropAll()>
    2734:	d4 ce       	rjmp	.-600    	; 0x24de <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)+0x6e>
    2736:	8f ef       	ldi	r24, 0xFF	; 255
    2738:	9f ef       	ldi	r25, 0xFF	; 255
    273a:	2d 96       	adiw	r28, 0x0d	; 13
    273c:	0f b6       	in	r0, 0x3f	; 63
    273e:	f8 94       	cli
    2740:	de bf       	out	0x3e, r29	; 62
    2742:	0f be       	out	0x3f, r0	; 63
    2744:	cd bf       	out	0x3d, r28	; 61
    2746:	df 91       	pop	r29
    2748:	cf 91       	pop	r28
    274a:	1f 91       	pop	r17
    274c:	0f 91       	pop	r16
    274e:	ff 90       	pop	r15
    2750:	ef 90       	pop	r14
    2752:	df 90       	pop	r13
    2754:	cf 90       	pop	r12
    2756:	bf 90       	pop	r11
    2758:	af 90       	pop	r10
    275a:	9f 90       	pop	r9
    275c:	8f 90       	pop	r8
    275e:	7f 90       	pop	r7
    2760:	6f 90       	pop	r6
    2762:	5f 90       	pop	r5
    2764:	4f 90       	pop	r4
    2766:	3f 90       	pop	r3
    2768:	2f 90       	pop	r2
    276a:	08 95       	ret

0000276c <BridgeClass::begin()>:
    276c:	3f 92       	push	r3
    276e:	4f 92       	push	r4
    2770:	5f 92       	push	r5
    2772:	6f 92       	push	r6
    2774:	7f 92       	push	r7
    2776:	8f 92       	push	r8
    2778:	9f 92       	push	r9
    277a:	af 92       	push	r10
    277c:	bf 92       	push	r11
    277e:	cf 92       	push	r12
    2780:	df 92       	push	r13
    2782:	ef 92       	push	r14
    2784:	ff 92       	push	r15
    2786:	0f 93       	push	r16
    2788:	1f 93       	push	r17
    278a:	cf 93       	push	r28
    278c:	df 93       	push	r29
    278e:	cd b7       	in	r28, 0x3d	; 61
    2790:	de b7       	in	r29, 0x3e	; 62
    2792:	2e 97       	sbiw	r28, 0x0e	; 14
    2794:	0f b6       	in	r0, 0x3f	; 63
    2796:	f8 94       	cli
    2798:	de bf       	out	0x3e, r29	; 62
    279a:	0f be       	out	0x3f, r0	; 63
    279c:	cd bf       	out	0x3d, r28	; 61
    279e:	3c 01       	movw	r6, r24
    27a0:	dc 01       	movw	r26, r24
    27a2:	17 96       	adiw	r26, 0x07	; 7
    27a4:	8c 91       	ld	r24, X
    27a6:	17 97       	sbiw	r26, 0x07	; 7
    27a8:	81 11       	cpse	r24, r1
    27aa:	cf c0       	rjmp	.+414    	; 0x294a <BridgeClass::begin()+0x1de>
    27ac:	81 e0       	ldi	r24, 0x01	; 1
    27ae:	17 96       	adiw	r26, 0x07	; 7
    27b0:	8c 93       	st	X, r24
    27b2:	c3 01       	movw	r24, r6
    27b4:	0e 94 1c 12 	call	0x2438	; 0x2438 <BridgeClass::dropAll()>
    27b8:	68 ee       	ldi	r22, 0xE8	; 232
    27ba:	73 e0       	ldi	r23, 0x03	; 3
    27bc:	80 e0       	ldi	r24, 0x00	; 0
    27be:	90 e0       	ldi	r25, 0x00	; 0
    27c0:	0e 94 35 08 	call	0x106a	; 0x106a <delay>
    27c4:	f3 01       	movw	r30, r6
    27c6:	85 81       	ldd	r24, Z+5	; 0x05
    27c8:	96 81       	ldd	r25, Z+6	; 0x06
    27ca:	dc 01       	movw	r26, r24
    27cc:	ed 91       	ld	r30, X+
    27ce:	fc 91       	ld	r31, X
    27d0:	04 80       	ldd	r0, Z+4	; 0x04
    27d2:	f5 81       	ldd	r31, Z+5	; 0x05
    27d4:	e0 2d       	mov	r30, r0
    27d6:	09 95       	icall
    27d8:	18 16       	cp	r1, r24
    27da:	19 06       	cpc	r1, r25
    27dc:	54 f3       	brlt	.-44     	; 0x27b2 <BridgeClass::begin()+0x46>
    27de:	55 e0       	ldi	r21, 0x05	; 5
    27e0:	55 2e       	mov	r5, r21
    27e2:	44 24       	eor	r4, r4
    27e4:	43 94       	inc	r4
    27e6:	62 e3       	ldi	r22, 0x32	; 50
    27e8:	36 2e       	mov	r3, r22
    27ea:	e0 e1       	ldi	r30, 0x10	; 16
    27ec:	f1 e0       	ldi	r31, 0x01	; 1
    27ee:	de 01       	movw	r26, r28
    27f0:	16 96       	adiw	r26, 0x06	; 6
    27f2:	85 2d       	mov	r24, r5
    27f4:	01 90       	ld	r0, Z+
    27f6:	0d 92       	st	X+, r0
    27f8:	8a 95       	dec	r24
    27fa:	e1 f7       	brne	.-8      	; 0x27f4 <BridgeClass::begin()+0x88>
    27fc:	f3 01       	movw	r30, r6
    27fe:	40 86       	std	Z+8, r4	; 0x08
    2800:	81 2c       	mov	r8, r1
    2802:	91 2c       	mov	r9, r1
    2804:	a1 2c       	mov	r10, r1
    2806:	b1 2c       	mov	r11, r1
    2808:	c1 2c       	mov	r12, r1
    280a:	d1 2c       	mov	r13, r1
    280c:	e1 2c       	mov	r14, r1
    280e:	f1 2c       	mov	r15, r1
    2810:	00 e0       	ldi	r16, 0x00	; 0
    2812:	10 e0       	ldi	r17, 0x00	; 0
    2814:	20 e0       	ldi	r18, 0x00	; 0
    2816:	30 e0       	ldi	r19, 0x00	; 0
    2818:	45 e0       	ldi	r20, 0x05	; 5
    281a:	50 e0       	ldi	r21, 0x00	; 0
    281c:	be 01       	movw	r22, r28
    281e:	6a 5f       	subi	r22, 0xFA	; 250
    2820:	7f 4f       	sbci	r23, 0xFF	; 255
    2822:	c3 01       	movw	r24, r6
    2824:	0e 94 38 12 	call	0x2470	; 0x2470 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)>
    2828:	63 e0       	ldi	r22, 0x03	; 3
    282a:	d3 01       	movw	r26, r6
    282c:	15 96       	adiw	r26, 0x05	; 5
    282e:	8d 91       	ld	r24, X+
    2830:	9c 91       	ld	r25, X
    2832:	16 97       	sbiw	r26, 0x06	; 6
    2834:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <Print::print(char)>
    2838:	6a ef       	ldi	r22, 0xFA	; 250
    283a:	70 e0       	ldi	r23, 0x00	; 0
    283c:	80 e0       	ldi	r24, 0x00	; 0
    283e:	90 e0       	ldi	r25, 0x00	; 0
    2840:	0e 94 35 08 	call	0x106a	; 0x106a <delay>
    2844:	61 e4       	ldi	r22, 0x41	; 65
    2846:	72 e0       	ldi	r23, 0x02	; 2
    2848:	f3 01       	movw	r30, r6
    284a:	85 81       	ldd	r24, Z+5	; 0x05
    284c:	96 81       	ldd	r25, Z+6	; 0x06
    284e:	0e 94 c2 0b 	call	0x1784	; 0x1784 <Print::print(__FlashStringHelper const*)>
    2852:	6a ef       	ldi	r22, 0xFA	; 250
    2854:	70 e0       	ldi	r23, 0x00	; 0
    2856:	80 e0       	ldi	r24, 0x00	; 0
    2858:	90 e0       	ldi	r25, 0x00	; 0
    285a:	0e 94 35 08 	call	0x106a	; 0x106a <delay>
    285e:	6f e3       	ldi	r22, 0x3F	; 63
    2860:	72 e0       	ldi	r23, 0x02	; 2
    2862:	d3 01       	movw	r26, r6
    2864:	15 96       	adiw	r26, 0x05	; 5
    2866:	8d 91       	ld	r24, X+
    2868:	9c 91       	ld	r25, X
    286a:	16 97       	sbiw	r26, 0x06	; 6
    286c:	0e 94 c2 0b 	call	0x1784	; 0x1784 <Print::print(__FlashStringHelper const*)>
    2870:	64 ef       	ldi	r22, 0xF4	; 244
    2872:	71 e0       	ldi	r23, 0x01	; 1
    2874:	80 e0       	ldi	r24, 0x00	; 0
    2876:	90 e0       	ldi	r25, 0x00	; 0
    2878:	0e 94 35 08 	call	0x106a	; 0x106a <delay>
    287c:	63 e3       	ldi	r22, 0x33	; 51
    287e:	72 e0       	ldi	r23, 0x02	; 2
    2880:	f3 01       	movw	r30, r6
    2882:	85 81       	ldd	r24, Z+5	; 0x05
    2884:	96 81       	ldd	r25, Z+6	; 0x06
    2886:	0e 94 c2 0b 	call	0x1784	; 0x1784 <Print::print(__FlashStringHelper const*)>
    288a:	64 ef       	ldi	r22, 0xF4	; 244
    288c:	71 e0       	ldi	r23, 0x01	; 1
    288e:	80 e0       	ldi	r24, 0x00	; 0
    2890:	90 e0       	ldi	r25, 0x00	; 0
    2892:	0e 94 35 08 	call	0x106a	; 0x106a <delay>
    2896:	c3 01       	movw	r24, r6
    2898:	0e 94 1c 12 	call	0x2438	; 0x2438 <BridgeClass::dropAll()>
    289c:	e5 e1       	ldi	r30, 0x15	; 21
    289e:	f1 e0       	ldi	r31, 0x01	; 1
    28a0:	de 01       	movw	r26, r28
    28a2:	11 96       	adiw	r26, 0x01	; 1
    28a4:	85 2d       	mov	r24, r5
    28a6:	01 90       	ld	r0, Z+
    28a8:	0d 92       	st	X+, r0
    28aa:	8a 95       	dec	r24
    28ac:	e1 f7       	brne	.-8      	; 0x28a6 <BridgeClass::begin()+0x13a>
    28ae:	d3 01       	movw	r26, r6
    28b0:	18 96       	adiw	r26, 0x08	; 8
    28b2:	3c 92       	st	X, r3
    28b4:	44 e0       	ldi	r20, 0x04	; 4
    28b6:	84 2e       	mov	r8, r20
    28b8:	91 2c       	mov	r9, r1
    28ba:	fe 01       	movw	r30, r28
    28bc:	3b 96       	adiw	r30, 0x0b	; 11
    28be:	5f 01       	movw	r10, r30
    28c0:	20 e0       	ldi	r18, 0x00	; 0
    28c2:	30 e0       	ldi	r19, 0x00	; 0
    28c4:	45 e0       	ldi	r20, 0x05	; 5
    28c6:	50 e0       	ldi	r21, 0x00	; 0
    28c8:	be 01       	movw	r22, r28
    28ca:	6f 5f       	subi	r22, 0xFF	; 255
    28cc:	7f 4f       	sbci	r23, 0xFF	; 255
    28ce:	c3 01       	movw	r24, r6
    28d0:	0e 94 38 12 	call	0x2470	; 0x2470 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)>
    28d4:	8f 3f       	cpi	r24, 0xFF	; 255
    28d6:	ff ef       	ldi	r31, 0xFF	; 255
    28d8:	9f 07       	cpc	r25, r31
    28da:	39 f4       	brne	.+14     	; 0x28ea <BridgeClass::begin()+0x17e>
    28dc:	68 ee       	ldi	r22, 0xE8	; 232
    28de:	73 e0       	ldi	r23, 0x03	; 3
    28e0:	80 e0       	ldi	r24, 0x00	; 0
    28e2:	90 e0       	ldi	r25, 0x00	; 0
    28e4:	0e 94 35 08 	call	0x106a	; 0x106a <delay>
    28e8:	80 cf       	rjmp	.-256    	; 0x27ea <BridgeClass::begin()+0x7e>
    28ea:	2b 85       	ldd	r18, Y+11	; 0x0b
    28ec:	21 11       	cpse	r18, r1
    28ee:	ff cf       	rjmp	.-2      	; 0x28ee <BridgeClass::begin()+0x182>
    28f0:	04 97       	sbiw	r24, 0x04	; 4
    28f2:	11 f5       	brne	.+68     	; 0x2938 <BridgeClass::begin()+0x1cc>
    28f4:	2c 85       	ldd	r18, Y+12	; 0x0c
    28f6:	30 e0       	ldi	r19, 0x00	; 0
    28f8:	20 53       	subi	r18, 0x30	; 48
    28fa:	31 09       	sbc	r19, r1
    28fc:	44 e6       	ldi	r20, 0x64	; 100
    28fe:	42 9f       	mul	r20, r18
    2900:	c0 01       	movw	r24, r0
    2902:	43 9f       	mul	r20, r19
    2904:	90 0d       	add	r25, r0
    2906:	11 24       	eor	r1, r1
    2908:	2d 85       	ldd	r18, Y+13	; 0x0d
    290a:	30 e0       	ldi	r19, 0x00	; 0
    290c:	20 53       	subi	r18, 0x30	; 48
    290e:	31 09       	sbc	r19, r1
    2910:	6a e0       	ldi	r22, 0x0A	; 10
    2912:	62 9f       	mul	r22, r18
    2914:	a0 01       	movw	r20, r0
    2916:	63 9f       	mul	r22, r19
    2918:	50 0d       	add	r21, r0
    291a:	11 24       	eor	r1, r1
    291c:	84 0f       	add	r24, r20
    291e:	95 1f       	adc	r25, r21
    2920:	2e 85       	ldd	r18, Y+14	; 0x0e
    2922:	30 e0       	ldi	r19, 0x00	; 0
    2924:	20 53       	subi	r18, 0x30	; 48
    2926:	31 09       	sbc	r19, r1
    2928:	82 0f       	add	r24, r18
    292a:	93 1f       	adc	r25, r19
    292c:	d3 01       	movw	r26, r6
    292e:	12 96       	adiw	r26, 0x02	; 2
    2930:	9c 93       	st	X, r25
    2932:	8e 93       	st	-X, r24
    2934:	11 97       	sbiw	r26, 0x01	; 1
    2936:	05 c0       	rjmp	.+10     	; 0x2942 <BridgeClass::begin()+0x1d6>
    2938:	84 e6       	ldi	r24, 0x64	; 100
    293a:	90 e0       	ldi	r25, 0x00	; 0
    293c:	f3 01       	movw	r30, r6
    293e:	92 83       	std	Z+2, r25	; 0x02
    2940:	81 83       	std	Z+1, r24	; 0x01
    2942:	82 e3       	ldi	r24, 0x32	; 50
    2944:	d3 01       	movw	r26, r6
    2946:	18 96       	adiw	r26, 0x08	; 8
    2948:	8c 93       	st	X, r24
    294a:	2e 96       	adiw	r28, 0x0e	; 14
    294c:	0f b6       	in	r0, 0x3f	; 63
    294e:	f8 94       	cli
    2950:	de bf       	out	0x3e, r29	; 62
    2952:	0f be       	out	0x3f, r0	; 63
    2954:	cd bf       	out	0x3d, r28	; 61
    2956:	df 91       	pop	r29
    2958:	cf 91       	pop	r28
    295a:	1f 91       	pop	r17
    295c:	0f 91       	pop	r16
    295e:	ff 90       	pop	r15
    2960:	ef 90       	pop	r14
    2962:	df 90       	pop	r13
    2964:	cf 90       	pop	r12
    2966:	bf 90       	pop	r11
    2968:	af 90       	pop	r10
    296a:	9f 90       	pop	r9
    296c:	8f 90       	pop	r8
    296e:	7f 90       	pop	r7
    2970:	6f 90       	pop	r6
    2972:	5f 90       	pop	r5
    2974:	4f 90       	pop	r4
    2976:	3f 90       	pop	r3
    2978:	08 95       	ret

0000297a <_GLOBAL__sub_I__ZN11BridgeClassC2ER6Stream>:
    297a:	10 92 08 04 	sts	0x0408, r1
    297e:	84 e6       	ldi	r24, 0x64	; 100
    2980:	94 e0       	ldi	r25, 0x04	; 4
    2982:	90 93 0e 04 	sts	0x040E, r25
    2986:	80 93 0d 04 	sts	0x040D, r24
    298a:	10 92 0f 04 	sts	0x040F, r1
    298e:	10 92 10 04 	sts	0x0410, r1
    2992:	90 93 12 04 	sts	0x0412, r25
    2996:	80 93 11 04 	sts	0x0411, r24
    299a:	08 95       	ret

0000299c <Process::flush()>:
    299c:	08 95       	ret

0000299e <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char*, unsigned int)>:
    299e:	8f 92       	push	r8
    29a0:	9f 92       	push	r9
    29a2:	af 92       	push	r10
    29a4:	bf 92       	push	r11
    29a6:	cf 92       	push	r12
    29a8:	df 92       	push	r13
    29aa:	ef 92       	push	r14
    29ac:	ff 92       	push	r15
    29ae:	0f 93       	push	r16
    29b0:	1f 93       	push	r17
    29b2:	48 01       	movw	r8, r16
    29b4:	59 01       	movw	r10, r18
    29b6:	c1 2c       	mov	r12, r1
    29b8:	d1 2c       	mov	r13, r1
    29ba:	e1 2c       	mov	r14, r1
    29bc:	f1 2c       	mov	r15, r1
    29be:	00 e0       	ldi	r16, 0x00	; 0
    29c0:	10 e0       	ldi	r17, 0x00	; 0
    29c2:	20 e0       	ldi	r18, 0x00	; 0
    29c4:	30 e0       	ldi	r19, 0x00	; 0
    29c6:	0e 94 38 12 	call	0x2470	; 0x2470 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)>
    29ca:	1f 91       	pop	r17
    29cc:	0f 91       	pop	r16
    29ce:	ff 90       	pop	r15
    29d0:	ef 90       	pop	r14
    29d2:	df 90       	pop	r13
    29d4:	cf 90       	pop	r12
    29d6:	bf 90       	pop	r11
    29d8:	af 90       	pop	r10
    29da:	9f 90       	pop	r9
    29dc:	8f 90       	pop	r8
    29de:	08 95       	ret

000029e0 <Process::write(unsigned char)>:
    29e0:	0f 93       	push	r16
    29e2:	1f 93       	push	r17
    29e4:	cf 93       	push	r28
    29e6:	df 93       	push	r29
    29e8:	00 d0       	rcall	.+0      	; 0x29ea <Process::write(unsigned char)+0xa>
    29ea:	1f 92       	push	r1
    29ec:	cd b7       	in	r28, 0x3d	; 61
    29ee:	de b7       	in	r29, 0x3e	; 62
    29f0:	29 e4       	ldi	r18, 0x49	; 73
    29f2:	29 83       	std	Y+1, r18	; 0x01
    29f4:	fc 01       	movw	r30, r24
    29f6:	26 85       	ldd	r18, Z+14	; 0x0e
    29f8:	2a 83       	std	Y+2, r18	; 0x02
    29fa:	6b 83       	std	Y+3, r22	; 0x03
    29fc:	00 e0       	ldi	r16, 0x00	; 0
    29fe:	10 e0       	ldi	r17, 0x00	; 0
    2a00:	20 e0       	ldi	r18, 0x00	; 0
    2a02:	30 e0       	ldi	r19, 0x00	; 0
    2a04:	43 e0       	ldi	r20, 0x03	; 3
    2a06:	50 e0       	ldi	r21, 0x00	; 0
    2a08:	be 01       	movw	r22, r28
    2a0a:	6f 5f       	subi	r22, 0xFF	; 255
    2a0c:	7f 4f       	sbci	r23, 0xFF	; 255
    2a0e:	84 85       	ldd	r24, Z+12	; 0x0c
    2a10:	95 85       	ldd	r25, Z+13	; 0x0d
    2a12:	0e 94 cf 14 	call	0x299e	; 0x299e <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char*, unsigned int)>
    2a16:	81 e0       	ldi	r24, 0x01	; 1
    2a18:	90 e0       	ldi	r25, 0x00	; 0
    2a1a:	0f 90       	pop	r0
    2a1c:	0f 90       	pop	r0
    2a1e:	0f 90       	pop	r0
    2a20:	df 91       	pop	r29
    2a22:	cf 91       	pop	r28
    2a24:	1f 91       	pop	r17
    2a26:	0f 91       	pop	r16
    2a28:	08 95       	ret

00002a2a <Process::doBuffer()>:
    2a2a:	ef 92       	push	r14
    2a2c:	ff 92       	push	r15
    2a2e:	0f 93       	push	r16
    2a30:	1f 93       	push	r17
    2a32:	cf 93       	push	r28
    2a34:	df 93       	push	r29
    2a36:	00 d0       	rcall	.+0      	; 0x2a38 <Process::doBuffer()+0xe>
    2a38:	1f 92       	push	r1
    2a3a:	cd b7       	in	r28, 0x3d	; 61
    2a3c:	de b7       	in	r29, 0x3e	; 62
    2a3e:	7c 01       	movw	r14, r24
    2a40:	fc 01       	movw	r30, r24
    2a42:	83 89       	ldd	r24, Z+19	; 0x13
    2a44:	81 11       	cpse	r24, r1
    2a46:	17 c0       	rjmp	.+46     	; 0x2a76 <Process::doBuffer()+0x4c>
    2a48:	14 8a       	std	Z+20, r1	; 0x14
    2a4a:	8f e4       	ldi	r24, 0x4F	; 79
    2a4c:	89 83       	std	Y+1, r24	; 0x01
    2a4e:	86 85       	ldd	r24, Z+14	; 0x0e
    2a50:	8a 83       	std	Y+2, r24	; 0x02
    2a52:	80 e4       	ldi	r24, 0x40	; 64
    2a54:	8b 83       	std	Y+3, r24	; 0x03
    2a56:	97 01       	movw	r18, r14
    2a58:	2b 5e       	subi	r18, 0xEB	; 235
    2a5a:	3f 4f       	sbci	r19, 0xFF	; 255
    2a5c:	00 e4       	ldi	r16, 0x40	; 64
    2a5e:	10 e0       	ldi	r17, 0x00	; 0
    2a60:	43 e0       	ldi	r20, 0x03	; 3
    2a62:	50 e0       	ldi	r21, 0x00	; 0
    2a64:	be 01       	movw	r22, r28
    2a66:	6f 5f       	subi	r22, 0xFF	; 255
    2a68:	7f 4f       	sbci	r23, 0xFF	; 255
    2a6a:	84 85       	ldd	r24, Z+12	; 0x0c
    2a6c:	95 85       	ldd	r25, Z+13	; 0x0d
    2a6e:	0e 94 cf 14 	call	0x299e	; 0x299e <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char*, unsigned int)>
    2a72:	f7 01       	movw	r30, r14
    2a74:	83 8b       	std	Z+19, r24	; 0x13
    2a76:	0f 90       	pop	r0
    2a78:	0f 90       	pop	r0
    2a7a:	0f 90       	pop	r0
    2a7c:	df 91       	pop	r29
    2a7e:	cf 91       	pop	r28
    2a80:	1f 91       	pop	r17
    2a82:	0f 91       	pop	r16
    2a84:	ff 90       	pop	r15
    2a86:	ef 90       	pop	r14
    2a88:	08 95       	ret

00002a8a <Process::available()>:
    2a8a:	cf 93       	push	r28
    2a8c:	df 93       	push	r29
    2a8e:	ec 01       	movw	r28, r24
    2a90:	0e 94 15 15 	call	0x2a2a	; 0x2a2a <Process::doBuffer()>
    2a94:	8b 89       	ldd	r24, Y+19	; 0x13
    2a96:	90 e0       	ldi	r25, 0x00	; 0
    2a98:	df 91       	pop	r29
    2a9a:	cf 91       	pop	r28
    2a9c:	08 95       	ret

00002a9e <Process::read()>:
    2a9e:	cf 93       	push	r28
    2aa0:	df 93       	push	r29
    2aa2:	ec 01       	movw	r28, r24
    2aa4:	0e 94 15 15 	call	0x2a2a	; 0x2a2a <Process::doBuffer()>
    2aa8:	8b 89       	ldd	r24, Y+19	; 0x13
    2aaa:	88 23       	and	r24, r24
    2aac:	59 f0       	breq	.+22     	; 0x2ac4 <Process::read()+0x26>
    2aae:	81 50       	subi	r24, 0x01	; 1
    2ab0:	8b 8b       	std	Y+19, r24	; 0x13
    2ab2:	8c 89       	ldd	r24, Y+20	; 0x14
    2ab4:	91 e0       	ldi	r25, 0x01	; 1
    2ab6:	98 0f       	add	r25, r24
    2ab8:	9c 8b       	std	Y+20, r25	; 0x14
    2aba:	c8 0f       	add	r28, r24
    2abc:	d1 1d       	adc	r29, r1
    2abe:	8d 89       	ldd	r24, Y+21	; 0x15
    2ac0:	90 e0       	ldi	r25, 0x00	; 0
    2ac2:	02 c0       	rjmp	.+4      	; 0x2ac8 <Process::read()+0x2a>
    2ac4:	8f ef       	ldi	r24, 0xFF	; 255
    2ac6:	9f ef       	ldi	r25, 0xFF	; 255
    2ac8:	df 91       	pop	r29
    2aca:	cf 91       	pop	r28
    2acc:	08 95       	ret

00002ace <Process::peek()>:
    2ace:	cf 93       	push	r28
    2ad0:	df 93       	push	r29
    2ad2:	ec 01       	movw	r28, r24
    2ad4:	0e 94 15 15 	call	0x2a2a	; 0x2a2a <Process::doBuffer()>
    2ad8:	8b 89       	ldd	r24, Y+19	; 0x13
    2ada:	88 23       	and	r24, r24
    2adc:	31 f0       	breq	.+12     	; 0x2aea <Process::peek()+0x1c>
    2ade:	8c 89       	ldd	r24, Y+20	; 0x14
    2ae0:	c8 0f       	add	r28, r24
    2ae2:	d1 1d       	adc	r29, r1
    2ae4:	8d 89       	ldd	r24, Y+21	; 0x15
    2ae6:	90 e0       	ldi	r25, 0x00	; 0
    2ae8:	02 c0       	rjmp	.+4      	; 0x2aee <Process::peek()+0x20>
    2aea:	8f ef       	ldi	r24, 0xFF	; 255
    2aec:	9f ef       	ldi	r25, 0xFF	; 255
    2aee:	df 91       	pop	r29
    2af0:	cf 91       	pop	r28
    2af2:	08 95       	ret

00002af4 <Process::addParameter(String const&)>:
    2af4:	0f 93       	push	r16
    2af6:	1f 93       	push	r17
    2af8:	cf 93       	push	r28
    2afa:	df 93       	push	r29
    2afc:	ec 01       	movw	r28, r24
    2afe:	8b 01       	movw	r16, r22
    2b00:	66 ef       	ldi	r22, 0xF6	; 246
    2b02:	72 e0       	ldi	r23, 0x02	; 2
    2b04:	88 89       	ldd	r24, Y+16	; 0x10
    2b06:	99 89       	ldd	r25, Y+17	; 0x11
    2b08:	0e 94 92 11 	call	0x2324	; 0x2324 <String::concat(char const*)>
    2b0c:	b8 01       	movw	r22, r16
    2b0e:	88 89       	ldd	r24, Y+16	; 0x10
    2b10:	99 89       	ldd	r25, Y+17	; 0x11
    2b12:	df 91       	pop	r29
    2b14:	cf 91       	pop	r28
    2b16:	1f 91       	pop	r17
    2b18:	0f 91       	pop	r16
    2b1a:	0c 94 8b 11 	jmp	0x2316	; 0x2316 <String::concat(String const&)>

00002b1e <Process::runAsynchronously()>:
    2b1e:	6f 92       	push	r6
    2b20:	7f 92       	push	r7
    2b22:	8f 92       	push	r8
    2b24:	9f 92       	push	r9
    2b26:	af 92       	push	r10
    2b28:	bf 92       	push	r11
    2b2a:	cf 92       	push	r12
    2b2c:	df 92       	push	r13
    2b2e:	ef 92       	push	r14
    2b30:	ff 92       	push	r15
    2b32:	0f 93       	push	r16
    2b34:	1f 93       	push	r17
    2b36:	cf 93       	push	r28
    2b38:	df 93       	push	r29
    2b3a:	00 d0       	rcall	.+0      	; 0x2b3c <Process::runAsynchronously()+0x1e>
    2b3c:	1f 92       	push	r1
    2b3e:	cd b7       	in	r28, 0x3d	; 61
    2b40:	de b7       	in	r29, 0x3e	; 62
    2b42:	3c 01       	movw	r6, r24
    2b44:	82 e5       	ldi	r24, 0x52	; 82
    2b46:	8b 83       	std	Y+3, r24	; 0x03
    2b48:	d3 01       	movw	r26, r6
    2b4a:	50 96       	adiw	r26, 0x10	; 16
    2b4c:	ed 91       	ld	r30, X+
    2b4e:	fc 91       	ld	r31, X
    2b50:	51 97       	sbiw	r26, 0x11	; 17
    2b52:	04 81       	ldd	r16, Z+4	; 0x04
    2b54:	15 81       	ldd	r17, Z+5	; 0x05
    2b56:	20 81       	ld	r18, Z
    2b58:	31 81       	ldd	r19, Z+1	; 0x01
    2b5a:	82 e0       	ldi	r24, 0x02	; 2
    2b5c:	88 2e       	mov	r8, r24
    2b5e:	91 2c       	mov	r9, r1
    2b60:	fe 01       	movw	r30, r28
    2b62:	31 96       	adiw	r30, 0x01	; 1
    2b64:	5f 01       	movw	r10, r30
    2b66:	c1 2c       	mov	r12, r1
    2b68:	d1 2c       	mov	r13, r1
    2b6a:	e1 2c       	mov	r14, r1
    2b6c:	f1 2c       	mov	r15, r1
    2b6e:	41 e0       	ldi	r20, 0x01	; 1
    2b70:	50 e0       	ldi	r21, 0x00	; 0
    2b72:	be 01       	movw	r22, r28
    2b74:	6d 5f       	subi	r22, 0xFD	; 253
    2b76:	7f 4f       	sbci	r23, 0xFF	; 255
    2b78:	1c 96       	adiw	r26, 0x0c	; 12
    2b7a:	8d 91       	ld	r24, X+
    2b7c:	9c 91       	ld	r25, X
    2b7e:	1d 97       	sbiw	r26, 0x0d	; 13
    2b80:	0e 94 38 12 	call	0x2470	; 0x2470 <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char const*, unsigned int, unsigned char*, unsigned int)>
    2b84:	8a 81       	ldd	r24, Y+2	; 0x02
    2b86:	90 e0       	ldi	r25, 0x00	; 0
    2b88:	d3 01       	movw	r26, r6
    2b8a:	1f 96       	adiw	r26, 0x0f	; 15
    2b8c:	9c 93       	st	X, r25
    2b8e:	8e 93       	st	-X, r24
    2b90:	1e 97       	sbiw	r26, 0x0e	; 14
    2b92:	50 96       	adiw	r26, 0x10	; 16
    2b94:	0d 91       	ld	r16, X+
    2b96:	1c 91       	ld	r17, X
    2b98:	51 97       	sbiw	r26, 0x11	; 17
    2b9a:	01 15       	cp	r16, r1
    2b9c:	11 05       	cpc	r17, r1
    2b9e:	31 f0       	breq	.+12     	; 0x2bac <Process::runAsynchronously()+0x8e>
    2ba0:	c8 01       	movw	r24, r16
    2ba2:	0e 94 bb 10 	call	0x2176	; 0x2176 <String::~String()>
    2ba6:	c8 01       	movw	r24, r16
    2ba8:	0e 94 76 1b 	call	0x36ec	; 0x36ec <operator delete(void*)>
    2bac:	f3 01       	movw	r30, r6
    2bae:	11 8a       	std	Z+17, r1	; 0x11
    2bb0:	10 8a       	std	Z+16, r1	; 0x10
    2bb2:	89 81       	ldd	r24, Y+1	; 0x01
    2bb4:	81 11       	cpse	r24, r1
    2bb6:	02 c0       	rjmp	.+4      	; 0x2bbc <Process::runAsynchronously()+0x9e>
    2bb8:	81 e0       	ldi	r24, 0x01	; 1
    2bba:	82 8b       	std	Z+18, r24	; 0x12
    2bbc:	0f 90       	pop	r0
    2bbe:	0f 90       	pop	r0
    2bc0:	0f 90       	pop	r0
    2bc2:	df 91       	pop	r29
    2bc4:	cf 91       	pop	r28
    2bc6:	1f 91       	pop	r17
    2bc8:	0f 91       	pop	r16
    2bca:	ff 90       	pop	r15
    2bcc:	ef 90       	pop	r14
    2bce:	df 90       	pop	r13
    2bd0:	cf 90       	pop	r12
    2bd2:	bf 90       	pop	r11
    2bd4:	af 90       	pop	r10
    2bd6:	9f 90       	pop	r9
    2bd8:	8f 90       	pop	r8
    2bda:	7f 90       	pop	r7
    2bdc:	6f 90       	pop	r6
    2bde:	08 95       	ret

00002be0 <Process::running()>:
    2be0:	0f 93       	push	r16
    2be2:	1f 93       	push	r17
    2be4:	cf 93       	push	r28
    2be6:	df 93       	push	r29
    2be8:	00 d0       	rcall	.+0      	; 0x2bea <Process::running()+0xa>
    2bea:	1f 92       	push	r1
    2bec:	cd b7       	in	r28, 0x3d	; 61
    2bee:	de b7       	in	r29, 0x3e	; 62
    2bf0:	22 e7       	ldi	r18, 0x72	; 114
    2bf2:	29 83       	std	Y+1, r18	; 0x01
    2bf4:	fc 01       	movw	r30, r24
    2bf6:	26 85       	ldd	r18, Z+14	; 0x0e
    2bf8:	2a 83       	std	Y+2, r18	; 0x02
    2bfa:	01 e0       	ldi	r16, 0x01	; 1
    2bfc:	10 e0       	ldi	r17, 0x00	; 0
    2bfe:	9e 01       	movw	r18, r28
    2c00:	2d 5f       	subi	r18, 0xFD	; 253
    2c02:	3f 4f       	sbci	r19, 0xFF	; 255
    2c04:	42 e0       	ldi	r20, 0x02	; 2
    2c06:	50 e0       	ldi	r21, 0x00	; 0
    2c08:	be 01       	movw	r22, r28
    2c0a:	6f 5f       	subi	r22, 0xFF	; 255
    2c0c:	7f 4f       	sbci	r23, 0xFF	; 255
    2c0e:	84 85       	ldd	r24, Z+12	; 0x0c
    2c10:	95 85       	ldd	r25, Z+13	; 0x0d
    2c12:	0e 94 cf 14 	call	0x299e	; 0x299e <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char*, unsigned int)>
    2c16:	81 e0       	ldi	r24, 0x01	; 1
    2c18:	9b 81       	ldd	r25, Y+3	; 0x03
    2c1a:	91 30       	cpi	r25, 0x01	; 1
    2c1c:	09 f0       	breq	.+2      	; 0x2c20 <Process::running()+0x40>
    2c1e:	80 e0       	ldi	r24, 0x00	; 0
    2c20:	0f 90       	pop	r0
    2c22:	0f 90       	pop	r0
    2c24:	0f 90       	pop	r0
    2c26:	df 91       	pop	r29
    2c28:	cf 91       	pop	r28
    2c2a:	1f 91       	pop	r17
    2c2c:	0f 91       	pop	r16
    2c2e:	08 95       	ret

00002c30 <Process::exitValue()>:
    2c30:	0f 93       	push	r16
    2c32:	1f 93       	push	r17
    2c34:	cf 93       	push	r28
    2c36:	df 93       	push	r29
    2c38:	00 d0       	rcall	.+0      	; 0x2c3a <Process::exitValue()+0xa>
    2c3a:	00 d0       	rcall	.+0      	; 0x2c3c <Process::exitValue()+0xc>
    2c3c:	cd b7       	in	r28, 0x3d	; 61
    2c3e:	de b7       	in	r29, 0x3e	; 62
    2c40:	27 e5       	ldi	r18, 0x57	; 87
    2c42:	2b 83       	std	Y+3, r18	; 0x03
    2c44:	fc 01       	movw	r30, r24
    2c46:	26 85       	ldd	r18, Z+14	; 0x0e
    2c48:	2c 83       	std	Y+4, r18	; 0x04
    2c4a:	02 e0       	ldi	r16, 0x02	; 2
    2c4c:	10 e0       	ldi	r17, 0x00	; 0
    2c4e:	9e 01       	movw	r18, r28
    2c50:	2f 5f       	subi	r18, 0xFF	; 255
    2c52:	3f 4f       	sbci	r19, 0xFF	; 255
    2c54:	42 e0       	ldi	r20, 0x02	; 2
    2c56:	50 e0       	ldi	r21, 0x00	; 0
    2c58:	be 01       	movw	r22, r28
    2c5a:	6d 5f       	subi	r22, 0xFD	; 253
    2c5c:	7f 4f       	sbci	r23, 0xFF	; 255
    2c5e:	84 85       	ldd	r24, Z+12	; 0x0c
    2c60:	95 85       	ldd	r25, Z+13	; 0x0d
    2c62:	0e 94 cf 14 	call	0x299e	; 0x299e <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char*, unsigned int)>
    2c66:	89 81       	ldd	r24, Y+1	; 0x01
    2c68:	90 e0       	ldi	r25, 0x00	; 0
    2c6a:	98 2f       	mov	r25, r24
    2c6c:	88 27       	eor	r24, r24
    2c6e:	2a 81       	ldd	r18, Y+2	; 0x02
    2c70:	82 0f       	add	r24, r18
    2c72:	91 1d       	adc	r25, r1
    2c74:	0f 90       	pop	r0
    2c76:	0f 90       	pop	r0
    2c78:	0f 90       	pop	r0
    2c7a:	0f 90       	pop	r0
    2c7c:	df 91       	pop	r29
    2c7e:	cf 91       	pop	r28
    2c80:	1f 91       	pop	r17
    2c82:	0f 91       	pop	r16
    2c84:	08 95       	ret

00002c86 <Process::close()>:
    2c86:	ef 92       	push	r14
    2c88:	ff 92       	push	r15
    2c8a:	0f 93       	push	r16
    2c8c:	1f 93       	push	r17
    2c8e:	cf 93       	push	r28
    2c90:	df 93       	push	r29
    2c92:	00 d0       	rcall	.+0      	; 0x2c94 <Process::close()+0xe>
    2c94:	cd b7       	in	r28, 0x3d	; 61
    2c96:	de b7       	in	r29, 0x3e	; 62
    2c98:	7c 01       	movw	r14, r24
    2c9a:	fc 01       	movw	r30, r24
    2c9c:	82 89       	ldd	r24, Z+18	; 0x12
    2c9e:	88 23       	and	r24, r24
    2ca0:	89 f0       	breq	.+34     	; 0x2cc4 <Process::close()+0x3e>
    2ca2:	87 e7       	ldi	r24, 0x77	; 119
    2ca4:	89 83       	std	Y+1, r24	; 0x01
    2ca6:	86 85       	ldd	r24, Z+14	; 0x0e
    2ca8:	8a 83       	std	Y+2, r24	; 0x02
    2caa:	00 e0       	ldi	r16, 0x00	; 0
    2cac:	10 e0       	ldi	r17, 0x00	; 0
    2cae:	20 e0       	ldi	r18, 0x00	; 0
    2cb0:	30 e0       	ldi	r19, 0x00	; 0
    2cb2:	42 e0       	ldi	r20, 0x02	; 2
    2cb4:	50 e0       	ldi	r21, 0x00	; 0
    2cb6:	be 01       	movw	r22, r28
    2cb8:	6f 5f       	subi	r22, 0xFF	; 255
    2cba:	7f 4f       	sbci	r23, 0xFF	; 255
    2cbc:	84 85       	ldd	r24, Z+12	; 0x0c
    2cbe:	95 85       	ldd	r25, Z+13	; 0x0d
    2cc0:	0e 94 cf 14 	call	0x299e	; 0x299e <BridgeClass::transfer(unsigned char const*, unsigned int, unsigned char*, unsigned int)>
    2cc4:	f7 01       	movw	r30, r14
    2cc6:	12 8a       	std	Z+18, r1	; 0x12
    2cc8:	0f 90       	pop	r0
    2cca:	0f 90       	pop	r0
    2ccc:	df 91       	pop	r29
    2cce:	cf 91       	pop	r28
    2cd0:	1f 91       	pop	r17
    2cd2:	0f 91       	pop	r16
    2cd4:	ff 90       	pop	r15
    2cd6:	ef 90       	pop	r14
    2cd8:	08 95       	ret

00002cda <Process::~Process()>:
    2cda:	28 e0       	ldi	r18, 0x08	; 8
    2cdc:	33 e0       	ldi	r19, 0x03	; 3
    2cde:	fc 01       	movw	r30, r24
    2ce0:	31 83       	std	Z+1, r19	; 0x01
    2ce2:	20 83       	st	Z, r18
    2ce4:	0c 94 43 16 	jmp	0x2c86	; 0x2c86 <Process::close()>

00002ce8 <Process::begin(String const&)>:
    2ce8:	ef 92       	push	r14
    2cea:	ff 92       	push	r15
    2cec:	0f 93       	push	r16
    2cee:	1f 93       	push	r17
    2cf0:	cf 93       	push	r28
    2cf2:	df 93       	push	r29
    2cf4:	00 d0       	rcall	.+0      	; 0x2cf6 <Process::begin(String const&)+0xe>
    2cf6:	cd b7       	in	r28, 0x3d	; 61
    2cf8:	de b7       	in	r29, 0x3e	; 62
    2cfa:	7c 01       	movw	r14, r24
    2cfc:	69 83       	std	Y+1, r22	; 0x01
    2cfe:	7a 83       	std	Y+2, r23	; 0x02
    2d00:	0e 94 43 16 	call	0x2c86	; 0x2c86 <Process::close()>
    2d04:	86 e0       	ldi	r24, 0x06	; 6
    2d06:	90 e0       	ldi	r25, 0x00	; 0
    2d08:	0e 94 74 1b 	call	0x36e8	; 0x36e8 <operator new(unsigned int)>
    2d0c:	8c 01       	movw	r16, r24
    2d0e:	69 81       	ldd	r22, Y+1	; 0x01
    2d10:	7a 81       	ldd	r23, Y+2	; 0x02
    2d12:	0e 94 56 11 	call	0x22ac	; 0x22ac <String::String(String const&)>
    2d16:	f7 01       	movw	r30, r14
    2d18:	11 8b       	std	Z+17, r17	; 0x11
    2d1a:	00 8b       	std	Z+16, r16	; 0x10
    2d1c:	0f 90       	pop	r0
    2d1e:	0f 90       	pop	r0
    2d20:	df 91       	pop	r29
    2d22:	cf 91       	pop	r28
    2d24:	1f 91       	pop	r17
    2d26:	0f 91       	pop	r16
    2d28:	ff 90       	pop	r15
    2d2a:	ef 90       	pop	r14
    2d2c:	08 95       	ret

00002d2e <Process::runShellCommandAsynchronously(String const&)>:
    2d2e:	ef 92       	push	r14
    2d30:	ff 92       	push	r15
    2d32:	0f 93       	push	r16
    2d34:	1f 93       	push	r17
    2d36:	cf 93       	push	r28
    2d38:	df 93       	push	r29
    2d3a:	00 d0       	rcall	.+0      	; 0x2d3c <Process::runShellCommandAsynchronously(String const&)+0xe>
    2d3c:	00 d0       	rcall	.+0      	; 0x2d3e <Process::runShellCommandAsynchronously(String const&)+0x10>
    2d3e:	00 d0       	rcall	.+0      	; 0x2d40 <Process::runShellCommandAsynchronously(String const&)+0x12>
    2d40:	cd b7       	in	r28, 0x3d	; 61
    2d42:	de b7       	in	r29, 0x3e	; 62
    2d44:	8c 01       	movw	r16, r24
    2d46:	7b 01       	movw	r14, r22
    2d48:	68 ef       	ldi	r22, 0xF8	; 248
    2d4a:	72 e0       	ldi	r23, 0x02	; 2
    2d4c:	ce 01       	movw	r24, r28
    2d4e:	01 96       	adiw	r24, 0x01	; 1
    2d50:	0e 94 29 11 	call	0x2252	; 0x2252 <String::String(char const*)>
    2d54:	be 01       	movw	r22, r28
    2d56:	6f 5f       	subi	r22, 0xFF	; 255
    2d58:	7f 4f       	sbci	r23, 0xFF	; 255
    2d5a:	c8 01       	movw	r24, r16
    2d5c:	0e 94 74 16 	call	0x2ce8	; 0x2ce8 <Process::begin(String const&)>
    2d60:	ce 01       	movw	r24, r28
    2d62:	01 96       	adiw	r24, 0x01	; 1
    2d64:	0e 94 bb 10 	call	0x2176	; 0x2176 <String::~String()>
    2d68:	61 e0       	ldi	r22, 0x01	; 1
    2d6a:	73 e0       	ldi	r23, 0x03	; 3
    2d6c:	ce 01       	movw	r24, r28
    2d6e:	01 96       	adiw	r24, 0x01	; 1
    2d70:	0e 94 29 11 	call	0x2252	; 0x2252 <String::String(char const*)>
    2d74:	be 01       	movw	r22, r28
    2d76:	6f 5f       	subi	r22, 0xFF	; 255
    2d78:	7f 4f       	sbci	r23, 0xFF	; 255
    2d7a:	c8 01       	movw	r24, r16
    2d7c:	0e 94 7a 15 	call	0x2af4	; 0x2af4 <Process::addParameter(String const&)>
    2d80:	ce 01       	movw	r24, r28
    2d82:	01 96       	adiw	r24, 0x01	; 1
    2d84:	0e 94 bb 10 	call	0x2176	; 0x2176 <String::~String()>
    2d88:	b7 01       	movw	r22, r14
    2d8a:	c8 01       	movw	r24, r16
    2d8c:	0e 94 7a 15 	call	0x2af4	; 0x2af4 <Process::addParameter(String const&)>
    2d90:	c8 01       	movw	r24, r16
    2d92:	0e 94 8f 15 	call	0x2b1e	; 0x2b1e <Process::runAsynchronously()>
    2d96:	26 96       	adiw	r28, 0x06	; 6
    2d98:	0f b6       	in	r0, 0x3f	; 63
    2d9a:	f8 94       	cli
    2d9c:	de bf       	out	0x3e, r29	; 62
    2d9e:	0f be       	out	0x3f, r0	; 63
    2da0:	cd bf       	out	0x3d, r28	; 61
    2da2:	df 91       	pop	r29
    2da4:	cf 91       	pop	r28
    2da6:	1f 91       	pop	r17
    2da8:	0f 91       	pop	r16
    2daa:	ff 90       	pop	r15
    2dac:	ef 90       	pop	r14
    2dae:	08 95       	ret

00002db0 <Process::runShellCommand(String const&)>:
    2db0:	cf 93       	push	r28
    2db2:	df 93       	push	r29
    2db4:	ec 01       	movw	r28, r24
    2db6:	0e 94 97 16 	call	0x2d2e	; 0x2d2e <Process::runShellCommandAsynchronously(String const&)>
    2dba:	ce 01       	movw	r24, r28
    2dbc:	0e 94 f0 15 	call	0x2be0	; 0x2be0 <Process::running()>
    2dc0:	88 23       	and	r24, r24
    2dc2:	39 f0       	breq	.+14     	; 0x2dd2 <Process::runShellCommand(String const&)+0x22>
    2dc4:	64 e6       	ldi	r22, 0x64	; 100
    2dc6:	70 e0       	ldi	r23, 0x00	; 0
    2dc8:	80 e0       	ldi	r24, 0x00	; 0
    2dca:	90 e0       	ldi	r25, 0x00	; 0
    2dcc:	0e 94 35 08 	call	0x106a	; 0x106a <delay>
    2dd0:	f4 cf       	rjmp	.-24     	; 0x2dba <Process::runShellCommand(String const&)+0xa>
    2dd2:	ce 01       	movw	r24, r28
    2dd4:	df 91       	pop	r29
    2dd6:	cf 91       	pop	r28
    2dd8:	0c 94 18 16 	jmp	0x2c30	; 0x2c30 <Process::exitValue()>

00002ddc <SoftwareSerial::read()>:
    2ddc:	20 91 55 04 	lds	r18, 0x0455
    2de0:	30 91 56 04 	lds	r19, 0x0456
    2de4:	28 17       	cp	r18, r24
    2de6:	39 07       	cpc	r19, r25
    2de8:	b9 f4       	brne	.+46     	; 0x2e18 <SoftwareSerial::read()+0x3c>
    2dea:	90 91 13 04 	lds	r25, 0x0413
    2dee:	80 91 14 04 	lds	r24, 0x0414
    2df2:	98 17       	cp	r25, r24
    2df4:	89 f0       	breq	.+34     	; 0x2e18 <SoftwareSerial::read()+0x3c>
    2df6:	e0 91 13 04 	lds	r30, 0x0413
    2dfa:	f0 e0       	ldi	r31, 0x00	; 0
    2dfc:	eb 5e       	subi	r30, 0xEB	; 235
    2dfe:	fb 4f       	sbci	r31, 0xFB	; 251
    2e00:	80 81       	ld	r24, Z
    2e02:	20 91 13 04 	lds	r18, 0x0413
    2e06:	30 e0       	ldi	r19, 0x00	; 0
    2e08:	2f 5f       	subi	r18, 0xFF	; 255
    2e0a:	3f 4f       	sbci	r19, 0xFF	; 255
    2e0c:	2f 73       	andi	r18, 0x3F	; 63
    2e0e:	33 27       	eor	r19, r19
    2e10:	20 93 13 04 	sts	0x0413, r18
    2e14:	90 e0       	ldi	r25, 0x00	; 0
    2e16:	08 95       	ret
    2e18:	8f ef       	ldi	r24, 0xFF	; 255
    2e1a:	9f ef       	ldi	r25, 0xFF	; 255
    2e1c:	08 95       	ret

00002e1e <SoftwareSerial::write(unsigned char)>:
    2e1e:	1f 93       	push	r17
    2e20:	cf 93       	push	r28
    2e22:	df 93       	push	r29
    2e24:	dc 01       	movw	r26, r24
    2e26:	5c 96       	adiw	r26, 0x1c	; 28
    2e28:	8d 91       	ld	r24, X+
    2e2a:	9c 91       	ld	r25, X
    2e2c:	5d 97       	sbiw	r26, 0x1d	; 29
    2e2e:	00 97       	sbiw	r24, 0x00	; 0
    2e30:	49 f4       	brne	.+18     	; 0x2e44 <SoftwareSerial::write(unsigned char)+0x26>
    2e32:	81 e0       	ldi	r24, 0x01	; 1
    2e34:	90 e0       	ldi	r25, 0x00	; 0
    2e36:	13 96       	adiw	r26, 0x03	; 3
    2e38:	9c 93       	st	X, r25
    2e3a:	8e 93       	st	-X, r24
    2e3c:	12 97       	sbiw	r26, 0x02	; 2
    2e3e:	80 e0       	ldi	r24, 0x00	; 0
    2e40:	90 e0       	ldi	r25, 0x00	; 0
    2e42:	3b c0       	rjmp	.+118    	; 0x2eba <SoftwareSerial::write(unsigned char)+0x9c>
    2e44:	51 96       	adiw	r26, 0x11	; 17
    2e46:	ed 91       	ld	r30, X+
    2e48:	fc 91       	ld	r31, X
    2e4a:	52 97       	sbiw	r26, 0x12	; 18
    2e4c:	50 96       	adiw	r26, 0x10	; 16
    2e4e:	2c 91       	ld	r18, X
    2e50:	50 97       	sbiw	r26, 0x10	; 16
    2e52:	32 2f       	mov	r19, r18
    2e54:	30 95       	com	r19
    2e56:	1f b7       	in	r17, 0x3f	; 63
    2e58:	5e 96       	adiw	r26, 0x1e	; 30
    2e5a:	4c 91       	ld	r20, X
    2e5c:	5e 97       	sbiw	r26, 0x1e	; 30
    2e5e:	41 fb       	bst	r20, 1
    2e60:	77 27       	eor	r23, r23
    2e62:	70 f9       	bld	r23, 0
    2e64:	41 fd       	sbrc	r20, 1
    2e66:	60 95       	com	r22
    2e68:	f8 94       	cli
    2e6a:	40 81       	ld	r20, Z
    2e6c:	77 23       	and	r23, r23
    2e6e:	11 f0       	breq	.+4      	; 0x2e74 <SoftwareSerial::write(unsigned char)+0x56>
    2e70:	42 2b       	or	r20, r18
    2e72:	01 c0       	rjmp	.+2      	; 0x2e76 <SoftwareSerial::write(unsigned char)+0x58>
    2e74:	43 23       	and	r20, r19
    2e76:	40 83       	st	Z, r20
    2e78:	ec 01       	movw	r28, r24
    2e7a:	21 97       	sbiw	r28, 0x01	; 1
    2e7c:	f1 f7       	brne	.-4      	; 0x2e7a <SoftwareSerial::write(unsigned char)+0x5c>
    2e7e:	48 e0       	ldi	r20, 0x08	; 8
    2e80:	50 81       	ld	r21, Z
    2e82:	60 ff       	sbrs	r22, 0
    2e84:	02 c0       	rjmp	.+4      	; 0x2e8a <SoftwareSerial::write(unsigned char)+0x6c>
    2e86:	52 2b       	or	r21, r18
    2e88:	01 c0       	rjmp	.+2      	; 0x2e8c <SoftwareSerial::write(unsigned char)+0x6e>
    2e8a:	53 23       	and	r21, r19
    2e8c:	50 83       	st	Z, r21
    2e8e:	ec 01       	movw	r28, r24
    2e90:	21 97       	sbiw	r28, 0x01	; 1
    2e92:	f1 f7       	brne	.-4      	; 0x2e90 <SoftwareSerial::write(unsigned char)+0x72>
    2e94:	66 95       	lsr	r22
    2e96:	41 50       	subi	r20, 0x01	; 1
    2e98:	99 f7       	brne	.-26     	; 0x2e80 <SoftwareSerial::write(unsigned char)+0x62>
    2e9a:	80 81       	ld	r24, Z
    2e9c:	77 23       	and	r23, r23
    2e9e:	11 f0       	breq	.+4      	; 0x2ea4 <SoftwareSerial::write(unsigned char)+0x86>
    2ea0:	83 23       	and	r24, r19
    2ea2:	01 c0       	rjmp	.+2      	; 0x2ea6 <SoftwareSerial::write(unsigned char)+0x88>
    2ea4:	82 2b       	or	r24, r18
    2ea6:	80 83       	st	Z, r24
    2ea8:	1f bf       	out	0x3f, r17	; 63
    2eaa:	5c 96       	adiw	r26, 0x1c	; 28
    2eac:	8d 91       	ld	r24, X+
    2eae:	9c 91       	ld	r25, X
    2eb0:	5d 97       	sbiw	r26, 0x1d	; 29
    2eb2:	01 97       	sbiw	r24, 0x01	; 1
    2eb4:	f1 f7       	brne	.-4      	; 0x2eb2 <SoftwareSerial::write(unsigned char)+0x94>
    2eb6:	81 e0       	ldi	r24, 0x01	; 1
    2eb8:	90 e0       	ldi	r25, 0x00	; 0
    2eba:	df 91       	pop	r29
    2ebc:	cf 91       	pop	r28
    2ebe:	1f 91       	pop	r17
    2ec0:	08 95       	ret

00002ec2 <SoftwareSerial::peek()>:
    2ec2:	20 91 55 04 	lds	r18, 0x0455
    2ec6:	30 91 56 04 	lds	r19, 0x0456
    2eca:	28 17       	cp	r18, r24
    2ecc:	39 07       	cpc	r19, r25
    2ece:	81 f4       	brne	.+32     	; 0x2ef0 <SoftwareSerial::peek()+0x2e>
    2ed0:	90 91 13 04 	lds	r25, 0x0413
    2ed4:	80 91 14 04 	lds	r24, 0x0414
    2ed8:	98 17       	cp	r25, r24
    2eda:	51 f0       	breq	.+20     	; 0x2ef0 <SoftwareSerial::peek()+0x2e>
    2edc:	e0 91 13 04 	lds	r30, 0x0413
    2ee0:	f0 e0       	ldi	r31, 0x00	; 0
    2ee2:	eb 5e       	subi	r30, 0xEB	; 235
    2ee4:	fb 4f       	sbci	r31, 0xFB	; 251
    2ee6:	80 81       	ld	r24, Z
    2ee8:	99 27       	eor	r25, r25
    2eea:	87 fd       	sbrc	r24, 7
    2eec:	90 95       	com	r25
    2eee:	08 95       	ret
    2ef0:	8f ef       	ldi	r24, 0xFF	; 255
    2ef2:	9f ef       	ldi	r25, 0xFF	; 255
    2ef4:	08 95       	ret

00002ef6 <SoftwareSerial::available()>:
    2ef6:	20 91 55 04 	lds	r18, 0x0455
    2efa:	30 91 56 04 	lds	r19, 0x0456
    2efe:	28 17       	cp	r18, r24
    2f00:	39 07       	cpc	r19, r25
    2f02:	71 f4       	brne	.+28     	; 0x2f20 <SoftwareSerial::available()+0x2a>
    2f04:	80 91 14 04 	lds	r24, 0x0414
    2f08:	20 91 13 04 	lds	r18, 0x0413
    2f0c:	90 e0       	ldi	r25, 0x00	; 0
    2f0e:	80 5c       	subi	r24, 0xC0	; 192
    2f10:	9f 4f       	sbci	r25, 0xFF	; 255
    2f12:	82 1b       	sub	r24, r18
    2f14:	91 09       	sbc	r25, r1
    2f16:	60 e4       	ldi	r22, 0x40	; 64
    2f18:	70 e0       	ldi	r23, 0x00	; 0
    2f1a:	0e 94 1e 20 	call	0x403c	; 0x403c <__divmodhi4>
    2f1e:	08 95       	ret
    2f20:	80 e0       	ldi	r24, 0x00	; 0
    2f22:	90 e0       	ldi	r25, 0x00	; 0
    2f24:	08 95       	ret

00002f26 <SoftwareSerial::flush()>:
    2f26:	20 91 55 04 	lds	r18, 0x0455
    2f2a:	30 91 56 04 	lds	r19, 0x0456
    2f2e:	28 17       	cp	r18, r24
    2f30:	39 07       	cpc	r19, r25
    2f32:	39 f4       	brne	.+14     	; 0x2f42 <SoftwareSerial::flush()+0x1c>
    2f34:	8f b7       	in	r24, 0x3f	; 63
    2f36:	f8 94       	cli
    2f38:	10 92 14 04 	sts	0x0414, r1
    2f3c:	10 92 13 04 	sts	0x0413, r1
    2f40:	8f bf       	out	0x3f, r24	; 63
    2f42:	08 95       	ret

00002f44 <SoftwareSerial::stopListening()>:
    2f44:	e0 91 55 04 	lds	r30, 0x0455
    2f48:	f0 91 56 04 	lds	r31, 0x0456
    2f4c:	e8 17       	cp	r30, r24
    2f4e:	f9 07       	cpc	r31, r25
    2f50:	69 f4       	brne	.+26     	; 0x2f6c <SoftwareSerial::stopListening()+0x28>
    2f52:	a3 89       	ldd	r26, Z+19	; 0x13
    2f54:	b4 89       	ldd	r27, Z+20	; 0x14
    2f56:	9c 91       	ld	r25, X
    2f58:	85 89       	ldd	r24, Z+21	; 0x15
    2f5a:	80 95       	com	r24
    2f5c:	89 23       	and	r24, r25
    2f5e:	8c 93       	st	X, r24
    2f60:	10 92 56 04 	sts	0x0456, r1
    2f64:	10 92 55 04 	sts	0x0455, r1
    2f68:	81 e0       	ldi	r24, 0x01	; 1
    2f6a:	08 95       	ret
    2f6c:	80 e0       	ldi	r24, 0x00	; 0
    2f6e:	08 95       	ret

00002f70 <SoftwareSerial::listen()>:
    2f70:	cf 93       	push	r28
    2f72:	df 93       	push	r29
    2f74:	ec 01       	movw	r28, r24
    2f76:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2f78:	9b 8d       	ldd	r25, Y+27	; 0x1b
    2f7a:	89 2b       	or	r24, r25
    2f7c:	f1 f0       	breq	.+60     	; 0x2fba <SoftwareSerial::listen()+0x4a>
    2f7e:	80 91 55 04 	lds	r24, 0x0455
    2f82:	90 91 56 04 	lds	r25, 0x0456
    2f86:	8c 17       	cp	r24, r28
    2f88:	9d 07       	cpc	r25, r29
    2f8a:	b9 f0       	breq	.+46     	; 0x2fba <SoftwareSerial::listen()+0x4a>
    2f8c:	00 97       	sbiw	r24, 0x00	; 0
    2f8e:	11 f0       	breq	.+4      	; 0x2f94 <SoftwareSerial::listen()+0x24>
    2f90:	0e 94 a2 17 	call	0x2f44	; 0x2f44 <SoftwareSerial::stopListening()>
    2f94:	8e 8d       	ldd	r24, Y+30	; 0x1e
    2f96:	8e 7f       	andi	r24, 0xFE	; 254
    2f98:	8e 8f       	std	Y+30, r24	; 0x1e
    2f9a:	10 92 14 04 	sts	0x0414, r1
    2f9e:	10 92 13 04 	sts	0x0413, r1
    2fa2:	d0 93 56 04 	sts	0x0456, r29
    2fa6:	c0 93 55 04 	sts	0x0455, r28
    2faa:	eb 89       	ldd	r30, Y+19	; 0x13
    2fac:	fc 89       	ldd	r31, Y+20	; 0x14
    2fae:	80 81       	ld	r24, Z
    2fb0:	9d 89       	ldd	r25, Y+21	; 0x15
    2fb2:	89 2b       	or	r24, r25
    2fb4:	80 83       	st	Z, r24
    2fb6:	81 e0       	ldi	r24, 0x01	; 1
    2fb8:	01 c0       	rjmp	.+2      	; 0x2fbc <SoftwareSerial::listen()+0x4c>
    2fba:	80 e0       	ldi	r24, 0x00	; 0
    2fbc:	df 91       	pop	r29
    2fbe:	cf 91       	pop	r28
    2fc0:	08 95       	ret

00002fc2 <__vector_9>:
    2fc2:	1f 92       	push	r1
    2fc4:	0f 92       	push	r0
    2fc6:	0f b6       	in	r0, 0x3f	; 63
    2fc8:	0f 92       	push	r0
    2fca:	11 24       	eor	r1, r1
    2fcc:	2f 93       	push	r18
    2fce:	3f 93       	push	r19
    2fd0:	4f 93       	push	r20
    2fd2:	5f 93       	push	r21
    2fd4:	6f 93       	push	r22
    2fd6:	7f 93       	push	r23
    2fd8:	8f 93       	push	r24
    2fda:	9f 93       	push	r25
    2fdc:	af 93       	push	r26
    2fde:	bf 93       	push	r27
    2fe0:	ef 93       	push	r30
    2fe2:	ff 93       	push	r31
    2fe4:	e0 91 55 04 	lds	r30, 0x0455
    2fe8:	f0 91 56 04 	lds	r31, 0x0456
    2fec:	30 97       	sbiw	r30, 0x00	; 0
    2fee:	09 f4       	brne	.+2      	; 0x2ff2 <__vector_9+0x30>
    2ff0:	51 c0       	rjmp	.+162    	; 0x3094 <__vector_9+0xd2>
    2ff2:	86 8d       	ldd	r24, Z+30	; 0x1e
    2ff4:	a6 85       	ldd	r26, Z+14	; 0x0e
    2ff6:	b7 85       	ldd	r27, Z+15	; 0x0f
    2ff8:	95 85       	ldd	r25, Z+13	; 0x0d
    2ffa:	81 ff       	sbrs	r24, 1
    2ffc:	04 c0       	rjmp	.+8      	; 0x3006 <__vector_9+0x44>
    2ffe:	8c 91       	ld	r24, X
    3000:	89 23       	and	r24, r25
    3002:	29 f4       	brne	.+10     	; 0x300e <__vector_9+0x4c>
    3004:	47 c0       	rjmp	.+142    	; 0x3094 <__vector_9+0xd2>
    3006:	8c 91       	ld	r24, X
    3008:	89 23       	and	r24, r25
    300a:	09 f0       	breq	.+2      	; 0x300e <__vector_9+0x4c>
    300c:	43 c0       	rjmp	.+134    	; 0x3094 <__vector_9+0xd2>
    300e:	a3 89       	ldd	r26, Z+19	; 0x13
    3010:	b4 89       	ldd	r27, Z+20	; 0x14
    3012:	9c 91       	ld	r25, X
    3014:	85 89       	ldd	r24, Z+21	; 0x15
    3016:	80 95       	com	r24
    3018:	89 23       	and	r24, r25
    301a:	8c 93       	st	X, r24
    301c:	86 89       	ldd	r24, Z+22	; 0x16
    301e:	97 89       	ldd	r25, Z+23	; 0x17
    3020:	01 97       	sbiw	r24, 0x01	; 1
    3022:	f1 f7       	brne	.-4      	; 0x3020 <__vector_9+0x5e>
    3024:	20 8d       	ldd	r18, Z+24	; 0x18
    3026:	31 8d       	ldd	r19, Z+25	; 0x19
    3028:	a6 85       	ldd	r26, Z+14	; 0x0e
    302a:	b7 85       	ldd	r27, Z+15	; 0x0f
    302c:	75 85       	ldd	r23, Z+13	; 0x0d
    302e:	58 e0       	ldi	r21, 0x08	; 8
    3030:	40 e0       	ldi	r20, 0x00	; 0
    3032:	c9 01       	movw	r24, r18
    3034:	01 97       	sbiw	r24, 0x01	; 1
    3036:	f1 f7       	brne	.-4      	; 0x3034 <__vector_9+0x72>
    3038:	84 2f       	mov	r24, r20
    303a:	90 e0       	ldi	r25, 0x00	; 0
    303c:	95 95       	asr	r25
    303e:	87 95       	ror	r24
    3040:	48 2f       	mov	r20, r24
    3042:	6c 91       	ld	r22, X
    3044:	67 23       	and	r22, r23
    3046:	09 f0       	breq	.+2      	; 0x304a <__vector_9+0x88>
    3048:	40 68       	ori	r20, 0x80	; 128
    304a:	51 50       	subi	r21, 0x01	; 1
    304c:	91 f7       	brne	.-28     	; 0x3032 <__vector_9+0x70>
    304e:	86 8d       	ldd	r24, Z+30	; 0x1e
    3050:	81 fd       	sbrc	r24, 1
    3052:	40 95       	com	r20
    3054:	80 91 14 04 	lds	r24, 0x0414
    3058:	90 e0       	ldi	r25, 0x00	; 0
    305a:	01 96       	adiw	r24, 0x01	; 1
    305c:	8f 73       	andi	r24, 0x3F	; 63
    305e:	99 27       	eor	r25, r25
    3060:	20 91 13 04 	lds	r18, 0x0413
    3064:	28 17       	cp	r18, r24
    3066:	49 f0       	breq	.+18     	; 0x307a <__vector_9+0xb8>
    3068:	a0 91 14 04 	lds	r26, 0x0414
    306c:	b0 e0       	ldi	r27, 0x00	; 0
    306e:	ab 5e       	subi	r26, 0xEB	; 235
    3070:	bb 4f       	sbci	r27, 0xFB	; 251
    3072:	4c 93       	st	X, r20
    3074:	80 93 14 04 	sts	0x0414, r24
    3078:	03 c0       	rjmp	.+6      	; 0x3080 <__vector_9+0xbe>
    307a:	86 8d       	ldd	r24, Z+30	; 0x1e
    307c:	81 60       	ori	r24, 0x01	; 1
    307e:	86 8f       	std	Z+30, r24	; 0x1e
    3080:	82 8d       	ldd	r24, Z+26	; 0x1a
    3082:	93 8d       	ldd	r25, Z+27	; 0x1b
    3084:	01 97       	sbiw	r24, 0x01	; 1
    3086:	f1 f7       	brne	.-4      	; 0x3084 <__vector_9+0xc2>
    3088:	a3 89       	ldd	r26, Z+19	; 0x13
    308a:	b4 89       	ldd	r27, Z+20	; 0x14
    308c:	8c 91       	ld	r24, X
    308e:	95 89       	ldd	r25, Z+21	; 0x15
    3090:	89 2b       	or	r24, r25
    3092:	8c 93       	st	X, r24
    3094:	ff 91       	pop	r31
    3096:	ef 91       	pop	r30
    3098:	bf 91       	pop	r27
    309a:	af 91       	pop	r26
    309c:	9f 91       	pop	r25
    309e:	8f 91       	pop	r24
    30a0:	7f 91       	pop	r23
    30a2:	6f 91       	pop	r22
    30a4:	5f 91       	pop	r21
    30a6:	4f 91       	pop	r20
    30a8:	3f 91       	pop	r19
    30aa:	2f 91       	pop	r18
    30ac:	0f 90       	pop	r0
    30ae:	0f be       	out	0x3f, r0	; 63
    30b0:	0f 90       	pop	r0
    30b2:	1f 90       	pop	r1
    30b4:	18 95       	reti

000030b6 <SoftwareSerial::~SoftwareSerial()>:
    30b6:	28 e1       	ldi	r18, 0x18	; 24
    30b8:	33 e0       	ldi	r19, 0x03	; 3
    30ba:	fc 01       	movw	r30, r24
    30bc:	31 83       	std	Z+1, r19	; 0x01
    30be:	20 83       	st	Z, r18
    30c0:	0c 94 a2 17 	jmp	0x2f44	; 0x2f44 <SoftwareSerial::stopListening()>

000030c4 <SoftwareSerial::setTX(unsigned char)>:
    30c4:	1f 93       	push	r17
    30c6:	cf 93       	push	r28
    30c8:	df 93       	push	r29
    30ca:	ec 01       	movw	r28, r24
    30cc:	16 2f       	mov	r17, r22
    30ce:	6e 8d       	ldd	r22, Y+30	; 0x1e
    30d0:	66 95       	lsr	r22
    30d2:	61 70       	andi	r22, 0x01	; 1
    30d4:	81 e0       	ldi	r24, 0x01	; 1
    30d6:	68 27       	eor	r22, r24
    30d8:	81 2f       	mov	r24, r17
    30da:	0e 94 29 09 	call	0x1252	; 0x1252 <digitalWrite>
    30de:	61 e0       	ldi	r22, 0x01	; 1
    30e0:	81 2f       	mov	r24, r17
    30e2:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <pinMode>
    30e6:	81 2f       	mov	r24, r17
    30e8:	90 e0       	ldi	r25, 0x00	; 0
    30ea:	fc 01       	movw	r30, r24
    30ec:	eb 5b       	subi	r30, 0xBB	; 187
    30ee:	fe 4f       	sbci	r31, 0xFE	; 254
    30f0:	e4 91       	lpm	r30, Z
    30f2:	e8 8b       	std	Y+16, r30	; 0x10
    30f4:	fc 01       	movw	r30, r24
    30f6:	ed 59       	subi	r30, 0x9D	; 157
    30f8:	fe 4f       	sbci	r31, 0xFE	; 254
    30fa:	e4 91       	lpm	r30, Z
    30fc:	f0 e0       	ldi	r31, 0x00	; 0
    30fe:	ee 0f       	add	r30, r30
    3100:	ff 1f       	adc	r31, r31
    3102:	e1 57       	subi	r30, 0x71	; 113
    3104:	fe 4f       	sbci	r31, 0xFE	; 254
    3106:	85 91       	lpm	r24, Z+
    3108:	94 91       	lpm	r25, Z
    310a:	9a 8b       	std	Y+18, r25	; 0x12
    310c:	89 8b       	std	Y+17, r24	; 0x11
    310e:	df 91       	pop	r29
    3110:	cf 91       	pop	r28
    3112:	1f 91       	pop	r17
    3114:	08 95       	ret

00003116 <SoftwareSerial::setRX(unsigned char)>:
    3116:	1f 93       	push	r17
    3118:	cf 93       	push	r28
    311a:	df 93       	push	r29
    311c:	ec 01       	movw	r28, r24
    311e:	16 2f       	mov	r17, r22
    3120:	60 e0       	ldi	r22, 0x00	; 0
    3122:	81 2f       	mov	r24, r17
    3124:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <pinMode>
    3128:	8e 8d       	ldd	r24, Y+30	; 0x1e
    312a:	81 fd       	sbrc	r24, 1
    312c:	04 c0       	rjmp	.+8      	; 0x3136 <SoftwareSerial::setRX(unsigned char)+0x20>
    312e:	61 e0       	ldi	r22, 0x01	; 1
    3130:	81 2f       	mov	r24, r17
    3132:	0e 94 29 09 	call	0x1252	; 0x1252 <digitalWrite>
    3136:	1c 87       	std	Y+12, r17	; 0x0c
    3138:	81 2f       	mov	r24, r17
    313a:	90 e0       	ldi	r25, 0x00	; 0
    313c:	fc 01       	movw	r30, r24
    313e:	eb 5b       	subi	r30, 0xBB	; 187
    3140:	fe 4f       	sbci	r31, 0xFE	; 254
    3142:	e4 91       	lpm	r30, Z
    3144:	ed 87       	std	Y+13, r30	; 0x0d
    3146:	fc 01       	movw	r30, r24
    3148:	ed 59       	subi	r30, 0x9D	; 157
    314a:	fe 4f       	sbci	r31, 0xFE	; 254
    314c:	e4 91       	lpm	r30, Z
    314e:	f0 e0       	ldi	r31, 0x00	; 0
    3150:	ee 0f       	add	r30, r30
    3152:	ff 1f       	adc	r31, r31
    3154:	ef 57       	subi	r30, 0x7F	; 127
    3156:	fe 4f       	sbci	r31, 0xFE	; 254
    3158:	85 91       	lpm	r24, Z+
    315a:	94 91       	lpm	r25, Z
    315c:	9f 87       	std	Y+15, r25	; 0x0f
    315e:	8e 87       	std	Y+14, r24	; 0x0e
    3160:	df 91       	pop	r29
    3162:	cf 91       	pop	r28
    3164:	1f 91       	pop	r17
    3166:	08 95       	ret

00003168 <SoftwareSerial::SoftwareSerial(unsigned char, unsigned char, bool)>:
    3168:	ff 92       	push	r15
    316a:	0f 93       	push	r16
    316c:	1f 93       	push	r17
    316e:	cf 93       	push	r28
    3170:	df 93       	push	r29
    3172:	ec 01       	movw	r28, r24
    3174:	f6 2e       	mov	r15, r22
    3176:	52 2f       	mov	r21, r18
    3178:	1b 82       	std	Y+3, r1	; 0x03
    317a:	1a 82       	std	Y+2, r1	; 0x02
    317c:	08 ee       	ldi	r16, 0xE8	; 232
    317e:	13 e0       	ldi	r17, 0x03	; 3
    3180:	20 e0       	ldi	r18, 0x00	; 0
    3182:	30 e0       	ldi	r19, 0x00	; 0
    3184:	0c 83       	std	Y+4, r16	; 0x04
    3186:	1d 83       	std	Y+5, r17	; 0x05
    3188:	2e 83       	std	Y+6, r18	; 0x06
    318a:	3f 83       	std	Y+7, r19	; 0x07
    318c:	88 e1       	ldi	r24, 0x18	; 24
    318e:	93 e0       	ldi	r25, 0x03	; 3
    3190:	99 83       	std	Y+1, r25	; 0x01
    3192:	88 83       	st	Y, r24
    3194:	1f 8a       	std	Y+23, r1	; 0x17
    3196:	1e 8a       	std	Y+22, r1	; 0x16
    3198:	19 8e       	std	Y+25, r1	; 0x19
    319a:	18 8e       	std	Y+24, r1	; 0x18
    319c:	1b 8e       	std	Y+27, r1	; 0x1b
    319e:	1a 8e       	std	Y+26, r1	; 0x1a
    31a0:	1d 8e       	std	Y+29, r1	; 0x1d
    31a2:	1c 8e       	std	Y+28, r1	; 0x1c
    31a4:	8e 8d       	ldd	r24, Y+30	; 0x1e
    31a6:	8e 7f       	andi	r24, 0xFE	; 254
    31a8:	50 fb       	bst	r21, 0
    31aa:	81 f9       	bld	r24, 1
    31ac:	8e 8f       	std	Y+30, r24	; 0x1e
    31ae:	64 2f       	mov	r22, r20
    31b0:	ce 01       	movw	r24, r28
    31b2:	0e 94 62 18 	call	0x30c4	; 0x30c4 <SoftwareSerial::setTX(unsigned char)>
    31b6:	6f 2d       	mov	r22, r15
    31b8:	ce 01       	movw	r24, r28
    31ba:	df 91       	pop	r29
    31bc:	cf 91       	pop	r28
    31be:	1f 91       	pop	r17
    31c0:	0f 91       	pop	r16
    31c2:	ff 90       	pop	r15
    31c4:	0c 94 8b 18 	jmp	0x3116	; 0x3116 <SoftwareSerial::setRX(unsigned char)>

000031c8 <SoftwareSerial::begin(long)>:
    31c8:	cf 93       	push	r28
    31ca:	df 93       	push	r29
    31cc:	ec 01       	movw	r28, r24
    31ce:	9a 01       	movw	r18, r20
    31d0:	ab 01       	movw	r20, r22
    31d2:	1b 8e       	std	Y+27, r1	; 0x1b
    31d4:	1a 8e       	std	Y+26, r1	; 0x1a
    31d6:	19 8e       	std	Y+25, r1	; 0x19
    31d8:	18 8e       	std	Y+24, r1	; 0x18
    31da:	1f 8a       	std	Y+23, r1	; 0x17
    31dc:	1e 8a       	std	Y+22, r1	; 0x16
    31de:	60 e0       	ldi	r22, 0x00	; 0
    31e0:	79 e0       	ldi	r23, 0x09	; 9
    31e2:	8d e3       	ldi	r24, 0x3D	; 61
    31e4:	90 e0       	ldi	r25, 0x00	; 0
    31e6:	0e 94 54 20 	call	0x40a8	; 0x40a8 <__divmodsi4>
    31ea:	c9 01       	movw	r24, r18
    31ec:	24 30       	cpi	r18, 0x04	; 4
    31ee:	31 05       	cpc	r19, r1
    31f0:	20 f0       	brcs	.+8      	; 0x31fa <SoftwareSerial::begin(long)+0x32>
    31f2:	b9 01       	movw	r22, r18
    31f4:	63 50       	subi	r22, 0x03	; 3
    31f6:	71 09       	sbc	r23, r1
    31f8:	02 c0       	rjmp	.+4      	; 0x31fe <SoftwareSerial::begin(long)+0x36>
    31fa:	61 e0       	ldi	r22, 0x01	; 1
    31fc:	70 e0       	ldi	r23, 0x00	; 0
    31fe:	7d 8f       	std	Y+29, r23	; 0x1d
    3200:	6c 8f       	std	Y+28, r22	; 0x1c
    3202:	ec 85       	ldd	r30, Y+12	; 0x0c
    3204:	f8 ef       	ldi	r31, 0xF8	; 248
    3206:	fe 0f       	add	r31, r30
    3208:	f4 30       	cpi	r31, 0x04	; 4
    320a:	48 f0       	brcs	.+18     	; 0x321e <SoftwareSerial::begin(long)+0x56>
    320c:	62 ef       	ldi	r22, 0xF2	; 242
    320e:	6e 0f       	add	r22, r30
    3210:	64 30       	cpi	r22, 0x04	; 4
    3212:	28 f0       	brcs	.+10     	; 0x321e <SoftwareSerial::begin(long)+0x56>
    3214:	66 ee       	ldi	r22, 0xE6	; 230
    3216:	6e 0f       	add	r22, r30
    3218:	63 30       	cpi	r22, 0x03	; 3
    321a:	08 f0       	brcs	.+2      	; 0x321e <SoftwareSerial::begin(long)+0x56>
    321c:	6f c0       	rjmp	.+222    	; 0x32fc <SoftwareSerial::begin(long)+0x134>
    321e:	b9 01       	movw	r22, r18
    3220:	76 95       	lsr	r23
    3222:	67 95       	ror	r22
    3224:	64 31       	cpi	r22, 0x14	; 20
    3226:	71 05       	cpc	r23, r1
    3228:	18 f0       	brcs	.+6      	; 0x3230 <SoftwareSerial::begin(long)+0x68>
    322a:	63 51       	subi	r22, 0x13	; 19
    322c:	71 09       	sbc	r23, r1
    322e:	02 c0       	rjmp	.+4      	; 0x3234 <SoftwareSerial::begin(long)+0x6c>
    3230:	61 e0       	ldi	r22, 0x01	; 1
    3232:	70 e0       	ldi	r23, 0x00	; 0
    3234:	7f 8b       	std	Y+23, r23	; 0x17
    3236:	6e 8b       	std	Y+22, r22	; 0x16
    3238:	06 97       	sbiw	r24, 0x06	; 6
    323a:	18 f0       	brcs	.+6      	; 0x3242 <SoftwareSerial::begin(long)+0x7a>
    323c:	c9 01       	movw	r24, r18
    323e:	05 97       	sbiw	r24, 0x05	; 5
    3240:	02 c0       	rjmp	.+4      	; 0x3246 <SoftwareSerial::begin(long)+0x7e>
    3242:	81 e0       	ldi	r24, 0x01	; 1
    3244:	90 e0       	ldi	r25, 0x00	; 0
    3246:	99 8f       	std	Y+25, r25	; 0x19
    3248:	88 8f       	std	Y+24, r24	; 0x18
    324a:	c9 01       	movw	r24, r18
    324c:	88 0f       	add	r24, r24
    324e:	99 1f       	adc	r25, r25
    3250:	82 0f       	add	r24, r18
    3252:	93 1f       	adc	r25, r19
    3254:	96 95       	lsr	r25
    3256:	87 95       	ror	r24
    3258:	96 95       	lsr	r25
    325a:	87 95       	ror	r24
    325c:	8d 30       	cpi	r24, 0x0D	; 13
    325e:	91 05       	cpc	r25, r1
    3260:	10 f0       	brcs	.+4      	; 0x3266 <SoftwareSerial::begin(long)+0x9e>
    3262:	0c 97       	sbiw	r24, 0x0c	; 12
    3264:	02 c0       	rjmp	.+4      	; 0x326a <SoftwareSerial::begin(long)+0xa2>
    3266:	81 e0       	ldi	r24, 0x01	; 1
    3268:	90 e0       	ldi	r25, 0x00	; 0
    326a:	9b 8f       	std	Y+27, r25	; 0x1b
    326c:	8a 8f       	std	Y+26, r24	; 0x1a
    326e:	f4 30       	cpi	r31, 0x04	; 4
    3270:	58 f0       	brcs	.+22     	; 0x3288 <SoftwareSerial::begin(long)+0xc0>
    3272:	82 ef       	ldi	r24, 0xF2	; 242
    3274:	8e 0f       	add	r24, r30
    3276:	84 30       	cpi	r24, 0x04	; 4
    3278:	38 f0       	brcs	.+14     	; 0x3288 <SoftwareSerial::begin(long)+0xc0>
    327a:	ea 51       	subi	r30, 0x1A	; 26
    327c:	e3 30       	cpi	r30, 0x03	; 3
    327e:	08 f0       	brcs	.+2      	; 0x3282 <SoftwareSerial::begin(long)+0xba>
    3280:	42 c0       	rjmp	.+132    	; 0x3306 <SoftwareSerial::begin(long)+0x13e>
    3282:	a8 e6       	ldi	r26, 0x68	; 104
    3284:	b0 e0       	ldi	r27, 0x00	; 0
    3286:	41 c0       	rjmp	.+130    	; 0x330a <SoftwareSerial::begin(long)+0x142>
    3288:	a8 e6       	ldi	r26, 0x68	; 104
    328a:	b0 e0       	ldi	r27, 0x00	; 0
    328c:	e8 e6       	ldi	r30, 0x68	; 104
    328e:	f0 e0       	ldi	r31, 0x00	; 0
    3290:	80 81       	ld	r24, Z
    3292:	81 60       	ori	r24, 0x01	; 1
    3294:	8c 93       	st	X, r24
    3296:	2c 85       	ldd	r18, Y+12	; 0x0c
    3298:	38 ef       	ldi	r19, 0xF8	; 248
    329a:	32 0f       	add	r19, r18
    329c:	34 30       	cpi	r19, 0x04	; 4
    329e:	40 f0       	brcs	.+16     	; 0x32b0 <SoftwareSerial::begin(long)+0xe8>
    32a0:	82 ef       	ldi	r24, 0xF2	; 242
    32a2:	82 0f       	add	r24, r18
    32a4:	84 30       	cpi	r24, 0x04	; 4
    32a6:	20 f0       	brcs	.+8      	; 0x32b0 <SoftwareSerial::begin(long)+0xe8>
    32a8:	86 ee       	ldi	r24, 0xE6	; 230
    32aa:	82 0f       	add	r24, r18
    32ac:	83 30       	cpi	r24, 0x03	; 3
    32ae:	18 f4       	brcc	.+6      	; 0x32b6 <SoftwareSerial::begin(long)+0xee>
    32b0:	8b e6       	ldi	r24, 0x6B	; 107
    32b2:	90 e0       	ldi	r25, 0x00	; 0
    32b4:	02 c0       	rjmp	.+4      	; 0x32ba <SoftwareSerial::begin(long)+0xf2>
    32b6:	80 e0       	ldi	r24, 0x00	; 0
    32b8:	90 e0       	ldi	r25, 0x00	; 0
    32ba:	9c 8b       	std	Y+20, r25	; 0x14
    32bc:	8b 8b       	std	Y+19, r24	; 0x13
    32be:	34 30       	cpi	r19, 0x04	; 4
    32c0:	10 f4       	brcc	.+4      	; 0x32c6 <SoftwareSerial::begin(long)+0xfe>
    32c2:	24 50       	subi	r18, 0x04	; 4
    32c4:	09 c0       	rjmp	.+18     	; 0x32d8 <SoftwareSerial::begin(long)+0x110>
    32c6:	2e 30       	cpi	r18, 0x0E	; 14
    32c8:	69 f0       	breq	.+26     	; 0x32e4 <SoftwareSerial::begin(long)+0x11c>
    32ca:	2f 30       	cpi	r18, 0x0F	; 15
    32cc:	69 f0       	breq	.+26     	; 0x32e8 <SoftwareSerial::begin(long)+0x120>
    32ce:	20 31       	cpi	r18, 0x10	; 16
    32d0:	69 f0       	breq	.+26     	; 0x32ec <SoftwareSerial::begin(long)+0x124>
    32d2:	21 31       	cpi	r18, 0x11	; 17
    32d4:	69 f0       	breq	.+26     	; 0x32f0 <SoftwareSerial::begin(long)+0x128>
    32d6:	26 51       	subi	r18, 0x16	; 22
    32d8:	81 e0       	ldi	r24, 0x01	; 1
    32da:	01 c0       	rjmp	.+2      	; 0x32de <SoftwareSerial::begin(long)+0x116>
    32dc:	88 0f       	add	r24, r24
    32de:	2a 95       	dec	r18
    32e0:	ea f7       	brpl	.-6      	; 0x32dc <SoftwareSerial::begin(long)+0x114>
    32e2:	07 c0       	rjmp	.+14     	; 0x32f2 <SoftwareSerial::begin(long)+0x12a>
    32e4:	88 e0       	ldi	r24, 0x08	; 8
    32e6:	05 c0       	rjmp	.+10     	; 0x32f2 <SoftwareSerial::begin(long)+0x12a>
    32e8:	82 e0       	ldi	r24, 0x02	; 2
    32ea:	03 c0       	rjmp	.+6      	; 0x32f2 <SoftwareSerial::begin(long)+0x12a>
    32ec:	84 e0       	ldi	r24, 0x04	; 4
    32ee:	01 c0       	rjmp	.+2      	; 0x32f2 <SoftwareSerial::begin(long)+0x12a>
    32f0:	81 e0       	ldi	r24, 0x01	; 1
    32f2:	8d 8b       	std	Y+21, r24	; 0x15
    32f4:	8c 8d       	ldd	r24, Y+28	; 0x1c
    32f6:	9d 8d       	ldd	r25, Y+29	; 0x1d
    32f8:	01 97       	sbiw	r24, 0x01	; 1
    32fa:	f1 f7       	brne	.-4      	; 0x32f8 <SoftwareSerial::begin(long)+0x130>
    32fc:	ce 01       	movw	r24, r28
    32fe:	df 91       	pop	r29
    3300:	cf 91       	pop	r28
    3302:	0c 94 b8 17 	jmp	0x2f70	; 0x2f70 <SoftwareSerial::listen()>
    3306:	a0 e0       	ldi	r26, 0x00	; 0
    3308:	b0 e0       	ldi	r27, 0x00	; 0
    330a:	e3 30       	cpi	r30, 0x03	; 3
    330c:	08 f4       	brcc	.+2      	; 0x3310 <SoftwareSerial::begin(long)+0x148>
    330e:	be cf       	rjmp	.-132    	; 0x328c <SoftwareSerial::begin(long)+0xc4>
    3310:	e0 e0       	ldi	r30, 0x00	; 0
    3312:	f0 e0       	ldi	r31, 0x00	; 0
    3314:	bd cf       	rjmp	.-134    	; 0x3290 <SoftwareSerial::begin(long)+0xc8>

00003316 <yield>:
    3316:	08 95       	ret

00003318 <Keyboard_::write(unsigned char)>:
    3318:	ff 92       	push	r15
    331a:	0f 93       	push	r16
    331c:	1f 93       	push	r17
    331e:	cf 93       	push	r28
    3320:	df 93       	push	r29
    3322:	ec 01       	movw	r28, r24
    3324:	f6 2e       	mov	r15, r22
    3326:	e8 81       	ld	r30, Y
    3328:	f9 81       	ldd	r31, Y+1	; 0x01
    332a:	04 80       	ldd	r0, Z+4	; 0x04
    332c:	f5 81       	ldd	r31, Z+5	; 0x05
    332e:	e0 2d       	mov	r30, r0
    3330:	09 95       	icall
    3332:	8c 01       	movw	r16, r24
    3334:	e8 81       	ld	r30, Y
    3336:	f9 81       	ldd	r31, Y+1	; 0x01
    3338:	06 80       	ldd	r0, Z+6	; 0x06
    333a:	f7 81       	ldd	r31, Z+7	; 0x07
    333c:	e0 2d       	mov	r30, r0
    333e:	6f 2d       	mov	r22, r15
    3340:	ce 01       	movw	r24, r28
    3342:	09 95       	icall
    3344:	c8 01       	movw	r24, r16
    3346:	99 27       	eor	r25, r25
    3348:	df 91       	pop	r29
    334a:	cf 91       	pop	r28
    334c:	1f 91       	pop	r17
    334e:	0f 91       	pop	r16
    3350:	ff 90       	pop	r15
    3352:	08 95       	ret

00003354 <HID_GetInterface(unsigned char*)>:
    3354:	fc 01       	movw	r30, r24
    3356:	20 81       	ld	r18, Z
    3358:	2f 5f       	subi	r18, 0xFF	; 255
    335a:	20 83       	st	Z, r18
    335c:	49 e1       	ldi	r20, 0x19	; 25
    335e:	50 e0       	ldi	r21, 0x00	; 0
    3360:	63 ec       	ldi	r22, 0xC3	; 195
    3362:	72 e0       	ldi	r23, 0x02	; 2
    3364:	80 e8       	ldi	r24, 0x80	; 128
    3366:	0c 94 b4 0e 	jmp	0x1d68	; 0x1d68 <USB_SendControl(unsigned char, void const*, int)>

0000336a <HID_GetDescriptor(int)>:
    336a:	45 e6       	ldi	r20, 0x65	; 101
    336c:	50 e0       	ldi	r21, 0x00	; 0
    336e:	6c ed       	ldi	r22, 0xDC	; 220
    3370:	72 e0       	ldi	r23, 0x02	; 2
    3372:	80 e8       	ldi	r24, 0x80	; 128
    3374:	0c 94 b4 0e 	jmp	0x1d68	; 0x1d68 <USB_SendControl(unsigned char, void const*, int)>

00003378 <HID_SendReport(unsigned char, void const*, int)>:
    3378:	ef 92       	push	r14
    337a:	ff 92       	push	r15
    337c:	0f 93       	push	r16
    337e:	1f 93       	push	r17
    3380:	cf 93       	push	r28
    3382:	df 93       	push	r29
    3384:	1f 92       	push	r1
    3386:	cd b7       	in	r28, 0x3d	; 61
    3388:	de b7       	in	r29, 0x3e	; 62
    338a:	89 83       	std	Y+1, r24	; 0x01
    338c:	8b 01       	movw	r16, r22
    338e:	7a 01       	movw	r14, r20
    3390:	41 e0       	ldi	r20, 0x01	; 1
    3392:	50 e0       	ldi	r21, 0x00	; 0
    3394:	be 01       	movw	r22, r28
    3396:	6f 5f       	subi	r22, 0xFF	; 255
    3398:	7f 4f       	sbci	r23, 0xFF	; 255
    339a:	84 e0       	ldi	r24, 0x04	; 4
    339c:	0e 94 19 0e 	call	0x1c32	; 0x1c32 <USB_Send(unsigned char, void const*, int)>
    33a0:	a7 01       	movw	r20, r14
    33a2:	b8 01       	movw	r22, r16
    33a4:	84 e4       	ldi	r24, 0x44	; 68
    33a6:	0e 94 19 0e 	call	0x1c32	; 0x1c32 <USB_Send(unsigned char, void const*, int)>
    33aa:	0f 90       	pop	r0
    33ac:	df 91       	pop	r29
    33ae:	cf 91       	pop	r28
    33b0:	1f 91       	pop	r17
    33b2:	0f 91       	pop	r16
    33b4:	ff 90       	pop	r15
    33b6:	ef 90       	pop	r14
    33b8:	08 95       	ret

000033ba <HID_Setup(Setup&)>:
    33ba:	fc 01       	movw	r30, r24
    33bc:	91 81       	ldd	r25, Z+1	; 0x01
    33be:	80 81       	ld	r24, Z
    33c0:	81 3a       	cpi	r24, 0xA1	; 161
    33c2:	31 f4       	brne	.+12     	; 0x33d0 <HID_Setup(Setup&)+0x16>
    33c4:	81 e0       	ldi	r24, 0x01	; 1
    33c6:	91 30       	cpi	r25, 0x01	; 1
    33c8:	91 f0       	breq	.+36     	; 0x33ee <HID_Setup(Setup&)+0x34>
    33ca:	93 30       	cpi	r25, 0x03	; 3
    33cc:	89 f4       	brne	.+34     	; 0x33f0 <HID_Setup(Setup&)+0x36>
    33ce:	11 c0       	rjmp	.+34     	; 0x33f2 <HID_Setup(Setup&)+0x38>
    33d0:	81 32       	cpi	r24, 0x21	; 33
    33d2:	71 f4       	brne	.+28     	; 0x33f0 <HID_Setup(Setup&)+0x36>
    33d4:	9b 30       	cpi	r25, 0x0B	; 11
    33d6:	21 f4       	brne	.+8      	; 0x33e0 <HID_Setup(Setup&)+0x26>
    33d8:	82 81       	ldd	r24, Z+2	; 0x02
    33da:	80 93 0f 01 	sts	0x010F, r24
    33de:	05 c0       	rjmp	.+10     	; 0x33ea <HID_Setup(Setup&)+0x30>
    33e0:	9a 30       	cpi	r25, 0x0A	; 10
    33e2:	31 f4       	brne	.+12     	; 0x33f0 <HID_Setup(Setup&)+0x36>
    33e4:	82 81       	ldd	r24, Z+2	; 0x02
    33e6:	80 93 0e 01 	sts	0x010E, r24
    33ea:	81 e0       	ldi	r24, 0x01	; 1
    33ec:	08 95       	ret
    33ee:	08 95       	ret
    33f0:	80 e0       	ldi	r24, 0x00	; 0
    33f2:	08 95       	ret

000033f4 <Keyboard_::sendReport(KeyReport*)>:
    33f4:	48 e0       	ldi	r20, 0x08	; 8
    33f6:	50 e0       	ldi	r21, 0x00	; 0
    33f8:	82 e0       	ldi	r24, 0x02	; 2
    33fa:	0c 94 bc 19 	jmp	0x3378	; 0x3378 <HID_SendReport(unsigned char, void const*, int)>

000033fe <Keyboard_::press(unsigned char)>:
    33fe:	cf 93       	push	r28
    3400:	df 93       	push	r29
    3402:	dc 01       	movw	r26, r24
    3404:	68 38       	cpi	r22, 0x88	; 136
    3406:	18 f0       	brcs	.+6      	; 0x340e <Keyboard_::press(unsigned char)+0x10>
    3408:	e8 e7       	ldi	r30, 0x78	; 120
    340a:	e6 0f       	add	r30, r22
    340c:	25 c0       	rjmp	.+74     	; 0x3458 <Keyboard_::press(unsigned char)+0x5a>
    340e:	e6 2f       	mov	r30, r22
    3410:	f0 e0       	ldi	r31, 0x00	; 0
    3412:	67 ff       	sbrs	r22, 7
    3414:	11 c0       	rjmp	.+34     	; 0x3438 <Keyboard_::press(unsigned char)+0x3a>
    3416:	e0 58       	subi	r30, 0x80	; 128
    3418:	f1 09       	sbc	r31, r1
    341a:	81 e0       	ldi	r24, 0x01	; 1
    341c:	90 e0       	ldi	r25, 0x00	; 0
    341e:	01 c0       	rjmp	.+2      	; 0x3422 <Keyboard_::press(unsigned char)+0x24>
    3420:	88 0f       	add	r24, r24
    3422:	ea 95       	dec	r30
    3424:	ea f7       	brpl	.-6      	; 0x3420 <Keyboard_::press(unsigned char)+0x22>
    3426:	14 96       	adiw	r26, 0x04	; 4
    3428:	9c 91       	ld	r25, X
    342a:	14 97       	sbiw	r26, 0x04	; 4
    342c:	98 2b       	or	r25, r24
    342e:	14 96       	adiw	r26, 0x04	; 4
    3430:	9c 93       	st	X, r25
    3432:	14 97       	sbiw	r26, 0x04	; 4
    3434:	e0 e0       	ldi	r30, 0x00	; 0
    3436:	10 c0       	rjmp	.+32     	; 0x3458 <Keyboard_::press(unsigned char)+0x5a>
    3438:	ed 5b       	subi	r30, 0xBD	; 189
    343a:	fd 4f       	sbci	r31, 0xFD	; 253
    343c:	e4 91       	lpm	r30, Z
    343e:	ee 23       	and	r30, r30
    3440:	09 f4       	brne	.+2      	; 0x3444 <Keyboard_::press(unsigned char)+0x46>
    3442:	40 c0       	rjmp	.+128    	; 0x34c4 <Keyboard_::press(unsigned char)+0xc6>
    3444:	e7 ff       	sbrs	r30, 7
    3446:	08 c0       	rjmp	.+16     	; 0x3458 <Keyboard_::press(unsigned char)+0x5a>
    3448:	14 96       	adiw	r26, 0x04	; 4
    344a:	8c 91       	ld	r24, X
    344c:	14 97       	sbiw	r26, 0x04	; 4
    344e:	82 60       	ori	r24, 0x02	; 2
    3450:	14 96       	adiw	r26, 0x04	; 4
    3452:	8c 93       	st	X, r24
    3454:	14 97       	sbiw	r26, 0x04	; 4
    3456:	ef 77       	andi	r30, 0x7F	; 127
    3458:	16 96       	adiw	r26, 0x06	; 6
    345a:	8c 91       	ld	r24, X
    345c:	16 97       	sbiw	r26, 0x06	; 6
    345e:	8e 17       	cp	r24, r30
    3460:	41 f1       	breq	.+80     	; 0x34b2 <Keyboard_::press(unsigned char)+0xb4>
    3462:	17 96       	adiw	r26, 0x07	; 7
    3464:	8c 91       	ld	r24, X
    3466:	17 97       	sbiw	r26, 0x07	; 7
    3468:	8e 17       	cp	r24, r30
    346a:	19 f1       	breq	.+70     	; 0x34b2 <Keyboard_::press(unsigned char)+0xb4>
    346c:	18 96       	adiw	r26, 0x08	; 8
    346e:	8c 91       	ld	r24, X
    3470:	18 97       	sbiw	r26, 0x08	; 8
    3472:	8e 17       	cp	r24, r30
    3474:	f1 f0       	breq	.+60     	; 0x34b2 <Keyboard_::press(unsigned char)+0xb4>
    3476:	19 96       	adiw	r26, 0x09	; 9
    3478:	8c 91       	ld	r24, X
    347a:	19 97       	sbiw	r26, 0x09	; 9
    347c:	8e 17       	cp	r24, r30
    347e:	c9 f0       	breq	.+50     	; 0x34b2 <Keyboard_::press(unsigned char)+0xb4>
    3480:	1a 96       	adiw	r26, 0x0a	; 10
    3482:	8c 91       	ld	r24, X
    3484:	1a 97       	sbiw	r26, 0x0a	; 10
    3486:	8e 17       	cp	r24, r30
    3488:	a1 f0       	breq	.+40     	; 0x34b2 <Keyboard_::press(unsigned char)+0xb4>
    348a:	1b 96       	adiw	r26, 0x0b	; 11
    348c:	8c 91       	ld	r24, X
    348e:	1b 97       	sbiw	r26, 0x0b	; 11
    3490:	8e 17       	cp	r24, r30
    3492:	79 f0       	breq	.+30     	; 0x34b2 <Keyboard_::press(unsigned char)+0xb4>
    3494:	80 e0       	ldi	r24, 0x00	; 0
    3496:	90 e0       	ldi	r25, 0x00	; 0
    3498:	ed 01       	movw	r28, r26
    349a:	c8 0f       	add	r28, r24
    349c:	d9 1f       	adc	r29, r25
    349e:	2e 81       	ldd	r18, Y+6	; 0x06
    34a0:	21 11       	cpse	r18, r1
    34a2:	02 c0       	rjmp	.+4      	; 0x34a8 <Keyboard_::press(unsigned char)+0xaa>
    34a4:	ee 83       	std	Y+6, r30	; 0x06
    34a6:	05 c0       	rjmp	.+10     	; 0x34b2 <Keyboard_::press(unsigned char)+0xb4>
    34a8:	01 96       	adiw	r24, 0x01	; 1
    34aa:	86 30       	cpi	r24, 0x06	; 6
    34ac:	91 05       	cpc	r25, r1
    34ae:	a1 f7       	brne	.-24     	; 0x3498 <Keyboard_::press(unsigned char)+0x9a>
    34b0:	09 c0       	rjmp	.+18     	; 0x34c4 <Keyboard_::press(unsigned char)+0xc6>
    34b2:	bd 01       	movw	r22, r26
    34b4:	6c 5f       	subi	r22, 0xFC	; 252
    34b6:	7f 4f       	sbci	r23, 0xFF	; 255
    34b8:	cd 01       	movw	r24, r26
    34ba:	0e 94 fa 19 	call	0x33f4	; 0x33f4 <Keyboard_::sendReport(KeyReport*)>
    34be:	81 e0       	ldi	r24, 0x01	; 1
    34c0:	90 e0       	ldi	r25, 0x00	; 0
    34c2:	08 c0       	rjmp	.+16     	; 0x34d4 <Keyboard_::press(unsigned char)+0xd6>
    34c4:	81 e0       	ldi	r24, 0x01	; 1
    34c6:	90 e0       	ldi	r25, 0x00	; 0
    34c8:	13 96       	adiw	r26, 0x03	; 3
    34ca:	9c 93       	st	X, r25
    34cc:	8e 93       	st	-X, r24
    34ce:	12 97       	sbiw	r26, 0x02	; 2
    34d0:	80 e0       	ldi	r24, 0x00	; 0
    34d2:	90 e0       	ldi	r25, 0x00	; 0
    34d4:	df 91       	pop	r29
    34d6:	cf 91       	pop	r28
    34d8:	08 95       	ret

000034da <Keyboard_::release(unsigned char)>:
    34da:	68 38       	cpi	r22, 0x88	; 136
    34dc:	18 f0       	brcs	.+6      	; 0x34e4 <Keyboard_::release(unsigned char)+0xa>
    34de:	e8 e7       	ldi	r30, 0x78	; 120
    34e0:	e6 0f       	add	r30, r22
    34e2:	25 c0       	rjmp	.+74     	; 0x352e <Keyboard_::release(unsigned char)+0x54>
    34e4:	e6 2f       	mov	r30, r22
    34e6:	f0 e0       	ldi	r31, 0x00	; 0
    34e8:	67 ff       	sbrs	r22, 7
    34ea:	12 c0       	rjmp	.+36     	; 0x3510 <Keyboard_::release(unsigned char)+0x36>
    34ec:	e0 58       	subi	r30, 0x80	; 128
    34ee:	f1 09       	sbc	r31, r1
    34f0:	21 e0       	ldi	r18, 0x01	; 1
    34f2:	30 e0       	ldi	r19, 0x00	; 0
    34f4:	01 c0       	rjmp	.+2      	; 0x34f8 <Keyboard_::release(unsigned char)+0x1e>
    34f6:	22 0f       	add	r18, r18
    34f8:	ea 95       	dec	r30
    34fa:	ea f7       	brpl	.-6      	; 0x34f6 <Keyboard_::release(unsigned char)+0x1c>
    34fc:	20 95       	com	r18
    34fe:	dc 01       	movw	r26, r24
    3500:	14 96       	adiw	r26, 0x04	; 4
    3502:	3c 91       	ld	r19, X
    3504:	14 97       	sbiw	r26, 0x04	; 4
    3506:	32 23       	and	r19, r18
    3508:	14 96       	adiw	r26, 0x04	; 4
    350a:	3c 93       	st	X, r19
    350c:	e0 e0       	ldi	r30, 0x00	; 0
    350e:	0f c0       	rjmp	.+30     	; 0x352e <Keyboard_::release(unsigned char)+0x54>
    3510:	ed 5b       	subi	r30, 0xBD	; 189
    3512:	fd 4f       	sbci	r31, 0xFD	; 253
    3514:	e4 91       	lpm	r30, Z
    3516:	ee 23       	and	r30, r30
    3518:	29 f1       	breq	.+74     	; 0x3564 <Keyboard_::release(unsigned char)+0x8a>
    351a:	e7 ff       	sbrs	r30, 7
    351c:	08 c0       	rjmp	.+16     	; 0x352e <Keyboard_::release(unsigned char)+0x54>
    351e:	dc 01       	movw	r26, r24
    3520:	14 96       	adiw	r26, 0x04	; 4
    3522:	2c 91       	ld	r18, X
    3524:	14 97       	sbiw	r26, 0x04	; 4
    3526:	2d 7f       	andi	r18, 0xFD	; 253
    3528:	14 96       	adiw	r26, 0x04	; 4
    352a:	2c 93       	st	X, r18
    352c:	ef 77       	andi	r30, 0x7F	; 127
    352e:	20 e0       	ldi	r18, 0x00	; 0
    3530:	30 e0       	ldi	r19, 0x00	; 0
    3532:	ee 23       	and	r30, r30
    3534:	51 f0       	breq	.+20     	; 0x354a <Keyboard_::release(unsigned char)+0x70>
    3536:	dc 01       	movw	r26, r24
    3538:	a2 0f       	add	r26, r18
    353a:	b3 1f       	adc	r27, r19
    353c:	16 96       	adiw	r26, 0x06	; 6
    353e:	4c 91       	ld	r20, X
    3540:	16 97       	sbiw	r26, 0x06	; 6
    3542:	4e 13       	cpse	r20, r30
    3544:	02 c0       	rjmp	.+4      	; 0x354a <Keyboard_::release(unsigned char)+0x70>
    3546:	16 96       	adiw	r26, 0x06	; 6
    3548:	1c 92       	st	X, r1
    354a:	2f 5f       	subi	r18, 0xFF	; 255
    354c:	3f 4f       	sbci	r19, 0xFF	; 255
    354e:	26 30       	cpi	r18, 0x06	; 6
    3550:	31 05       	cpc	r19, r1
    3552:	79 f7       	brne	.-34     	; 0x3532 <Keyboard_::release(unsigned char)+0x58>
    3554:	bc 01       	movw	r22, r24
    3556:	6c 5f       	subi	r22, 0xFC	; 252
    3558:	7f 4f       	sbci	r23, 0xFF	; 255
    355a:	0e 94 fa 19 	call	0x33f4	; 0x33f4 <Keyboard_::sendReport(KeyReport*)>
    355e:	81 e0       	ldi	r24, 0x01	; 1
    3560:	90 e0       	ldi	r25, 0x00	; 0
    3562:	08 95       	ret
    3564:	80 e0       	ldi	r24, 0x00	; 0
    3566:	90 e0       	ldi	r25, 0x00	; 0
    3568:	08 95       	ret

0000356a <Keyboard_::releaseAll()>:
    356a:	fc 01       	movw	r30, r24
    356c:	16 82       	std	Z+6, r1	; 0x06
    356e:	17 82       	std	Z+7, r1	; 0x07
    3570:	10 86       	std	Z+8, r1	; 0x08
    3572:	11 86       	std	Z+9, r1	; 0x09
    3574:	12 86       	std	Z+10, r1	; 0x0a
    3576:	13 86       	std	Z+11, r1	; 0x0b
    3578:	14 82       	std	Z+4, r1	; 0x04
    357a:	bc 01       	movw	r22, r24
    357c:	6c 5f       	subi	r22, 0xFC	; 252
    357e:	7f 4f       	sbci	r23, 0xFF	; 255
    3580:	0c 94 fa 19 	jmp	0x33f4	; 0x33f4 <Keyboard_::sendReport(KeyReport*)>

00003584 <_GLOBAL__sub_I_Mouse>:
    3584:	10 92 63 04 	sts	0x0463, r1
    3588:	10 92 5a 04 	sts	0x045A, r1
    358c:	10 92 59 04 	sts	0x0459, r1
    3590:	88 e2       	ldi	r24, 0x28	; 40
    3592:	93 e0       	ldi	r25, 0x03	; 3
    3594:	90 93 58 04 	sts	0x0458, r25
    3598:	80 93 57 04 	sts	0x0457, r24
    359c:	08 95       	ret

0000359e <__vector_25>:
    359e:	1f 92       	push	r1
    35a0:	0f 92       	push	r0
    35a2:	0f b6       	in	r0, 0x3f	; 63
    35a4:	0f 92       	push	r0
    35a6:	11 24       	eor	r1, r1
    35a8:	2f 93       	push	r18
    35aa:	8f 93       	push	r24
    35ac:	9f 93       	push	r25
    35ae:	ef 93       	push	r30
    35b0:	ff 93       	push	r31
    35b2:	e0 91 74 04 	lds	r30, 0x0474
    35b6:	f0 91 75 04 	lds	r31, 0x0475
    35ba:	80 81       	ld	r24, Z
    35bc:	e0 91 7a 04 	lds	r30, 0x047A
    35c0:	f0 91 7b 04 	lds	r31, 0x047B
    35c4:	82 fd       	sbrc	r24, 2
    35c6:	12 c0       	rjmp	.+36     	; 0x35ec <__vector_25+0x4e>
    35c8:	90 81       	ld	r25, Z
    35ca:	80 91 7d 04 	lds	r24, 0x047D
    35ce:	8f 5f       	subi	r24, 0xFF	; 255
    35d0:	8f 73       	andi	r24, 0x3F	; 63
    35d2:	20 91 7e 04 	lds	r18, 0x047E
    35d6:	82 17       	cp	r24, r18
    35d8:	51 f0       	breq	.+20     	; 0x35ee <__vector_25+0x50>
    35da:	e0 91 7d 04 	lds	r30, 0x047D
    35de:	f0 e0       	ldi	r31, 0x00	; 0
    35e0:	ec 59       	subi	r30, 0x9C	; 156
    35e2:	fb 4f       	sbci	r31, 0xFB	; 251
    35e4:	95 8f       	std	Z+29, r25	; 0x1d
    35e6:	80 93 7d 04 	sts	0x047D, r24
    35ea:	01 c0       	rjmp	.+2      	; 0x35ee <__vector_25+0x50>
    35ec:	80 81       	ld	r24, Z
    35ee:	ff 91       	pop	r31
    35f0:	ef 91       	pop	r30
    35f2:	9f 91       	pop	r25
    35f4:	8f 91       	pop	r24
    35f6:	2f 91       	pop	r18
    35f8:	0f 90       	pop	r0
    35fa:	0f be       	out	0x3f, r0	; 63
    35fc:	0f 90       	pop	r0
    35fe:	1f 90       	pop	r1
    3600:	18 95       	reti

00003602 <__vector_26>:
    3602:	1f 92       	push	r1
    3604:	0f 92       	push	r0
    3606:	0f b6       	in	r0, 0x3f	; 63
    3608:	0f 92       	push	r0
    360a:	11 24       	eor	r1, r1
    360c:	2f 93       	push	r18
    360e:	3f 93       	push	r19
    3610:	4f 93       	push	r20
    3612:	5f 93       	push	r21
    3614:	6f 93       	push	r22
    3616:	7f 93       	push	r23
    3618:	8f 93       	push	r24
    361a:	9f 93       	push	r25
    361c:	af 93       	push	r26
    361e:	bf 93       	push	r27
    3620:	ef 93       	push	r30
    3622:	ff 93       	push	r31
    3624:	84 e6       	ldi	r24, 0x64	; 100
    3626:	94 e0       	ldi	r25, 0x04	; 4
    3628:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <HardwareSerial::_tx_udr_empty_irq()>
    362c:	ff 91       	pop	r31
    362e:	ef 91       	pop	r30
    3630:	bf 91       	pop	r27
    3632:	af 91       	pop	r26
    3634:	9f 91       	pop	r25
    3636:	8f 91       	pop	r24
    3638:	7f 91       	pop	r23
    363a:	6f 91       	pop	r22
    363c:	5f 91       	pop	r21
    363e:	4f 91       	pop	r20
    3640:	3f 91       	pop	r19
    3642:	2f 91       	pop	r18
    3644:	0f 90       	pop	r0
    3646:	0f be       	out	0x3f, r0	; 63
    3648:	0f 90       	pop	r0
    364a:	1f 90       	pop	r1
    364c:	18 95       	reti

0000364e <Serial1_available()>:
    364e:	84 e6       	ldi	r24, 0x64	; 100
    3650:	94 e0       	ldi	r25, 0x04	; 4
    3652:	0e 94 3f 0a 	call	0x147e	; 0x147e <HardwareSerial::available()>
    3656:	21 e0       	ldi	r18, 0x01	; 1
    3658:	89 2b       	or	r24, r25
    365a:	09 f4       	brne	.+2      	; 0x365e <Serial1_available()+0x10>
    365c:	20 e0       	ldi	r18, 0x00	; 0
    365e:	82 2f       	mov	r24, r18
    3660:	08 95       	ret

00003662 <_GLOBAL__sub_I___vector_25>:
    3662:	10 92 67 04 	sts	0x0467, r1
    3666:	10 92 66 04 	sts	0x0466, r1
    366a:	88 ee       	ldi	r24, 0xE8	; 232
    366c:	93 e0       	ldi	r25, 0x03	; 3
    366e:	a0 e0       	ldi	r26, 0x00	; 0
    3670:	b0 e0       	ldi	r27, 0x00	; 0
    3672:	80 93 68 04 	sts	0x0468, r24
    3676:	90 93 69 04 	sts	0x0469, r25
    367a:	a0 93 6a 04 	sts	0x046A, r26
    367e:	b0 93 6b 04 	sts	0x046B, r27
    3682:	8b ed       	ldi	r24, 0xDB	; 219
    3684:	92 e0       	ldi	r25, 0x02	; 2
    3686:	90 93 65 04 	sts	0x0465, r25
    368a:	80 93 64 04 	sts	0x0464, r24
    368e:	8d ec       	ldi	r24, 0xCD	; 205
    3690:	90 e0       	ldi	r25, 0x00	; 0
    3692:	90 93 71 04 	sts	0x0471, r25
    3696:	80 93 70 04 	sts	0x0470, r24
    369a:	8c ec       	ldi	r24, 0xCC	; 204
    369c:	90 e0       	ldi	r25, 0x00	; 0
    369e:	90 93 73 04 	sts	0x0473, r25
    36a2:	80 93 72 04 	sts	0x0472, r24
    36a6:	88 ec       	ldi	r24, 0xC8	; 200
    36a8:	90 e0       	ldi	r25, 0x00	; 0
    36aa:	90 93 75 04 	sts	0x0475, r25
    36ae:	80 93 74 04 	sts	0x0474, r24
    36b2:	89 ec       	ldi	r24, 0xC9	; 201
    36b4:	90 e0       	ldi	r25, 0x00	; 0
    36b6:	90 93 77 04 	sts	0x0477, r25
    36ba:	80 93 76 04 	sts	0x0476, r24
    36be:	8a ec       	ldi	r24, 0xCA	; 202
    36c0:	90 e0       	ldi	r25, 0x00	; 0
    36c2:	90 93 79 04 	sts	0x0479, r25
    36c6:	80 93 78 04 	sts	0x0478, r24
    36ca:	8e ec       	ldi	r24, 0xCE	; 206
    36cc:	90 e0       	ldi	r25, 0x00	; 0
    36ce:	90 93 7b 04 	sts	0x047B, r25
    36d2:	80 93 7a 04 	sts	0x047A, r24
    36d6:	10 92 7d 04 	sts	0x047D, r1
    36da:	10 92 7e 04 	sts	0x047E, r1
    36de:	10 92 7f 04 	sts	0x047F, r1
    36e2:	10 92 80 04 	sts	0x0480, r1
    36e6:	08 95       	ret

000036e8 <operator new(unsigned int)>:
    36e8:	0c 94 78 1b 	jmp	0x36f0	; 0x36f0 <malloc>

000036ec <operator delete(void*)>:
    36ec:	0c 94 10 1c 	jmp	0x3820	; 0x3820 <free>

000036f0 <malloc>:
    36f0:	cf 93       	push	r28
    36f2:	df 93       	push	r29
    36f4:	82 30       	cpi	r24, 0x02	; 2
    36f6:	91 05       	cpc	r25, r1
    36f8:	10 f4       	brcc	.+4      	; 0x36fe <malloc+0xe>
    36fa:	82 e0       	ldi	r24, 0x02	; 2
    36fc:	90 e0       	ldi	r25, 0x00	; 0
    36fe:	e0 91 03 05 	lds	r30, 0x0503
    3702:	f0 91 04 05 	lds	r31, 0x0504
    3706:	20 e0       	ldi	r18, 0x00	; 0
    3708:	30 e0       	ldi	r19, 0x00	; 0
    370a:	a0 e0       	ldi	r26, 0x00	; 0
    370c:	b0 e0       	ldi	r27, 0x00	; 0
    370e:	30 97       	sbiw	r30, 0x00	; 0
    3710:	39 f1       	breq	.+78     	; 0x3760 <malloc+0x70>
    3712:	40 81       	ld	r20, Z
    3714:	51 81       	ldd	r21, Z+1	; 0x01
    3716:	48 17       	cp	r20, r24
    3718:	59 07       	cpc	r21, r25
    371a:	b8 f0       	brcs	.+46     	; 0x374a <malloc+0x5a>
    371c:	48 17       	cp	r20, r24
    371e:	59 07       	cpc	r21, r25
    3720:	71 f4       	brne	.+28     	; 0x373e <malloc+0x4e>
    3722:	82 81       	ldd	r24, Z+2	; 0x02
    3724:	93 81       	ldd	r25, Z+3	; 0x03
    3726:	10 97       	sbiw	r26, 0x00	; 0
    3728:	29 f0       	breq	.+10     	; 0x3734 <malloc+0x44>
    372a:	13 96       	adiw	r26, 0x03	; 3
    372c:	9c 93       	st	X, r25
    372e:	8e 93       	st	-X, r24
    3730:	12 97       	sbiw	r26, 0x02	; 2
    3732:	2c c0       	rjmp	.+88     	; 0x378c <malloc+0x9c>
    3734:	90 93 04 05 	sts	0x0504, r25
    3738:	80 93 03 05 	sts	0x0503, r24
    373c:	27 c0       	rjmp	.+78     	; 0x378c <malloc+0x9c>
    373e:	21 15       	cp	r18, r1
    3740:	31 05       	cpc	r19, r1
    3742:	31 f0       	breq	.+12     	; 0x3750 <malloc+0x60>
    3744:	42 17       	cp	r20, r18
    3746:	53 07       	cpc	r21, r19
    3748:	18 f0       	brcs	.+6      	; 0x3750 <malloc+0x60>
    374a:	a9 01       	movw	r20, r18
    374c:	db 01       	movw	r26, r22
    374e:	01 c0       	rjmp	.+2      	; 0x3752 <malloc+0x62>
    3750:	ef 01       	movw	r28, r30
    3752:	9a 01       	movw	r18, r20
    3754:	bd 01       	movw	r22, r26
    3756:	df 01       	movw	r26, r30
    3758:	02 80       	ldd	r0, Z+2	; 0x02
    375a:	f3 81       	ldd	r31, Z+3	; 0x03
    375c:	e0 2d       	mov	r30, r0
    375e:	d7 cf       	rjmp	.-82     	; 0x370e <malloc+0x1e>
    3760:	21 15       	cp	r18, r1
    3762:	31 05       	cpc	r19, r1
    3764:	f9 f0       	breq	.+62     	; 0x37a4 <malloc+0xb4>
    3766:	28 1b       	sub	r18, r24
    3768:	39 0b       	sbc	r19, r25
    376a:	24 30       	cpi	r18, 0x04	; 4
    376c:	31 05       	cpc	r19, r1
    376e:	80 f4       	brcc	.+32     	; 0x3790 <malloc+0xa0>
    3770:	8a 81       	ldd	r24, Y+2	; 0x02
    3772:	9b 81       	ldd	r25, Y+3	; 0x03
    3774:	61 15       	cp	r22, r1
    3776:	71 05       	cpc	r23, r1
    3778:	21 f0       	breq	.+8      	; 0x3782 <malloc+0x92>
    377a:	fb 01       	movw	r30, r22
    377c:	93 83       	std	Z+3, r25	; 0x03
    377e:	82 83       	std	Z+2, r24	; 0x02
    3780:	04 c0       	rjmp	.+8      	; 0x378a <malloc+0x9a>
    3782:	90 93 04 05 	sts	0x0504, r25
    3786:	80 93 03 05 	sts	0x0503, r24
    378a:	fe 01       	movw	r30, r28
    378c:	32 96       	adiw	r30, 0x02	; 2
    378e:	44 c0       	rjmp	.+136    	; 0x3818 <malloc+0x128>
    3790:	fe 01       	movw	r30, r28
    3792:	e2 0f       	add	r30, r18
    3794:	f3 1f       	adc	r31, r19
    3796:	81 93       	st	Z+, r24
    3798:	91 93       	st	Z+, r25
    379a:	22 50       	subi	r18, 0x02	; 2
    379c:	31 09       	sbc	r19, r1
    379e:	39 83       	std	Y+1, r19	; 0x01
    37a0:	28 83       	st	Y, r18
    37a2:	3a c0       	rjmp	.+116    	; 0x3818 <malloc+0x128>
    37a4:	20 91 01 05 	lds	r18, 0x0501
    37a8:	30 91 02 05 	lds	r19, 0x0502
    37ac:	23 2b       	or	r18, r19
    37ae:	41 f4       	brne	.+16     	; 0x37c0 <malloc+0xd0>
    37b0:	20 91 02 01 	lds	r18, 0x0102
    37b4:	30 91 03 01 	lds	r19, 0x0103
    37b8:	30 93 02 05 	sts	0x0502, r19
    37bc:	20 93 01 05 	sts	0x0501, r18
    37c0:	20 91 00 01 	lds	r18, 0x0100
    37c4:	30 91 01 01 	lds	r19, 0x0101
    37c8:	21 15       	cp	r18, r1
    37ca:	31 05       	cpc	r19, r1
    37cc:	41 f4       	brne	.+16     	; 0x37de <malloc+0xee>
    37ce:	2d b7       	in	r18, 0x3d	; 61
    37d0:	3e b7       	in	r19, 0x3e	; 62
    37d2:	40 91 04 01 	lds	r20, 0x0104
    37d6:	50 91 05 01 	lds	r21, 0x0105
    37da:	24 1b       	sub	r18, r20
    37dc:	35 0b       	sbc	r19, r21
    37de:	e0 91 01 05 	lds	r30, 0x0501
    37e2:	f0 91 02 05 	lds	r31, 0x0502
    37e6:	e2 17       	cp	r30, r18
    37e8:	f3 07       	cpc	r31, r19
    37ea:	a0 f4       	brcc	.+40     	; 0x3814 <malloc+0x124>
    37ec:	2e 1b       	sub	r18, r30
    37ee:	3f 0b       	sbc	r19, r31
    37f0:	28 17       	cp	r18, r24
    37f2:	39 07       	cpc	r19, r25
    37f4:	78 f0       	brcs	.+30     	; 0x3814 <malloc+0x124>
    37f6:	ac 01       	movw	r20, r24
    37f8:	4e 5f       	subi	r20, 0xFE	; 254
    37fa:	5f 4f       	sbci	r21, 0xFF	; 255
    37fc:	24 17       	cp	r18, r20
    37fe:	35 07       	cpc	r19, r21
    3800:	48 f0       	brcs	.+18     	; 0x3814 <malloc+0x124>
    3802:	4e 0f       	add	r20, r30
    3804:	5f 1f       	adc	r21, r31
    3806:	50 93 02 05 	sts	0x0502, r21
    380a:	40 93 01 05 	sts	0x0501, r20
    380e:	81 93       	st	Z+, r24
    3810:	91 93       	st	Z+, r25
    3812:	02 c0       	rjmp	.+4      	; 0x3818 <malloc+0x128>
    3814:	e0 e0       	ldi	r30, 0x00	; 0
    3816:	f0 e0       	ldi	r31, 0x00	; 0
    3818:	cf 01       	movw	r24, r30
    381a:	df 91       	pop	r29
    381c:	cf 91       	pop	r28
    381e:	08 95       	ret

00003820 <free>:
    3820:	cf 93       	push	r28
    3822:	df 93       	push	r29
    3824:	00 97       	sbiw	r24, 0x00	; 0
    3826:	09 f4       	brne	.+2      	; 0x382a <free+0xa>
    3828:	87 c0       	rjmp	.+270    	; 0x3938 <free+0x118>
    382a:	fc 01       	movw	r30, r24
    382c:	32 97       	sbiw	r30, 0x02	; 2
    382e:	13 82       	std	Z+3, r1	; 0x03
    3830:	12 82       	std	Z+2, r1	; 0x02
    3832:	c0 91 03 05 	lds	r28, 0x0503
    3836:	d0 91 04 05 	lds	r29, 0x0504
    383a:	20 97       	sbiw	r28, 0x00	; 0
    383c:	81 f4       	brne	.+32     	; 0x385e <free+0x3e>
    383e:	20 81       	ld	r18, Z
    3840:	31 81       	ldd	r19, Z+1	; 0x01
    3842:	28 0f       	add	r18, r24
    3844:	39 1f       	adc	r19, r25
    3846:	80 91 01 05 	lds	r24, 0x0501
    384a:	90 91 02 05 	lds	r25, 0x0502
    384e:	82 17       	cp	r24, r18
    3850:	93 07       	cpc	r25, r19
    3852:	79 f5       	brne	.+94     	; 0x38b2 <free+0x92>
    3854:	f0 93 02 05 	sts	0x0502, r31
    3858:	e0 93 01 05 	sts	0x0501, r30
    385c:	6d c0       	rjmp	.+218    	; 0x3938 <free+0x118>
    385e:	de 01       	movw	r26, r28
    3860:	20 e0       	ldi	r18, 0x00	; 0
    3862:	30 e0       	ldi	r19, 0x00	; 0
    3864:	ae 17       	cp	r26, r30
    3866:	bf 07       	cpc	r27, r31
    3868:	50 f4       	brcc	.+20     	; 0x387e <free+0x5e>
    386a:	12 96       	adiw	r26, 0x02	; 2
    386c:	4d 91       	ld	r20, X+
    386e:	5c 91       	ld	r21, X
    3870:	13 97       	sbiw	r26, 0x03	; 3
    3872:	9d 01       	movw	r18, r26
    3874:	41 15       	cp	r20, r1
    3876:	51 05       	cpc	r21, r1
    3878:	09 f1       	breq	.+66     	; 0x38bc <free+0x9c>
    387a:	da 01       	movw	r26, r20
    387c:	f3 cf       	rjmp	.-26     	; 0x3864 <free+0x44>
    387e:	b3 83       	std	Z+3, r27	; 0x03
    3880:	a2 83       	std	Z+2, r26	; 0x02
    3882:	40 81       	ld	r20, Z
    3884:	51 81       	ldd	r21, Z+1	; 0x01
    3886:	84 0f       	add	r24, r20
    3888:	95 1f       	adc	r25, r21
    388a:	8a 17       	cp	r24, r26
    388c:	9b 07       	cpc	r25, r27
    388e:	71 f4       	brne	.+28     	; 0x38ac <free+0x8c>
    3890:	8d 91       	ld	r24, X+
    3892:	9c 91       	ld	r25, X
    3894:	11 97       	sbiw	r26, 0x01	; 1
    3896:	84 0f       	add	r24, r20
    3898:	95 1f       	adc	r25, r21
    389a:	02 96       	adiw	r24, 0x02	; 2
    389c:	91 83       	std	Z+1, r25	; 0x01
    389e:	80 83       	st	Z, r24
    38a0:	12 96       	adiw	r26, 0x02	; 2
    38a2:	8d 91       	ld	r24, X+
    38a4:	9c 91       	ld	r25, X
    38a6:	13 97       	sbiw	r26, 0x03	; 3
    38a8:	93 83       	std	Z+3, r25	; 0x03
    38aa:	82 83       	std	Z+2, r24	; 0x02
    38ac:	21 15       	cp	r18, r1
    38ae:	31 05       	cpc	r19, r1
    38b0:	29 f4       	brne	.+10     	; 0x38bc <free+0x9c>
    38b2:	f0 93 04 05 	sts	0x0504, r31
    38b6:	e0 93 03 05 	sts	0x0503, r30
    38ba:	3e c0       	rjmp	.+124    	; 0x3938 <free+0x118>
    38bc:	d9 01       	movw	r26, r18
    38be:	13 96       	adiw	r26, 0x03	; 3
    38c0:	fc 93       	st	X, r31
    38c2:	ee 93       	st	-X, r30
    38c4:	12 97       	sbiw	r26, 0x02	; 2
    38c6:	4d 91       	ld	r20, X+
    38c8:	5d 91       	ld	r21, X+
    38ca:	a4 0f       	add	r26, r20
    38cc:	b5 1f       	adc	r27, r21
    38ce:	ea 17       	cp	r30, r26
    38d0:	fb 07       	cpc	r31, r27
    38d2:	79 f4       	brne	.+30     	; 0x38f2 <free+0xd2>
    38d4:	80 81       	ld	r24, Z
    38d6:	91 81       	ldd	r25, Z+1	; 0x01
    38d8:	84 0f       	add	r24, r20
    38da:	95 1f       	adc	r25, r21
    38dc:	02 96       	adiw	r24, 0x02	; 2
    38de:	d9 01       	movw	r26, r18
    38e0:	11 96       	adiw	r26, 0x01	; 1
    38e2:	9c 93       	st	X, r25
    38e4:	8e 93       	st	-X, r24
    38e6:	82 81       	ldd	r24, Z+2	; 0x02
    38e8:	93 81       	ldd	r25, Z+3	; 0x03
    38ea:	13 96       	adiw	r26, 0x03	; 3
    38ec:	9c 93       	st	X, r25
    38ee:	8e 93       	st	-X, r24
    38f0:	12 97       	sbiw	r26, 0x02	; 2
    38f2:	e0 e0       	ldi	r30, 0x00	; 0
    38f4:	f0 e0       	ldi	r31, 0x00	; 0
    38f6:	8a 81       	ldd	r24, Y+2	; 0x02
    38f8:	9b 81       	ldd	r25, Y+3	; 0x03
    38fa:	00 97       	sbiw	r24, 0x00	; 0
    38fc:	19 f0       	breq	.+6      	; 0x3904 <free+0xe4>
    38fe:	fe 01       	movw	r30, r28
    3900:	ec 01       	movw	r28, r24
    3902:	f9 cf       	rjmp	.-14     	; 0x38f6 <free+0xd6>
    3904:	ce 01       	movw	r24, r28
    3906:	02 96       	adiw	r24, 0x02	; 2
    3908:	28 81       	ld	r18, Y
    390a:	39 81       	ldd	r19, Y+1	; 0x01
    390c:	82 0f       	add	r24, r18
    390e:	93 1f       	adc	r25, r19
    3910:	20 91 01 05 	lds	r18, 0x0501
    3914:	30 91 02 05 	lds	r19, 0x0502
    3918:	28 17       	cp	r18, r24
    391a:	39 07       	cpc	r19, r25
    391c:	69 f4       	brne	.+26     	; 0x3938 <free+0x118>
    391e:	30 97       	sbiw	r30, 0x00	; 0
    3920:	29 f4       	brne	.+10     	; 0x392c <free+0x10c>
    3922:	10 92 04 05 	sts	0x0504, r1
    3926:	10 92 03 05 	sts	0x0503, r1
    392a:	02 c0       	rjmp	.+4      	; 0x3930 <free+0x110>
    392c:	13 82       	std	Z+3, r1	; 0x03
    392e:	12 82       	std	Z+2, r1	; 0x02
    3930:	d0 93 02 05 	sts	0x0502, r29
    3934:	c0 93 01 05 	sts	0x0501, r28
    3938:	df 91       	pop	r29
    393a:	cf 91       	pop	r28
    393c:	08 95       	ret

0000393e <realloc>:
    393e:	a0 e0       	ldi	r26, 0x00	; 0
    3940:	b0 e0       	ldi	r27, 0x00	; 0
    3942:	e5 ea       	ldi	r30, 0xA5	; 165
    3944:	fc e1       	ldi	r31, 0x1C	; 28
    3946:	0c 94 7d 20 	jmp	0x40fa	; 0x40fa <__prologue_saves__+0x8>
    394a:	ec 01       	movw	r28, r24
    394c:	cb 01       	movw	r24, r22
    394e:	20 97       	sbiw	r28, 0x00	; 0
    3950:	19 f4       	brne	.+6      	; 0x3958 <realloc+0x1a>
    3952:	0e 94 78 1b 	call	0x36f0	; 0x36f0 <malloc>
    3956:	b8 c0       	rjmp	.+368    	; 0x3ac8 <realloc+0x18a>
    3958:	fe 01       	movw	r30, r28
    395a:	e6 0f       	add	r30, r22
    395c:	f7 1f       	adc	r31, r23
    395e:	9e 01       	movw	r18, r28
    3960:	22 50       	subi	r18, 0x02	; 2
    3962:	31 09       	sbc	r19, r1
    3964:	e2 17       	cp	r30, r18
    3966:	f3 07       	cpc	r31, r19
    3968:	08 f4       	brcc	.+2      	; 0x396c <realloc+0x2e>
    396a:	ac c0       	rjmp	.+344    	; 0x3ac4 <realloc+0x186>
    396c:	d9 01       	movw	r26, r18
    396e:	0d 91       	ld	r16, X+
    3970:	1c 91       	ld	r17, X
    3972:	11 97       	sbiw	r26, 0x01	; 1
    3974:	06 17       	cp	r16, r22
    3976:	17 07       	cpc	r17, r23
    3978:	b8 f0       	brcs	.+46     	; 0x39a8 <realloc+0x6a>
    397a:	05 30       	cpi	r16, 0x05	; 5
    397c:	11 05       	cpc	r17, r1
    397e:	08 f4       	brcc	.+2      	; 0x3982 <realloc+0x44>
    3980:	9f c0       	rjmp	.+318    	; 0x3ac0 <realloc+0x182>
    3982:	a8 01       	movw	r20, r16
    3984:	44 50       	subi	r20, 0x04	; 4
    3986:	51 09       	sbc	r21, r1
    3988:	46 17       	cp	r20, r22
    398a:	57 07       	cpc	r21, r23
    398c:	08 f4       	brcc	.+2      	; 0x3990 <realloc+0x52>
    398e:	98 c0       	rjmp	.+304    	; 0x3ac0 <realloc+0x182>
    3990:	02 50       	subi	r16, 0x02	; 2
    3992:	11 09       	sbc	r17, r1
    3994:	06 1b       	sub	r16, r22
    3996:	17 0b       	sbc	r17, r23
    3998:	01 93       	st	Z+, r16
    399a:	11 93       	st	Z+, r17
    399c:	6d 93       	st	X+, r22
    399e:	7c 93       	st	X, r23
    39a0:	cf 01       	movw	r24, r30
    39a2:	0e 94 10 1c 	call	0x3820	; 0x3820 <free>
    39a6:	8c c0       	rjmp	.+280    	; 0x3ac0 <realloc+0x182>
    39a8:	5b 01       	movw	r10, r22
    39aa:	a0 1a       	sub	r10, r16
    39ac:	b1 0a       	sbc	r11, r17
    39ae:	4e 01       	movw	r8, r28
    39b0:	80 0e       	add	r8, r16
    39b2:	91 1e       	adc	r9, r17
    39b4:	a0 91 03 05 	lds	r26, 0x0503
    39b8:	b0 91 04 05 	lds	r27, 0x0504
    39bc:	61 2c       	mov	r6, r1
    39be:	71 2c       	mov	r7, r1
    39c0:	60 e0       	ldi	r22, 0x00	; 0
    39c2:	70 e0       	ldi	r23, 0x00	; 0
    39c4:	10 97       	sbiw	r26, 0x00	; 0
    39c6:	09 f4       	brne	.+2      	; 0x39ca <realloc+0x8c>
    39c8:	49 c0       	rjmp	.+146    	; 0x3a5c <realloc+0x11e>
    39ca:	a8 15       	cp	r26, r8
    39cc:	b9 05       	cpc	r27, r9
    39ce:	c9 f5       	brne	.+114    	; 0x3a42 <realloc+0x104>
    39d0:	ed 90       	ld	r14, X+
    39d2:	fc 90       	ld	r15, X
    39d4:	11 97       	sbiw	r26, 0x01	; 1
    39d6:	67 01       	movw	r12, r14
    39d8:	42 e0       	ldi	r20, 0x02	; 2
    39da:	c4 0e       	add	r12, r20
    39dc:	d1 1c       	adc	r13, r1
    39de:	ca 14       	cp	r12, r10
    39e0:	db 04       	cpc	r13, r11
    39e2:	78 f1       	brcs	.+94     	; 0x3a42 <realloc+0x104>
    39e4:	47 01       	movw	r8, r14
    39e6:	8a 18       	sub	r8, r10
    39e8:	9b 08       	sbc	r9, r11
    39ea:	64 01       	movw	r12, r8
    39ec:	42 e0       	ldi	r20, 0x02	; 2
    39ee:	c4 0e       	add	r12, r20
    39f0:	d1 1c       	adc	r13, r1
    39f2:	12 96       	adiw	r26, 0x02	; 2
    39f4:	bc 90       	ld	r11, X
    39f6:	12 97       	sbiw	r26, 0x02	; 2
    39f8:	13 96       	adiw	r26, 0x03	; 3
    39fa:	ac 91       	ld	r26, X
    39fc:	b5 e0       	ldi	r27, 0x05	; 5
    39fe:	cb 16       	cp	r12, r27
    3a00:	d1 04       	cpc	r13, r1
    3a02:	40 f0       	brcs	.+16     	; 0x3a14 <realloc+0xd6>
    3a04:	b2 82       	std	Z+2, r11	; 0x02
    3a06:	a3 83       	std	Z+3, r26	; 0x03
    3a08:	91 82       	std	Z+1, r9	; 0x01
    3a0a:	80 82       	st	Z, r8
    3a0c:	d9 01       	movw	r26, r18
    3a0e:	8d 93       	st	X+, r24
    3a10:	9c 93       	st	X, r25
    3a12:	09 c0       	rjmp	.+18     	; 0x3a26 <realloc+0xe8>
    3a14:	0e 5f       	subi	r16, 0xFE	; 254
    3a16:	1f 4f       	sbci	r17, 0xFF	; 255
    3a18:	0e 0d       	add	r16, r14
    3a1a:	1f 1d       	adc	r17, r15
    3a1c:	f9 01       	movw	r30, r18
    3a1e:	11 83       	std	Z+1, r17	; 0x01
    3a20:	00 83       	st	Z, r16
    3a22:	eb 2d       	mov	r30, r11
    3a24:	fa 2f       	mov	r31, r26
    3a26:	61 15       	cp	r22, r1
    3a28:	71 05       	cpc	r23, r1
    3a2a:	31 f0       	breq	.+12     	; 0x3a38 <realloc+0xfa>
    3a2c:	db 01       	movw	r26, r22
    3a2e:	13 96       	adiw	r26, 0x03	; 3
    3a30:	fc 93       	st	X, r31
    3a32:	ee 93       	st	-X, r30
    3a34:	12 97       	sbiw	r26, 0x02	; 2
    3a36:	44 c0       	rjmp	.+136    	; 0x3ac0 <realloc+0x182>
    3a38:	f0 93 04 05 	sts	0x0504, r31
    3a3c:	e0 93 03 05 	sts	0x0503, r30
    3a40:	3f c0       	rjmp	.+126    	; 0x3ac0 <realloc+0x182>
    3a42:	6d 91       	ld	r22, X+
    3a44:	7c 91       	ld	r23, X
    3a46:	11 97       	sbiw	r26, 0x01	; 1
    3a48:	66 16       	cp	r6, r22
    3a4a:	77 06       	cpc	r7, r23
    3a4c:	08 f4       	brcc	.+2      	; 0x3a50 <realloc+0x112>
    3a4e:	3b 01       	movw	r6, r22
    3a50:	bd 01       	movw	r22, r26
    3a52:	12 96       	adiw	r26, 0x02	; 2
    3a54:	0d 90       	ld	r0, X+
    3a56:	bc 91       	ld	r27, X
    3a58:	a0 2d       	mov	r26, r0
    3a5a:	b4 cf       	rjmp	.-152    	; 0x39c4 <realloc+0x86>
    3a5c:	60 91 01 05 	lds	r22, 0x0501
    3a60:	70 91 02 05 	lds	r23, 0x0502
    3a64:	68 15       	cp	r22, r8
    3a66:	79 05       	cpc	r23, r9
    3a68:	e9 f4       	brne	.+58     	; 0x3aa4 <realloc+0x166>
    3a6a:	68 16       	cp	r6, r24
    3a6c:	79 06       	cpc	r7, r25
    3a6e:	d0 f4       	brcc	.+52     	; 0x3aa4 <realloc+0x166>
    3a70:	40 91 00 01 	lds	r20, 0x0100
    3a74:	50 91 01 01 	lds	r21, 0x0101
    3a78:	41 15       	cp	r20, r1
    3a7a:	51 05       	cpc	r21, r1
    3a7c:	41 f4       	brne	.+16     	; 0x3a8e <realloc+0x150>
    3a7e:	4d b7       	in	r20, 0x3d	; 61
    3a80:	5e b7       	in	r21, 0x3e	; 62
    3a82:	60 91 04 01 	lds	r22, 0x0104
    3a86:	70 91 05 01 	lds	r23, 0x0105
    3a8a:	46 1b       	sub	r20, r22
    3a8c:	57 0b       	sbc	r21, r23
    3a8e:	e4 17       	cp	r30, r20
    3a90:	f5 07       	cpc	r31, r21
    3a92:	c0 f4       	brcc	.+48     	; 0x3ac4 <realloc+0x186>
    3a94:	f0 93 02 05 	sts	0x0502, r31
    3a98:	e0 93 01 05 	sts	0x0501, r30
    3a9c:	f9 01       	movw	r30, r18
    3a9e:	91 83       	std	Z+1, r25	; 0x01
    3aa0:	80 83       	st	Z, r24
    3aa2:	0e c0       	rjmp	.+28     	; 0x3ac0 <realloc+0x182>
    3aa4:	0e 94 78 1b 	call	0x36f0	; 0x36f0 <malloc>
    3aa8:	7c 01       	movw	r14, r24
    3aaa:	00 97       	sbiw	r24, 0x00	; 0
    3aac:	59 f0       	breq	.+22     	; 0x3ac4 <realloc+0x186>
    3aae:	a8 01       	movw	r20, r16
    3ab0:	be 01       	movw	r22, r28
    3ab2:	0e 94 6c 1d 	call	0x3ad8	; 0x3ad8 <memcpy>
    3ab6:	ce 01       	movw	r24, r28
    3ab8:	0e 94 10 1c 	call	0x3820	; 0x3820 <free>
    3abc:	c7 01       	movw	r24, r14
    3abe:	04 c0       	rjmp	.+8      	; 0x3ac8 <realloc+0x18a>
    3ac0:	ce 01       	movw	r24, r28
    3ac2:	02 c0       	rjmp	.+4      	; 0x3ac8 <realloc+0x18a>
    3ac4:	80 e0       	ldi	r24, 0x00	; 0
    3ac6:	90 e0       	ldi	r25, 0x00	; 0
    3ac8:	cd b7       	in	r28, 0x3d	; 61
    3aca:	de b7       	in	r29, 0x3e	; 62
    3acc:	ee e0       	ldi	r30, 0x0E	; 14
    3ace:	0c 94 99 20 	jmp	0x4132	; 0x4132 <__epilogue_restores__+0x8>

00003ad2 <exit>:
    3ad2:	f8 94       	cli
    3ad4:	0c 94 c4 20 	jmp	0x4188	; 0x4188 <__do_global_dtors>

00003ad8 <memcpy>:
    3ad8:	fb 01       	movw	r30, r22
    3ada:	dc 01       	movw	r26, r24
    3adc:	02 c0       	rjmp	.+4      	; 0x3ae2 <memcpy+0xa>
    3ade:	01 90       	ld	r0, Z+
    3ae0:	0d 92       	st	X+, r0
    3ae2:	41 50       	subi	r20, 0x01	; 1
    3ae4:	50 40       	sbci	r21, 0x00	; 0
    3ae6:	d8 f7       	brcc	.-10     	; 0x3ade <memcpy+0x6>
    3ae8:	08 95       	ret

00003aea <strcpy>:
    3aea:	fb 01       	movw	r30, r22
    3aec:	dc 01       	movw	r26, r24
    3aee:	01 90       	ld	r0, Z+
    3af0:	0d 92       	st	X+, r0
    3af2:	00 20       	and	r0, r0
    3af4:	e1 f7       	brne	.-8      	; 0x3aee <strcpy+0x4>
    3af6:	08 95       	ret

00003af8 <sprintf>:
    3af8:	ae e0       	ldi	r26, 0x0E	; 14
    3afa:	b0 e0       	ldi	r27, 0x00	; 0
    3afc:	e2 e8       	ldi	r30, 0x82	; 130
    3afe:	fd e1       	ldi	r31, 0x1D	; 29
    3b00:	0c 94 87 20 	jmp	0x410e	; 0x410e <__prologue_saves__+0x1c>
    3b04:	0d 89       	ldd	r16, Y+21	; 0x15
    3b06:	1e 89       	ldd	r17, Y+22	; 0x16
    3b08:	86 e0       	ldi	r24, 0x06	; 6
    3b0a:	8c 83       	std	Y+4, r24	; 0x04
    3b0c:	1a 83       	std	Y+2, r17	; 0x02
    3b0e:	09 83       	std	Y+1, r16	; 0x01
    3b10:	8f ef       	ldi	r24, 0xFF	; 255
    3b12:	9f e7       	ldi	r25, 0x7F	; 127
    3b14:	9e 83       	std	Y+6, r25	; 0x06
    3b16:	8d 83       	std	Y+5, r24	; 0x05
    3b18:	ae 01       	movw	r20, r28
    3b1a:	47 5e       	subi	r20, 0xE7	; 231
    3b1c:	5f 4f       	sbci	r21, 0xFF	; 255
    3b1e:	6f 89       	ldd	r22, Y+23	; 0x17
    3b20:	78 8d       	ldd	r23, Y+24	; 0x18
    3b22:	ce 01       	movw	r24, r28
    3b24:	01 96       	adiw	r24, 0x01	; 1
    3b26:	0e 94 9e 1d 	call	0x3b3c	; 0x3b3c <vfprintf>
    3b2a:	ef 81       	ldd	r30, Y+7	; 0x07
    3b2c:	f8 85       	ldd	r31, Y+8	; 0x08
    3b2e:	e0 0f       	add	r30, r16
    3b30:	f1 1f       	adc	r31, r17
    3b32:	10 82       	st	Z, r1
    3b34:	2e 96       	adiw	r28, 0x0e	; 14
    3b36:	e4 e0       	ldi	r30, 0x04	; 4
    3b38:	0c 94 a3 20 	jmp	0x4146	; 0x4146 <__epilogue_restores__+0x1c>

00003b3c <vfprintf>:
    3b3c:	ac e0       	ldi	r26, 0x0C	; 12
    3b3e:	b0 e0       	ldi	r27, 0x00	; 0
    3b40:	e4 ea       	ldi	r30, 0xA4	; 164
    3b42:	fd e1       	ldi	r31, 0x1D	; 29
    3b44:	0c 94 79 20 	jmp	0x40f2	; 0x40f2 <__prologue_saves__>
    3b48:	7c 01       	movw	r14, r24
    3b4a:	6b 01       	movw	r12, r22
    3b4c:	8a 01       	movw	r16, r20
    3b4e:	fc 01       	movw	r30, r24
    3b50:	17 82       	std	Z+7, r1	; 0x07
    3b52:	16 82       	std	Z+6, r1	; 0x06
    3b54:	83 81       	ldd	r24, Z+3	; 0x03
    3b56:	81 ff       	sbrs	r24, 1
    3b58:	bd c1       	rjmp	.+890    	; 0x3ed4 <vfprintf+0x398>
    3b5a:	ce 01       	movw	r24, r28
    3b5c:	01 96       	adiw	r24, 0x01	; 1
    3b5e:	4c 01       	movw	r8, r24
    3b60:	f7 01       	movw	r30, r14
    3b62:	93 81       	ldd	r25, Z+3	; 0x03
    3b64:	f6 01       	movw	r30, r12
    3b66:	93 fd       	sbrc	r25, 3
    3b68:	85 91       	lpm	r24, Z+
    3b6a:	93 ff       	sbrs	r25, 3
    3b6c:	81 91       	ld	r24, Z+
    3b6e:	6f 01       	movw	r12, r30
    3b70:	88 23       	and	r24, r24
    3b72:	09 f4       	brne	.+2      	; 0x3b76 <vfprintf+0x3a>
    3b74:	ab c1       	rjmp	.+854    	; 0x3ecc <vfprintf+0x390>
    3b76:	85 32       	cpi	r24, 0x25	; 37
    3b78:	39 f4       	brne	.+14     	; 0x3b88 <vfprintf+0x4c>
    3b7a:	93 fd       	sbrc	r25, 3
    3b7c:	85 91       	lpm	r24, Z+
    3b7e:	93 ff       	sbrs	r25, 3
    3b80:	81 91       	ld	r24, Z+
    3b82:	6f 01       	movw	r12, r30
    3b84:	85 32       	cpi	r24, 0x25	; 37
    3b86:	29 f4       	brne	.+10     	; 0x3b92 <vfprintf+0x56>
    3b88:	b7 01       	movw	r22, r14
    3b8a:	90 e0       	ldi	r25, 0x00	; 0
    3b8c:	0e 94 8e 1f 	call	0x3f1c	; 0x3f1c <fputc>
    3b90:	e7 cf       	rjmp	.-50     	; 0x3b60 <vfprintf+0x24>
    3b92:	51 2c       	mov	r5, r1
    3b94:	31 2c       	mov	r3, r1
    3b96:	20 e0       	ldi	r18, 0x00	; 0
    3b98:	20 32       	cpi	r18, 0x20	; 32
    3b9a:	a0 f4       	brcc	.+40     	; 0x3bc4 <vfprintf+0x88>
    3b9c:	8b 32       	cpi	r24, 0x2B	; 43
    3b9e:	69 f0       	breq	.+26     	; 0x3bba <vfprintf+0x7e>
    3ba0:	30 f4       	brcc	.+12     	; 0x3bae <vfprintf+0x72>
    3ba2:	80 32       	cpi	r24, 0x20	; 32
    3ba4:	59 f0       	breq	.+22     	; 0x3bbc <vfprintf+0x80>
    3ba6:	83 32       	cpi	r24, 0x23	; 35
    3ba8:	69 f4       	brne	.+26     	; 0x3bc4 <vfprintf+0x88>
    3baa:	20 61       	ori	r18, 0x10	; 16
    3bac:	2c c0       	rjmp	.+88     	; 0x3c06 <vfprintf+0xca>
    3bae:	8d 32       	cpi	r24, 0x2D	; 45
    3bb0:	39 f0       	breq	.+14     	; 0x3bc0 <vfprintf+0x84>
    3bb2:	80 33       	cpi	r24, 0x30	; 48
    3bb4:	39 f4       	brne	.+14     	; 0x3bc4 <vfprintf+0x88>
    3bb6:	21 60       	ori	r18, 0x01	; 1
    3bb8:	26 c0       	rjmp	.+76     	; 0x3c06 <vfprintf+0xca>
    3bba:	22 60       	ori	r18, 0x02	; 2
    3bbc:	24 60       	ori	r18, 0x04	; 4
    3bbe:	23 c0       	rjmp	.+70     	; 0x3c06 <vfprintf+0xca>
    3bc0:	28 60       	ori	r18, 0x08	; 8
    3bc2:	21 c0       	rjmp	.+66     	; 0x3c06 <vfprintf+0xca>
    3bc4:	27 fd       	sbrc	r18, 7
    3bc6:	27 c0       	rjmp	.+78     	; 0x3c16 <vfprintf+0xda>
    3bc8:	30 ed       	ldi	r19, 0xD0	; 208
    3bca:	38 0f       	add	r19, r24
    3bcc:	3a 30       	cpi	r19, 0x0A	; 10
    3bce:	78 f4       	brcc	.+30     	; 0x3bee <vfprintf+0xb2>
    3bd0:	26 ff       	sbrs	r18, 6
    3bd2:	06 c0       	rjmp	.+12     	; 0x3be0 <vfprintf+0xa4>
    3bd4:	fa e0       	ldi	r31, 0x0A	; 10
    3bd6:	5f 9e       	mul	r5, r31
    3bd8:	30 0d       	add	r19, r0
    3bda:	11 24       	eor	r1, r1
    3bdc:	53 2e       	mov	r5, r19
    3bde:	13 c0       	rjmp	.+38     	; 0x3c06 <vfprintf+0xca>
    3be0:	8a e0       	ldi	r24, 0x0A	; 10
    3be2:	38 9e       	mul	r3, r24
    3be4:	30 0d       	add	r19, r0
    3be6:	11 24       	eor	r1, r1
    3be8:	33 2e       	mov	r3, r19
    3bea:	20 62       	ori	r18, 0x20	; 32
    3bec:	0c c0       	rjmp	.+24     	; 0x3c06 <vfprintf+0xca>
    3bee:	8e 32       	cpi	r24, 0x2E	; 46
    3bf0:	21 f4       	brne	.+8      	; 0x3bfa <vfprintf+0xbe>
    3bf2:	26 fd       	sbrc	r18, 6
    3bf4:	6b c1       	rjmp	.+726    	; 0x3ecc <vfprintf+0x390>
    3bf6:	20 64       	ori	r18, 0x40	; 64
    3bf8:	06 c0       	rjmp	.+12     	; 0x3c06 <vfprintf+0xca>
    3bfa:	8c 36       	cpi	r24, 0x6C	; 108
    3bfc:	11 f4       	brne	.+4      	; 0x3c02 <vfprintf+0xc6>
    3bfe:	20 68       	ori	r18, 0x80	; 128
    3c00:	02 c0       	rjmp	.+4      	; 0x3c06 <vfprintf+0xca>
    3c02:	88 36       	cpi	r24, 0x68	; 104
    3c04:	41 f4       	brne	.+16     	; 0x3c16 <vfprintf+0xda>
    3c06:	f6 01       	movw	r30, r12
    3c08:	93 fd       	sbrc	r25, 3
    3c0a:	85 91       	lpm	r24, Z+
    3c0c:	93 ff       	sbrs	r25, 3
    3c0e:	81 91       	ld	r24, Z+
    3c10:	6f 01       	movw	r12, r30
    3c12:	81 11       	cpse	r24, r1
    3c14:	c1 cf       	rjmp	.-126    	; 0x3b98 <vfprintf+0x5c>
    3c16:	98 2f       	mov	r25, r24
    3c18:	9f 7d       	andi	r25, 0xDF	; 223
    3c1a:	95 54       	subi	r25, 0x45	; 69
    3c1c:	93 30       	cpi	r25, 0x03	; 3
    3c1e:	28 f4       	brcc	.+10     	; 0x3c2a <vfprintf+0xee>
    3c20:	0c 5f       	subi	r16, 0xFC	; 252
    3c22:	1f 4f       	sbci	r17, 0xFF	; 255
    3c24:	ff e3       	ldi	r31, 0x3F	; 63
    3c26:	f9 83       	std	Y+1, r31	; 0x01
    3c28:	0d c0       	rjmp	.+26     	; 0x3c44 <vfprintf+0x108>
    3c2a:	83 36       	cpi	r24, 0x63	; 99
    3c2c:	31 f0       	breq	.+12     	; 0x3c3a <vfprintf+0xfe>
    3c2e:	83 37       	cpi	r24, 0x73	; 115
    3c30:	71 f0       	breq	.+28     	; 0x3c4e <vfprintf+0x112>
    3c32:	83 35       	cpi	r24, 0x53	; 83
    3c34:	09 f0       	breq	.+2      	; 0x3c38 <vfprintf+0xfc>
    3c36:	5b c0       	rjmp	.+182    	; 0x3cee <vfprintf+0x1b2>
    3c38:	22 c0       	rjmp	.+68     	; 0x3c7e <vfprintf+0x142>
    3c3a:	f8 01       	movw	r30, r16
    3c3c:	80 81       	ld	r24, Z
    3c3e:	89 83       	std	Y+1, r24	; 0x01
    3c40:	0e 5f       	subi	r16, 0xFE	; 254
    3c42:	1f 4f       	sbci	r17, 0xFF	; 255
    3c44:	44 24       	eor	r4, r4
    3c46:	43 94       	inc	r4
    3c48:	51 2c       	mov	r5, r1
    3c4a:	54 01       	movw	r10, r8
    3c4c:	15 c0       	rjmp	.+42     	; 0x3c78 <vfprintf+0x13c>
    3c4e:	38 01       	movw	r6, r16
    3c50:	f2 e0       	ldi	r31, 0x02	; 2
    3c52:	6f 0e       	add	r6, r31
    3c54:	71 1c       	adc	r7, r1
    3c56:	f8 01       	movw	r30, r16
    3c58:	a0 80       	ld	r10, Z
    3c5a:	b1 80       	ldd	r11, Z+1	; 0x01
    3c5c:	26 ff       	sbrs	r18, 6
    3c5e:	03 c0       	rjmp	.+6      	; 0x3c66 <vfprintf+0x12a>
    3c60:	65 2d       	mov	r22, r5
    3c62:	70 e0       	ldi	r23, 0x00	; 0
    3c64:	02 c0       	rjmp	.+4      	; 0x3c6a <vfprintf+0x12e>
    3c66:	6f ef       	ldi	r22, 0xFF	; 255
    3c68:	7f ef       	ldi	r23, 0xFF	; 255
    3c6a:	c5 01       	movw	r24, r10
    3c6c:	2c 87       	std	Y+12, r18	; 0x0c
    3c6e:	0e 94 83 1f 	call	0x3f06	; 0x3f06 <strnlen>
    3c72:	2c 01       	movw	r4, r24
    3c74:	83 01       	movw	r16, r6
    3c76:	2c 85       	ldd	r18, Y+12	; 0x0c
    3c78:	2f 77       	andi	r18, 0x7F	; 127
    3c7a:	22 2e       	mov	r2, r18
    3c7c:	17 c0       	rjmp	.+46     	; 0x3cac <vfprintf+0x170>
    3c7e:	38 01       	movw	r6, r16
    3c80:	f2 e0       	ldi	r31, 0x02	; 2
    3c82:	6f 0e       	add	r6, r31
    3c84:	71 1c       	adc	r7, r1
    3c86:	f8 01       	movw	r30, r16
    3c88:	a0 80       	ld	r10, Z
    3c8a:	b1 80       	ldd	r11, Z+1	; 0x01
    3c8c:	26 ff       	sbrs	r18, 6
    3c8e:	03 c0       	rjmp	.+6      	; 0x3c96 <vfprintf+0x15a>
    3c90:	65 2d       	mov	r22, r5
    3c92:	70 e0       	ldi	r23, 0x00	; 0
    3c94:	02 c0       	rjmp	.+4      	; 0x3c9a <vfprintf+0x15e>
    3c96:	6f ef       	ldi	r22, 0xFF	; 255
    3c98:	7f ef       	ldi	r23, 0xFF	; 255
    3c9a:	c5 01       	movw	r24, r10
    3c9c:	2c 87       	std	Y+12, r18	; 0x0c
    3c9e:	0e 94 78 1f 	call	0x3ef0	; 0x3ef0 <strnlen_P>
    3ca2:	2c 01       	movw	r4, r24
    3ca4:	2c 85       	ldd	r18, Y+12	; 0x0c
    3ca6:	20 68       	ori	r18, 0x80	; 128
    3ca8:	22 2e       	mov	r2, r18
    3caa:	83 01       	movw	r16, r6
    3cac:	23 fc       	sbrc	r2, 3
    3cae:	1b c0       	rjmp	.+54     	; 0x3ce6 <vfprintf+0x1aa>
    3cb0:	83 2d       	mov	r24, r3
    3cb2:	90 e0       	ldi	r25, 0x00	; 0
    3cb4:	48 16       	cp	r4, r24
    3cb6:	59 06       	cpc	r5, r25
    3cb8:	b0 f4       	brcc	.+44     	; 0x3ce6 <vfprintf+0x1aa>
    3cba:	b7 01       	movw	r22, r14
    3cbc:	80 e2       	ldi	r24, 0x20	; 32
    3cbe:	90 e0       	ldi	r25, 0x00	; 0
    3cc0:	0e 94 8e 1f 	call	0x3f1c	; 0x3f1c <fputc>
    3cc4:	3a 94       	dec	r3
    3cc6:	f4 cf       	rjmp	.-24     	; 0x3cb0 <vfprintf+0x174>
    3cc8:	f5 01       	movw	r30, r10
    3cca:	27 fc       	sbrc	r2, 7
    3ccc:	85 91       	lpm	r24, Z+
    3cce:	27 fe       	sbrs	r2, 7
    3cd0:	81 91       	ld	r24, Z+
    3cd2:	5f 01       	movw	r10, r30
    3cd4:	b7 01       	movw	r22, r14
    3cd6:	90 e0       	ldi	r25, 0x00	; 0
    3cd8:	0e 94 8e 1f 	call	0x3f1c	; 0x3f1c <fputc>
    3cdc:	31 10       	cpse	r3, r1
    3cde:	3a 94       	dec	r3
    3ce0:	f1 e0       	ldi	r31, 0x01	; 1
    3ce2:	4f 1a       	sub	r4, r31
    3ce4:	51 08       	sbc	r5, r1
    3ce6:	41 14       	cp	r4, r1
    3ce8:	51 04       	cpc	r5, r1
    3cea:	71 f7       	brne	.-36     	; 0x3cc8 <vfprintf+0x18c>
    3cec:	e5 c0       	rjmp	.+458    	; 0x3eb8 <vfprintf+0x37c>
    3cee:	84 36       	cpi	r24, 0x64	; 100
    3cf0:	11 f0       	breq	.+4      	; 0x3cf6 <vfprintf+0x1ba>
    3cf2:	89 36       	cpi	r24, 0x69	; 105
    3cf4:	39 f5       	brne	.+78     	; 0x3d44 <vfprintf+0x208>
    3cf6:	f8 01       	movw	r30, r16
    3cf8:	27 ff       	sbrs	r18, 7
    3cfa:	07 c0       	rjmp	.+14     	; 0x3d0a <vfprintf+0x1ce>
    3cfc:	60 81       	ld	r22, Z
    3cfe:	71 81       	ldd	r23, Z+1	; 0x01
    3d00:	82 81       	ldd	r24, Z+2	; 0x02
    3d02:	93 81       	ldd	r25, Z+3	; 0x03
    3d04:	0c 5f       	subi	r16, 0xFC	; 252
    3d06:	1f 4f       	sbci	r17, 0xFF	; 255
    3d08:	08 c0       	rjmp	.+16     	; 0x3d1a <vfprintf+0x1de>
    3d0a:	60 81       	ld	r22, Z
    3d0c:	71 81       	ldd	r23, Z+1	; 0x01
    3d0e:	88 27       	eor	r24, r24
    3d10:	77 fd       	sbrc	r23, 7
    3d12:	80 95       	com	r24
    3d14:	98 2f       	mov	r25, r24
    3d16:	0e 5f       	subi	r16, 0xFE	; 254
    3d18:	1f 4f       	sbci	r17, 0xFF	; 255
    3d1a:	2f 76       	andi	r18, 0x6F	; 111
    3d1c:	b2 2e       	mov	r11, r18
    3d1e:	97 ff       	sbrs	r25, 7
    3d20:	09 c0       	rjmp	.+18     	; 0x3d34 <vfprintf+0x1f8>
    3d22:	90 95       	com	r25
    3d24:	80 95       	com	r24
    3d26:	70 95       	com	r23
    3d28:	61 95       	neg	r22
    3d2a:	7f 4f       	sbci	r23, 0xFF	; 255
    3d2c:	8f 4f       	sbci	r24, 0xFF	; 255
    3d2e:	9f 4f       	sbci	r25, 0xFF	; 255
    3d30:	20 68       	ori	r18, 0x80	; 128
    3d32:	b2 2e       	mov	r11, r18
    3d34:	2a e0       	ldi	r18, 0x0A	; 10
    3d36:	30 e0       	ldi	r19, 0x00	; 0
    3d38:	a4 01       	movw	r20, r8
    3d3a:	0e 94 c0 1f 	call	0x3f80	; 0x3f80 <__ultoa_invert>
    3d3e:	a8 2e       	mov	r10, r24
    3d40:	a8 18       	sub	r10, r8
    3d42:	44 c0       	rjmp	.+136    	; 0x3dcc <vfprintf+0x290>
    3d44:	85 37       	cpi	r24, 0x75	; 117
    3d46:	29 f4       	brne	.+10     	; 0x3d52 <vfprintf+0x216>
    3d48:	2f 7e       	andi	r18, 0xEF	; 239
    3d4a:	b2 2e       	mov	r11, r18
    3d4c:	2a e0       	ldi	r18, 0x0A	; 10
    3d4e:	30 e0       	ldi	r19, 0x00	; 0
    3d50:	25 c0       	rjmp	.+74     	; 0x3d9c <vfprintf+0x260>
    3d52:	f2 2f       	mov	r31, r18
    3d54:	f9 7f       	andi	r31, 0xF9	; 249
    3d56:	bf 2e       	mov	r11, r31
    3d58:	8f 36       	cpi	r24, 0x6F	; 111
    3d5a:	c1 f0       	breq	.+48     	; 0x3d8c <vfprintf+0x250>
    3d5c:	18 f4       	brcc	.+6      	; 0x3d64 <vfprintf+0x228>
    3d5e:	88 35       	cpi	r24, 0x58	; 88
    3d60:	79 f0       	breq	.+30     	; 0x3d80 <vfprintf+0x244>
    3d62:	b4 c0       	rjmp	.+360    	; 0x3ecc <vfprintf+0x390>
    3d64:	80 37       	cpi	r24, 0x70	; 112
    3d66:	19 f0       	breq	.+6      	; 0x3d6e <vfprintf+0x232>
    3d68:	88 37       	cpi	r24, 0x78	; 120
    3d6a:	21 f0       	breq	.+8      	; 0x3d74 <vfprintf+0x238>
    3d6c:	af c0       	rjmp	.+350    	; 0x3ecc <vfprintf+0x390>
    3d6e:	2f 2f       	mov	r18, r31
    3d70:	20 61       	ori	r18, 0x10	; 16
    3d72:	b2 2e       	mov	r11, r18
    3d74:	b4 fe       	sbrs	r11, 4
    3d76:	0d c0       	rjmp	.+26     	; 0x3d92 <vfprintf+0x256>
    3d78:	8b 2d       	mov	r24, r11
    3d7a:	84 60       	ori	r24, 0x04	; 4
    3d7c:	b8 2e       	mov	r11, r24
    3d7e:	09 c0       	rjmp	.+18     	; 0x3d92 <vfprintf+0x256>
    3d80:	24 ff       	sbrs	r18, 4
    3d82:	0a c0       	rjmp	.+20     	; 0x3d98 <vfprintf+0x25c>
    3d84:	9f 2f       	mov	r25, r31
    3d86:	96 60       	ori	r25, 0x06	; 6
    3d88:	b9 2e       	mov	r11, r25
    3d8a:	06 c0       	rjmp	.+12     	; 0x3d98 <vfprintf+0x25c>
    3d8c:	28 e0       	ldi	r18, 0x08	; 8
    3d8e:	30 e0       	ldi	r19, 0x00	; 0
    3d90:	05 c0       	rjmp	.+10     	; 0x3d9c <vfprintf+0x260>
    3d92:	20 e1       	ldi	r18, 0x10	; 16
    3d94:	30 e0       	ldi	r19, 0x00	; 0
    3d96:	02 c0       	rjmp	.+4      	; 0x3d9c <vfprintf+0x260>
    3d98:	20 e1       	ldi	r18, 0x10	; 16
    3d9a:	32 e0       	ldi	r19, 0x02	; 2
    3d9c:	f8 01       	movw	r30, r16
    3d9e:	b7 fe       	sbrs	r11, 7
    3da0:	07 c0       	rjmp	.+14     	; 0x3db0 <vfprintf+0x274>
    3da2:	60 81       	ld	r22, Z
    3da4:	71 81       	ldd	r23, Z+1	; 0x01
    3da6:	82 81       	ldd	r24, Z+2	; 0x02
    3da8:	93 81       	ldd	r25, Z+3	; 0x03
    3daa:	0c 5f       	subi	r16, 0xFC	; 252
    3dac:	1f 4f       	sbci	r17, 0xFF	; 255
    3dae:	06 c0       	rjmp	.+12     	; 0x3dbc <vfprintf+0x280>
    3db0:	60 81       	ld	r22, Z
    3db2:	71 81       	ldd	r23, Z+1	; 0x01
    3db4:	80 e0       	ldi	r24, 0x00	; 0
    3db6:	90 e0       	ldi	r25, 0x00	; 0
    3db8:	0e 5f       	subi	r16, 0xFE	; 254
    3dba:	1f 4f       	sbci	r17, 0xFF	; 255
    3dbc:	a4 01       	movw	r20, r8
    3dbe:	0e 94 c0 1f 	call	0x3f80	; 0x3f80 <__ultoa_invert>
    3dc2:	a8 2e       	mov	r10, r24
    3dc4:	a8 18       	sub	r10, r8
    3dc6:	fb 2d       	mov	r31, r11
    3dc8:	ff 77       	andi	r31, 0x7F	; 127
    3dca:	bf 2e       	mov	r11, r31
    3dcc:	b6 fe       	sbrs	r11, 6
    3dce:	0b c0       	rjmp	.+22     	; 0x3de6 <vfprintf+0x2aa>
    3dd0:	2b 2d       	mov	r18, r11
    3dd2:	2e 7f       	andi	r18, 0xFE	; 254
    3dd4:	a5 14       	cp	r10, r5
    3dd6:	50 f4       	brcc	.+20     	; 0x3dec <vfprintf+0x2b0>
    3dd8:	b4 fe       	sbrs	r11, 4
    3dda:	0a c0       	rjmp	.+20     	; 0x3df0 <vfprintf+0x2b4>
    3ddc:	b2 fc       	sbrc	r11, 2
    3dde:	08 c0       	rjmp	.+16     	; 0x3df0 <vfprintf+0x2b4>
    3de0:	2b 2d       	mov	r18, r11
    3de2:	2e 7e       	andi	r18, 0xEE	; 238
    3de4:	05 c0       	rjmp	.+10     	; 0x3df0 <vfprintf+0x2b4>
    3de6:	7a 2c       	mov	r7, r10
    3de8:	2b 2d       	mov	r18, r11
    3dea:	03 c0       	rjmp	.+6      	; 0x3df2 <vfprintf+0x2b6>
    3dec:	7a 2c       	mov	r7, r10
    3dee:	01 c0       	rjmp	.+2      	; 0x3df2 <vfprintf+0x2b6>
    3df0:	75 2c       	mov	r7, r5
    3df2:	24 ff       	sbrs	r18, 4
    3df4:	0d c0       	rjmp	.+26     	; 0x3e10 <vfprintf+0x2d4>
    3df6:	fe 01       	movw	r30, r28
    3df8:	ea 0d       	add	r30, r10
    3dfa:	f1 1d       	adc	r31, r1
    3dfc:	80 81       	ld	r24, Z
    3dfe:	80 33       	cpi	r24, 0x30	; 48
    3e00:	11 f4       	brne	.+4      	; 0x3e06 <vfprintf+0x2ca>
    3e02:	29 7e       	andi	r18, 0xE9	; 233
    3e04:	09 c0       	rjmp	.+18     	; 0x3e18 <vfprintf+0x2dc>
    3e06:	22 ff       	sbrs	r18, 2
    3e08:	06 c0       	rjmp	.+12     	; 0x3e16 <vfprintf+0x2da>
    3e0a:	73 94       	inc	r7
    3e0c:	73 94       	inc	r7
    3e0e:	04 c0       	rjmp	.+8      	; 0x3e18 <vfprintf+0x2dc>
    3e10:	82 2f       	mov	r24, r18
    3e12:	86 78       	andi	r24, 0x86	; 134
    3e14:	09 f0       	breq	.+2      	; 0x3e18 <vfprintf+0x2dc>
    3e16:	73 94       	inc	r7
    3e18:	23 fd       	sbrc	r18, 3
    3e1a:	13 c0       	rjmp	.+38     	; 0x3e42 <vfprintf+0x306>
    3e1c:	20 ff       	sbrs	r18, 0
    3e1e:	06 c0       	rjmp	.+12     	; 0x3e2c <vfprintf+0x2f0>
    3e20:	5a 2c       	mov	r5, r10
    3e22:	73 14       	cp	r7, r3
    3e24:	18 f4       	brcc	.+6      	; 0x3e2c <vfprintf+0x2f0>
    3e26:	53 0c       	add	r5, r3
    3e28:	57 18       	sub	r5, r7
    3e2a:	73 2c       	mov	r7, r3
    3e2c:	73 14       	cp	r7, r3
    3e2e:	68 f4       	brcc	.+26     	; 0x3e4a <vfprintf+0x30e>
    3e30:	b7 01       	movw	r22, r14
    3e32:	80 e2       	ldi	r24, 0x20	; 32
    3e34:	90 e0       	ldi	r25, 0x00	; 0
    3e36:	2c 87       	std	Y+12, r18	; 0x0c
    3e38:	0e 94 8e 1f 	call	0x3f1c	; 0x3f1c <fputc>
    3e3c:	73 94       	inc	r7
    3e3e:	2c 85       	ldd	r18, Y+12	; 0x0c
    3e40:	f5 cf       	rjmp	.-22     	; 0x3e2c <vfprintf+0x2f0>
    3e42:	73 14       	cp	r7, r3
    3e44:	10 f4       	brcc	.+4      	; 0x3e4a <vfprintf+0x30e>
    3e46:	37 18       	sub	r3, r7
    3e48:	01 c0       	rjmp	.+2      	; 0x3e4c <vfprintf+0x310>
    3e4a:	31 2c       	mov	r3, r1
    3e4c:	24 ff       	sbrs	r18, 4
    3e4e:	12 c0       	rjmp	.+36     	; 0x3e74 <vfprintf+0x338>
    3e50:	b7 01       	movw	r22, r14
    3e52:	80 e3       	ldi	r24, 0x30	; 48
    3e54:	90 e0       	ldi	r25, 0x00	; 0
    3e56:	2c 87       	std	Y+12, r18	; 0x0c
    3e58:	0e 94 8e 1f 	call	0x3f1c	; 0x3f1c <fputc>
    3e5c:	2c 85       	ldd	r18, Y+12	; 0x0c
    3e5e:	22 ff       	sbrs	r18, 2
    3e60:	17 c0       	rjmp	.+46     	; 0x3e90 <vfprintf+0x354>
    3e62:	21 ff       	sbrs	r18, 1
    3e64:	03 c0       	rjmp	.+6      	; 0x3e6c <vfprintf+0x330>
    3e66:	88 e5       	ldi	r24, 0x58	; 88
    3e68:	90 e0       	ldi	r25, 0x00	; 0
    3e6a:	02 c0       	rjmp	.+4      	; 0x3e70 <vfprintf+0x334>
    3e6c:	88 e7       	ldi	r24, 0x78	; 120
    3e6e:	90 e0       	ldi	r25, 0x00	; 0
    3e70:	b7 01       	movw	r22, r14
    3e72:	0c c0       	rjmp	.+24     	; 0x3e8c <vfprintf+0x350>
    3e74:	82 2f       	mov	r24, r18
    3e76:	86 78       	andi	r24, 0x86	; 134
    3e78:	59 f0       	breq	.+22     	; 0x3e90 <vfprintf+0x354>
    3e7a:	21 fd       	sbrc	r18, 1
    3e7c:	02 c0       	rjmp	.+4      	; 0x3e82 <vfprintf+0x346>
    3e7e:	80 e2       	ldi	r24, 0x20	; 32
    3e80:	01 c0       	rjmp	.+2      	; 0x3e84 <vfprintf+0x348>
    3e82:	8b e2       	ldi	r24, 0x2B	; 43
    3e84:	27 fd       	sbrc	r18, 7
    3e86:	8d e2       	ldi	r24, 0x2D	; 45
    3e88:	b7 01       	movw	r22, r14
    3e8a:	90 e0       	ldi	r25, 0x00	; 0
    3e8c:	0e 94 8e 1f 	call	0x3f1c	; 0x3f1c <fputc>
    3e90:	a5 14       	cp	r10, r5
    3e92:	38 f4       	brcc	.+14     	; 0x3ea2 <vfprintf+0x366>
    3e94:	b7 01       	movw	r22, r14
    3e96:	80 e3       	ldi	r24, 0x30	; 48
    3e98:	90 e0       	ldi	r25, 0x00	; 0
    3e9a:	0e 94 8e 1f 	call	0x3f1c	; 0x3f1c <fputc>
    3e9e:	5a 94       	dec	r5
    3ea0:	f7 cf       	rjmp	.-18     	; 0x3e90 <vfprintf+0x354>
    3ea2:	aa 94       	dec	r10
    3ea4:	f4 01       	movw	r30, r8
    3ea6:	ea 0d       	add	r30, r10
    3ea8:	f1 1d       	adc	r31, r1
    3eaa:	80 81       	ld	r24, Z
    3eac:	b7 01       	movw	r22, r14
    3eae:	90 e0       	ldi	r25, 0x00	; 0
    3eb0:	0e 94 8e 1f 	call	0x3f1c	; 0x3f1c <fputc>
    3eb4:	a1 10       	cpse	r10, r1
    3eb6:	f5 cf       	rjmp	.-22     	; 0x3ea2 <vfprintf+0x366>
    3eb8:	33 20       	and	r3, r3
    3eba:	09 f4       	brne	.+2      	; 0x3ebe <vfprintf+0x382>
    3ebc:	51 ce       	rjmp	.-862    	; 0x3b60 <vfprintf+0x24>
    3ebe:	b7 01       	movw	r22, r14
    3ec0:	80 e2       	ldi	r24, 0x20	; 32
    3ec2:	90 e0       	ldi	r25, 0x00	; 0
    3ec4:	0e 94 8e 1f 	call	0x3f1c	; 0x3f1c <fputc>
    3ec8:	3a 94       	dec	r3
    3eca:	f6 cf       	rjmp	.-20     	; 0x3eb8 <vfprintf+0x37c>
    3ecc:	f7 01       	movw	r30, r14
    3ece:	86 81       	ldd	r24, Z+6	; 0x06
    3ed0:	97 81       	ldd	r25, Z+7	; 0x07
    3ed2:	02 c0       	rjmp	.+4      	; 0x3ed8 <vfprintf+0x39c>
    3ed4:	8f ef       	ldi	r24, 0xFF	; 255
    3ed6:	9f ef       	ldi	r25, 0xFF	; 255
    3ed8:	2c 96       	adiw	r28, 0x0c	; 12
    3eda:	e2 e1       	ldi	r30, 0x12	; 18
    3edc:	0c 94 95 20 	jmp	0x412a	; 0x412a <__epilogue_restores__>

00003ee0 <__eerd_byte_m32u4>:
    3ee0:	f9 99       	sbic	0x1f, 1	; 31
    3ee2:	fe cf       	rjmp	.-4      	; 0x3ee0 <__eerd_byte_m32u4>
    3ee4:	92 bd       	out	0x22, r25	; 34
    3ee6:	81 bd       	out	0x21, r24	; 33
    3ee8:	f8 9a       	sbi	0x1f, 0	; 31
    3eea:	99 27       	eor	r25, r25
    3eec:	80 b5       	in	r24, 0x20	; 32
    3eee:	08 95       	ret

00003ef0 <strnlen_P>:
    3ef0:	fc 01       	movw	r30, r24
    3ef2:	05 90       	lpm	r0, Z+
    3ef4:	61 50       	subi	r22, 0x01	; 1
    3ef6:	70 40       	sbci	r23, 0x00	; 0
    3ef8:	01 10       	cpse	r0, r1
    3efa:	d8 f7       	brcc	.-10     	; 0x3ef2 <strnlen_P+0x2>
    3efc:	80 95       	com	r24
    3efe:	90 95       	com	r25
    3f00:	8e 0f       	add	r24, r30
    3f02:	9f 1f       	adc	r25, r31
    3f04:	08 95       	ret

00003f06 <strnlen>:
    3f06:	fc 01       	movw	r30, r24
    3f08:	61 50       	subi	r22, 0x01	; 1
    3f0a:	70 40       	sbci	r23, 0x00	; 0
    3f0c:	01 90       	ld	r0, Z+
    3f0e:	01 10       	cpse	r0, r1
    3f10:	d8 f7       	brcc	.-10     	; 0x3f08 <strnlen+0x2>
    3f12:	80 95       	com	r24
    3f14:	90 95       	com	r25
    3f16:	8e 0f       	add	r24, r30
    3f18:	9f 1f       	adc	r25, r31
    3f1a:	08 95       	ret

00003f1c <fputc>:
    3f1c:	0f 93       	push	r16
    3f1e:	1f 93       	push	r17
    3f20:	cf 93       	push	r28
    3f22:	df 93       	push	r29
    3f24:	18 2f       	mov	r17, r24
    3f26:	09 2f       	mov	r16, r25
    3f28:	eb 01       	movw	r28, r22
    3f2a:	8b 81       	ldd	r24, Y+3	; 0x03
    3f2c:	81 fd       	sbrc	r24, 1
    3f2e:	03 c0       	rjmp	.+6      	; 0x3f36 <fputc+0x1a>
    3f30:	8f ef       	ldi	r24, 0xFF	; 255
    3f32:	9f ef       	ldi	r25, 0xFF	; 255
    3f34:	20 c0       	rjmp	.+64     	; 0x3f76 <fputc+0x5a>
    3f36:	82 ff       	sbrs	r24, 2
    3f38:	10 c0       	rjmp	.+32     	; 0x3f5a <fputc+0x3e>
    3f3a:	4e 81       	ldd	r20, Y+6	; 0x06
    3f3c:	5f 81       	ldd	r21, Y+7	; 0x07
    3f3e:	2c 81       	ldd	r18, Y+4	; 0x04
    3f40:	3d 81       	ldd	r19, Y+5	; 0x05
    3f42:	42 17       	cp	r20, r18
    3f44:	53 07       	cpc	r21, r19
    3f46:	7c f4       	brge	.+30     	; 0x3f66 <fputc+0x4a>
    3f48:	e8 81       	ld	r30, Y
    3f4a:	f9 81       	ldd	r31, Y+1	; 0x01
    3f4c:	9f 01       	movw	r18, r30
    3f4e:	2f 5f       	subi	r18, 0xFF	; 255
    3f50:	3f 4f       	sbci	r19, 0xFF	; 255
    3f52:	39 83       	std	Y+1, r19	; 0x01
    3f54:	28 83       	st	Y, r18
    3f56:	10 83       	st	Z, r17
    3f58:	06 c0       	rjmp	.+12     	; 0x3f66 <fputc+0x4a>
    3f5a:	e8 85       	ldd	r30, Y+8	; 0x08
    3f5c:	f9 85       	ldd	r31, Y+9	; 0x09
    3f5e:	81 2f       	mov	r24, r17
    3f60:	09 95       	icall
    3f62:	89 2b       	or	r24, r25
    3f64:	29 f7       	brne	.-54     	; 0x3f30 <fputc+0x14>
    3f66:	2e 81       	ldd	r18, Y+6	; 0x06
    3f68:	3f 81       	ldd	r19, Y+7	; 0x07
    3f6a:	2f 5f       	subi	r18, 0xFF	; 255
    3f6c:	3f 4f       	sbci	r19, 0xFF	; 255
    3f6e:	3f 83       	std	Y+7, r19	; 0x07
    3f70:	2e 83       	std	Y+6, r18	; 0x06
    3f72:	81 2f       	mov	r24, r17
    3f74:	90 2f       	mov	r25, r16
    3f76:	df 91       	pop	r29
    3f78:	cf 91       	pop	r28
    3f7a:	1f 91       	pop	r17
    3f7c:	0f 91       	pop	r16
    3f7e:	08 95       	ret

00003f80 <__ultoa_invert>:
    3f80:	fa 01       	movw	r30, r20
    3f82:	aa 27       	eor	r26, r26
    3f84:	28 30       	cpi	r18, 0x08	; 8
    3f86:	51 f1       	breq	.+84     	; 0x3fdc <__ultoa_invert+0x5c>
    3f88:	20 31       	cpi	r18, 0x10	; 16
    3f8a:	81 f1       	breq	.+96     	; 0x3fec <__ultoa_invert+0x6c>
    3f8c:	e8 94       	clt
    3f8e:	6f 93       	push	r22
    3f90:	6e 7f       	andi	r22, 0xFE	; 254
    3f92:	6e 5f       	subi	r22, 0xFE	; 254
    3f94:	7f 4f       	sbci	r23, 0xFF	; 255
    3f96:	8f 4f       	sbci	r24, 0xFF	; 255
    3f98:	9f 4f       	sbci	r25, 0xFF	; 255
    3f9a:	af 4f       	sbci	r26, 0xFF	; 255
    3f9c:	b1 e0       	ldi	r27, 0x01	; 1
    3f9e:	3e d0       	rcall	.+124    	; 0x401c <__ultoa_invert+0x9c>
    3fa0:	b4 e0       	ldi	r27, 0x04	; 4
    3fa2:	3c d0       	rcall	.+120    	; 0x401c <__ultoa_invert+0x9c>
    3fa4:	67 0f       	add	r22, r23
    3fa6:	78 1f       	adc	r23, r24
    3fa8:	89 1f       	adc	r24, r25
    3faa:	9a 1f       	adc	r25, r26
    3fac:	a1 1d       	adc	r26, r1
    3fae:	68 0f       	add	r22, r24
    3fb0:	79 1f       	adc	r23, r25
    3fb2:	8a 1f       	adc	r24, r26
    3fb4:	91 1d       	adc	r25, r1
    3fb6:	a1 1d       	adc	r26, r1
    3fb8:	6a 0f       	add	r22, r26
    3fba:	71 1d       	adc	r23, r1
    3fbc:	81 1d       	adc	r24, r1
    3fbe:	91 1d       	adc	r25, r1
    3fc0:	a1 1d       	adc	r26, r1
    3fc2:	20 d0       	rcall	.+64     	; 0x4004 <__ultoa_invert+0x84>
    3fc4:	09 f4       	brne	.+2      	; 0x3fc8 <__ultoa_invert+0x48>
    3fc6:	68 94       	set
    3fc8:	3f 91       	pop	r19
    3fca:	2a e0       	ldi	r18, 0x0A	; 10
    3fcc:	26 9f       	mul	r18, r22
    3fce:	11 24       	eor	r1, r1
    3fd0:	30 19       	sub	r19, r0
    3fd2:	30 5d       	subi	r19, 0xD0	; 208
    3fd4:	31 93       	st	Z+, r19
    3fd6:	de f6       	brtc	.-74     	; 0x3f8e <__ultoa_invert+0xe>
    3fd8:	cf 01       	movw	r24, r30
    3fda:	08 95       	ret
    3fdc:	46 2f       	mov	r20, r22
    3fde:	47 70       	andi	r20, 0x07	; 7
    3fe0:	40 5d       	subi	r20, 0xD0	; 208
    3fe2:	41 93       	st	Z+, r20
    3fe4:	b3 e0       	ldi	r27, 0x03	; 3
    3fe6:	0f d0       	rcall	.+30     	; 0x4006 <__ultoa_invert+0x86>
    3fe8:	c9 f7       	brne	.-14     	; 0x3fdc <__ultoa_invert+0x5c>
    3fea:	f6 cf       	rjmp	.-20     	; 0x3fd8 <__ultoa_invert+0x58>
    3fec:	46 2f       	mov	r20, r22
    3fee:	4f 70       	andi	r20, 0x0F	; 15
    3ff0:	40 5d       	subi	r20, 0xD0	; 208
    3ff2:	4a 33       	cpi	r20, 0x3A	; 58
    3ff4:	18 f0       	brcs	.+6      	; 0x3ffc <__ultoa_invert+0x7c>
    3ff6:	49 5d       	subi	r20, 0xD9	; 217
    3ff8:	31 fd       	sbrc	r19, 1
    3ffa:	40 52       	subi	r20, 0x20	; 32
    3ffc:	41 93       	st	Z+, r20
    3ffe:	02 d0       	rcall	.+4      	; 0x4004 <__ultoa_invert+0x84>
    4000:	a9 f7       	brne	.-22     	; 0x3fec <__ultoa_invert+0x6c>
    4002:	ea cf       	rjmp	.-44     	; 0x3fd8 <__ultoa_invert+0x58>
    4004:	b4 e0       	ldi	r27, 0x04	; 4
    4006:	a6 95       	lsr	r26
    4008:	97 95       	ror	r25
    400a:	87 95       	ror	r24
    400c:	77 95       	ror	r23
    400e:	67 95       	ror	r22
    4010:	ba 95       	dec	r27
    4012:	c9 f7       	brne	.-14     	; 0x4006 <__ultoa_invert+0x86>
    4014:	00 97       	sbiw	r24, 0x00	; 0
    4016:	61 05       	cpc	r22, r1
    4018:	71 05       	cpc	r23, r1
    401a:	08 95       	ret
    401c:	9b 01       	movw	r18, r22
    401e:	ac 01       	movw	r20, r24
    4020:	0a 2e       	mov	r0, r26
    4022:	06 94       	lsr	r0
    4024:	57 95       	ror	r21
    4026:	47 95       	ror	r20
    4028:	37 95       	ror	r19
    402a:	27 95       	ror	r18
    402c:	ba 95       	dec	r27
    402e:	c9 f7       	brne	.-14     	; 0x4022 <__ultoa_invert+0xa2>
    4030:	62 0f       	add	r22, r18
    4032:	73 1f       	adc	r23, r19
    4034:	84 1f       	adc	r24, r20
    4036:	95 1f       	adc	r25, r21
    4038:	a0 1d       	adc	r26, r0
    403a:	08 95       	ret

0000403c <__divmodhi4>:
    403c:	97 fb       	bst	r25, 7
    403e:	07 2e       	mov	r0, r23
    4040:	16 f4       	brtc	.+4      	; 0x4046 <__divmodhi4+0xa>
    4042:	00 94       	com	r0
    4044:	07 d0       	rcall	.+14     	; 0x4054 <__divmodhi4_neg1>
    4046:	77 fd       	sbrc	r23, 7
    4048:	09 d0       	rcall	.+18     	; 0x405c <__divmodhi4_neg2>
    404a:	0e 94 b0 20 	call	0x4160	; 0x4160 <__udivmodhi4>
    404e:	07 fc       	sbrc	r0, 7
    4050:	05 d0       	rcall	.+10     	; 0x405c <__divmodhi4_neg2>
    4052:	3e f4       	brtc	.+14     	; 0x4062 <__divmodhi4_exit>

00004054 <__divmodhi4_neg1>:
    4054:	90 95       	com	r25
    4056:	81 95       	neg	r24
    4058:	9f 4f       	sbci	r25, 0xFF	; 255
    405a:	08 95       	ret

0000405c <__divmodhi4_neg2>:
    405c:	70 95       	com	r23
    405e:	61 95       	neg	r22
    4060:	7f 4f       	sbci	r23, 0xFF	; 255

00004062 <__divmodhi4_exit>:
    4062:	08 95       	ret

00004064 <__udivmodsi4>:
    4064:	a1 e2       	ldi	r26, 0x21	; 33
    4066:	1a 2e       	mov	r1, r26
    4068:	aa 1b       	sub	r26, r26
    406a:	bb 1b       	sub	r27, r27
    406c:	fd 01       	movw	r30, r26
    406e:	0d c0       	rjmp	.+26     	; 0x408a <__udivmodsi4_ep>

00004070 <__udivmodsi4_loop>:
    4070:	aa 1f       	adc	r26, r26
    4072:	bb 1f       	adc	r27, r27
    4074:	ee 1f       	adc	r30, r30
    4076:	ff 1f       	adc	r31, r31
    4078:	a2 17       	cp	r26, r18
    407a:	b3 07       	cpc	r27, r19
    407c:	e4 07       	cpc	r30, r20
    407e:	f5 07       	cpc	r31, r21
    4080:	20 f0       	brcs	.+8      	; 0x408a <__udivmodsi4_ep>
    4082:	a2 1b       	sub	r26, r18
    4084:	b3 0b       	sbc	r27, r19
    4086:	e4 0b       	sbc	r30, r20
    4088:	f5 0b       	sbc	r31, r21

0000408a <__udivmodsi4_ep>:
    408a:	66 1f       	adc	r22, r22
    408c:	77 1f       	adc	r23, r23
    408e:	88 1f       	adc	r24, r24
    4090:	99 1f       	adc	r25, r25
    4092:	1a 94       	dec	r1
    4094:	69 f7       	brne	.-38     	; 0x4070 <__udivmodsi4_loop>
    4096:	60 95       	com	r22
    4098:	70 95       	com	r23
    409a:	80 95       	com	r24
    409c:	90 95       	com	r25
    409e:	9b 01       	movw	r18, r22
    40a0:	ac 01       	movw	r20, r24
    40a2:	bd 01       	movw	r22, r26
    40a4:	cf 01       	movw	r24, r30
    40a6:	08 95       	ret

000040a8 <__divmodsi4>:
    40a8:	05 2e       	mov	r0, r21
    40aa:	97 fb       	bst	r25, 7
    40ac:	1e f4       	brtc	.+6      	; 0x40b4 <__divmodsi4+0xc>
    40ae:	00 94       	com	r0
    40b0:	0e 94 6b 20 	call	0x40d6	; 0x40d6 <__negsi2>
    40b4:	57 fd       	sbrc	r21, 7
    40b6:	07 d0       	rcall	.+14     	; 0x40c6 <__divmodsi4_neg2>
    40b8:	0e 94 32 20 	call	0x4064	; 0x4064 <__udivmodsi4>
    40bc:	07 fc       	sbrc	r0, 7
    40be:	03 d0       	rcall	.+6      	; 0x40c6 <__divmodsi4_neg2>
    40c0:	4e f4       	brtc	.+18     	; 0x40d4 <__divmodsi4_exit>
    40c2:	0c 94 6b 20 	jmp	0x40d6	; 0x40d6 <__negsi2>

000040c6 <__divmodsi4_neg2>:
    40c6:	50 95       	com	r21
    40c8:	40 95       	com	r20
    40ca:	30 95       	com	r19
    40cc:	21 95       	neg	r18
    40ce:	3f 4f       	sbci	r19, 0xFF	; 255
    40d0:	4f 4f       	sbci	r20, 0xFF	; 255
    40d2:	5f 4f       	sbci	r21, 0xFF	; 255

000040d4 <__divmodsi4_exit>:
    40d4:	08 95       	ret

000040d6 <__negsi2>:
    40d6:	90 95       	com	r25
    40d8:	80 95       	com	r24
    40da:	70 95       	com	r23
    40dc:	61 95       	neg	r22
    40de:	7f 4f       	sbci	r23, 0xFF	; 255
    40e0:	8f 4f       	sbci	r24, 0xFF	; 255
    40e2:	9f 4f       	sbci	r25, 0xFF	; 255
    40e4:	08 95       	ret

000040e6 <__tablejump2__>:
    40e6:	ee 0f       	add	r30, r30
    40e8:	ff 1f       	adc	r31, r31

000040ea <__tablejump__>:
    40ea:	05 90       	lpm	r0, Z+
    40ec:	f4 91       	lpm	r31, Z
    40ee:	e0 2d       	mov	r30, r0
    40f0:	09 94       	ijmp

000040f2 <__prologue_saves__>:
    40f2:	2f 92       	push	r2
    40f4:	3f 92       	push	r3
    40f6:	4f 92       	push	r4
    40f8:	5f 92       	push	r5
    40fa:	6f 92       	push	r6
    40fc:	7f 92       	push	r7
    40fe:	8f 92       	push	r8
    4100:	9f 92       	push	r9
    4102:	af 92       	push	r10
    4104:	bf 92       	push	r11
    4106:	cf 92       	push	r12
    4108:	df 92       	push	r13
    410a:	ef 92       	push	r14
    410c:	ff 92       	push	r15
    410e:	0f 93       	push	r16
    4110:	1f 93       	push	r17
    4112:	cf 93       	push	r28
    4114:	df 93       	push	r29
    4116:	cd b7       	in	r28, 0x3d	; 61
    4118:	de b7       	in	r29, 0x3e	; 62
    411a:	ca 1b       	sub	r28, r26
    411c:	db 0b       	sbc	r29, r27
    411e:	0f b6       	in	r0, 0x3f	; 63
    4120:	f8 94       	cli
    4122:	de bf       	out	0x3e, r29	; 62
    4124:	0f be       	out	0x3f, r0	; 63
    4126:	cd bf       	out	0x3d, r28	; 61
    4128:	09 94       	ijmp

0000412a <__epilogue_restores__>:
    412a:	2a 88       	ldd	r2, Y+18	; 0x12
    412c:	39 88       	ldd	r3, Y+17	; 0x11
    412e:	48 88       	ldd	r4, Y+16	; 0x10
    4130:	5f 84       	ldd	r5, Y+15	; 0x0f
    4132:	6e 84       	ldd	r6, Y+14	; 0x0e
    4134:	7d 84       	ldd	r7, Y+13	; 0x0d
    4136:	8c 84       	ldd	r8, Y+12	; 0x0c
    4138:	9b 84       	ldd	r9, Y+11	; 0x0b
    413a:	aa 84       	ldd	r10, Y+10	; 0x0a
    413c:	b9 84       	ldd	r11, Y+9	; 0x09
    413e:	c8 84       	ldd	r12, Y+8	; 0x08
    4140:	df 80       	ldd	r13, Y+7	; 0x07
    4142:	ee 80       	ldd	r14, Y+6	; 0x06
    4144:	fd 80       	ldd	r15, Y+5	; 0x05
    4146:	0c 81       	ldd	r16, Y+4	; 0x04
    4148:	1b 81       	ldd	r17, Y+3	; 0x03
    414a:	aa 81       	ldd	r26, Y+2	; 0x02
    414c:	b9 81       	ldd	r27, Y+1	; 0x01
    414e:	ce 0f       	add	r28, r30
    4150:	d1 1d       	adc	r29, r1
    4152:	0f b6       	in	r0, 0x3f	; 63
    4154:	f8 94       	cli
    4156:	de bf       	out	0x3e, r29	; 62
    4158:	0f be       	out	0x3f, r0	; 63
    415a:	cd bf       	out	0x3d, r28	; 61
    415c:	ed 01       	movw	r28, r26
    415e:	08 95       	ret

00004160 <__udivmodhi4>:
    4160:	aa 1b       	sub	r26, r26
    4162:	bb 1b       	sub	r27, r27
    4164:	51 e1       	ldi	r21, 0x11	; 17
    4166:	07 c0       	rjmp	.+14     	; 0x4176 <__udivmodhi4_ep>

00004168 <__udivmodhi4_loop>:
    4168:	aa 1f       	adc	r26, r26
    416a:	bb 1f       	adc	r27, r27
    416c:	a6 17       	cp	r26, r22
    416e:	b7 07       	cpc	r27, r23
    4170:	10 f0       	brcs	.+4      	; 0x4176 <__udivmodhi4_ep>
    4172:	a6 1b       	sub	r26, r22
    4174:	b7 0b       	sbc	r27, r23

00004176 <__udivmodhi4_ep>:
    4176:	88 1f       	adc	r24, r24
    4178:	99 1f       	adc	r25, r25
    417a:	5a 95       	dec	r21
    417c:	a9 f7       	brne	.-22     	; 0x4168 <__udivmodhi4_loop>
    417e:	80 95       	com	r24
    4180:	90 95       	com	r25
    4182:	bc 01       	movw	r22, r24
    4184:	cd 01       	movw	r24, r26
    4186:	08 95       	ret

00004188 <__do_global_dtors>:
    4188:	13 e0       	ldi	r17, 0x03	; 3
    418a:	cc e4       	ldi	r28, 0x4C	; 76
    418c:	d3 e0       	ldi	r29, 0x03	; 3
    418e:	04 c0       	rjmp	.+8      	; 0x4198 <__do_global_dtors+0x10>
    4190:	fe 01       	movw	r30, r28
    4192:	0e 94 75 20 	call	0x40ea	; 0x40ea <__tablejump__>
    4196:	22 96       	adiw	r28, 0x02	; 2
    4198:	ce 34       	cpi	r28, 0x4E	; 78
    419a:	d1 07       	cpc	r29, r17
    419c:	c9 f7       	brne	.-14     	; 0x4190 <__do_global_dtors+0x8>
    419e:	f8 94       	cli

000041a0 <__stop_program>:
    41a0:	ff cf       	rjmp	.-2      	; 0x41a0 <__stop_program>
